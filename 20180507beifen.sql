-- MySQL dump 10.13  Distrib 5.1.73, for redhat-linux-gnu (x86_64)
--
-- Host: localhost    Database: wordpress
-- ------------------------------------------------------
-- Server version	5.1.73

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (1,1,'A WordPress Commenter','wapuu@wordpress.example','https://wordpress.org/','','2018-04-06 07:01:48','2018-04-06 07:01:48','Hi, this is a comment.\nTo get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.\nCommenter avatars come from <a href=\"https://gravatar.com\">Gravatar</a>.',0,'post-trashed','','',0,0),(2,64,'charles','charles@gmail.com','','111.204.113.130','2018-04-08 12:22:23','2018-04-08 12:22:23','太精简了吧！！',0,'1','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:59.0) Gecko/20100101 Firefox/59.0','',0,0),(3,64,'大拇哥','lvyz0207@163.com','http://blkid.cn','111.204.113.130','2018-04-08 12:23:32','2018-04-08 12:23:32','还好，还好！！',0,'1','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:59.0) Gecko/20100101 Firefox/59.0','',2,1);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=MyISAM AUTO_INCREMENT=577 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://blkid.cn','yes'),(2,'home','http://blkid.cn','yes'),(3,'blogname','大拇哥','yes'),(4,'blogdescription','Love need fighting to win!!','yes'),(5,'users_can_register','0','yes'),(6,'admin_email','lvyz0207@163.com','yes'),(7,'start_of_week','1','yes'),(8,'use_balanceTags','0','yes'),(9,'use_smilies','1','yes'),(10,'require_name_email','1','yes'),(11,'comments_notify','1','yes'),(12,'posts_per_rss','10','yes'),(13,'rss_use_excerpt','0','yes'),(14,'mailserver_url','mail.example.com','yes'),(15,'mailserver_login','login@example.com','yes'),(16,'mailserver_pass','password','yes'),(17,'mailserver_port','110','yes'),(18,'default_category','1','yes'),(19,'default_comment_status','open','yes'),(20,'default_ping_status','open','yes'),(21,'default_pingback_flag','0','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','F j, Y','yes'),(24,'time_format','g:i a','yes'),(25,'links_updated_date_format','F j, Y g:i a','yes'),(26,'comment_moderation','0','yes'),(27,'moderation_notify','1','yes'),(28,'permalink_structure','','yes'),(29,'rewrite_rules','','yes'),(30,'hack_file','0','yes'),(31,'blog_charset','UTF-8','yes'),(32,'moderation_keys','','no'),(33,'active_plugins','a:4:{i:0;s:19:\"akismet/akismet.php\";i:1;s:21:\"backwpup/backwpup.php\";i:2;s:9:\"hello.php\";i:3;s:33:\"wp-user-avatar/wp-user-avatar.php\";}','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'comment_max_links','2','yes'),(37,'gmt_offset','0','yes'),(38,'default_email_category','1','yes'),(39,'recently_edited','','no'),(40,'template','cyclone-blog','yes'),(41,'stylesheet','cyclone-blog','yes'),(42,'comment_whitelist','1','yes'),(43,'blacklist_keys','','no'),(44,'comment_registration','0','yes'),(45,'html_type','text/html','yes'),(46,'use_trackback','0','yes'),(47,'default_role','subscriber','yes'),(48,'db_version','38590','yes'),(49,'uploads_use_yearmonth_folders','1','yes'),(50,'upload_path','','yes'),(51,'blog_public','0','yes'),(52,'default_link_category','2','yes'),(53,'show_on_front','page','yes'),(54,'tag_base','','yes'),(55,'show_avatars','1','yes'),(56,'avatar_rating','G','yes'),(57,'upload_url_path','','yes'),(58,'thumbnail_size_w','150','yes'),(59,'thumbnail_size_h','150','yes'),(60,'thumbnail_crop','1','yes'),(61,'medium_size_w','300','yes'),(62,'medium_size_h','300','yes'),(63,'avatar_default','mystery','yes'),(64,'large_size_w','1024','yes'),(65,'large_size_h','1024','yes'),(66,'image_default_link_type','none','yes'),(67,'image_default_size','','yes'),(68,'image_default_align','','yes'),(69,'close_comments_for_old_posts','0','yes'),(70,'close_comments_days_old','14','yes'),(71,'thread_comments','1','yes'),(72,'thread_comments_depth','5','yes'),(73,'page_comments','0','yes'),(74,'comments_per_page','50','yes'),(75,'default_comments_page','newest','yes'),(76,'comment_order','asc','yes'),(77,'sticky_posts','a:0:{}','yes'),(78,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(79,'widget_text','a:5:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:4:\"text\";s:0:\"\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}i:3;a:4:{s:5:\"title\";s:0:\"\";s:4:\"text\";s:288:\"<span style=\"vertical-align: inherit;\"><span style=\"vertical-align: inherit;\"><span style=\"vertical-align: inherit;\"><span style=\"vertical-align: inherit;\"><span style=\"vertical-align: inherit;\"><span style=\"vertical-align: inherit;\">个人图片</span></span></span></span></span></span>\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}i:4;a:4:{s:5:\"title\";s:7:\"find me\";s:4:\"text\";s:42:\"<b>邮箱地址：</b>\r\n\r\nlvyz0207@163.com\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}i:5;a:4:{s:5:\"title\";s:5:\"About\";s:4:\"text\";s:257:\"<span style=\"vertical-align: inherit;\"><span style=\"vertical-align: inherit;\">记录生活和工作中的日志、技术博客、测试开发相关的技术文件，</span></span>还会包括从网络上转载的文档，均会标明出处，侵权删之。\";s:6:\"filter\";b:1;s:6:\"visual\";b:1;}s:12:\"_multiwidget\";i:1;}','yes'),(80,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'uninstall_plugins','a:0:{}','no'),(82,'timezone_string','','yes'),(84,'page_on_front','0','yes'),(85,'default_post_format','0','yes'),(86,'link_manager_enabled','0','yes'),(87,'finished_splitting_shared_terms','1','yes'),(88,'site_icon','0','yes'),(89,'medium_large_size_w','768','yes'),(90,'medium_large_size_h','0','yes'),(91,'initial_db_version','38590','yes'),(92,'wp_user_roles','a:8:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:71:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;s:8:\"backwpup\";b:1;s:13:\"backwpup_jobs\";b:1;s:18:\"backwpup_jobs_edit\";b:1;s:19:\"backwpup_jobs_start\";b:1;s:16:\"backwpup_backups\";b:1;s:25:\"backwpup_backups_download\";b:1;s:23:\"backwpup_backups_delete\";b:1;s:13:\"backwpup_logs\";b:1;s:20:\"backwpup_logs_delete\";b:1;s:17:\"backwpup_settings\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}s:14:\"backwpup_admin\";a:2:{s:4:\"name\";s:14:\"BackWPup Admin\";s:12:\"capabilities\";a:11:{s:4:\"read\";b:1;s:8:\"backwpup\";b:1;s:13:\"backwpup_jobs\";b:1;s:18:\"backwpup_jobs_edit\";b:1;s:19:\"backwpup_jobs_start\";b:1;s:16:\"backwpup_backups\";b:1;s:25:\"backwpup_backups_download\";b:1;s:23:\"backwpup_backups_delete\";b:1;s:13:\"backwpup_logs\";b:1;s:20:\"backwpup_logs_delete\";b:1;s:17:\"backwpup_settings\";b:1;}}s:14:\"backwpup_check\";a:2:{s:4:\"name\";s:21:\"BackWPup jobs checker\";s:12:\"capabilities\";a:11:{s:4:\"read\";b:1;s:8:\"backwpup\";b:1;s:13:\"backwpup_jobs\";b:1;s:18:\"backwpup_jobs_edit\";b:0;s:19:\"backwpup_jobs_start\";b:0;s:16:\"backwpup_backups\";b:1;s:25:\"backwpup_backups_download\";b:0;s:23:\"backwpup_backups_delete\";b:0;s:13:\"backwpup_logs\";b:1;s:20:\"backwpup_logs_delete\";b:0;s:17:\"backwpup_settings\";b:0;}}s:15:\"backwpup_helper\";a:2:{s:4:\"name\";s:20:\"BackWPup jobs helper\";s:12:\"capabilities\";a:11:{s:4:\"read\";b:1;s:8:\"backwpup\";b:1;s:13:\"backwpup_jobs\";b:1;s:18:\"backwpup_jobs_edit\";b:0;s:19:\"backwpup_jobs_start\";b:1;s:16:\"backwpup_backups\";b:1;s:25:\"backwpup_backups_download\";b:1;s:23:\"backwpup_backups_delete\";b:1;s:13:\"backwpup_logs\";b:1;s:20:\"backwpup_logs_delete\";b:1;s:17:\"backwpup_settings\";b:0;}}}','yes'),(93,'fresh_site','0','yes'),(94,'widget_search','a:4:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;i:3;a:1:{s:5:\"title\";s:6:\"Search\";}i:4;a:1:{s:5:\"title\";s:6:\"Search\";}}','yes'),(95,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(96,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(97,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(98,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(99,'sidebars_widgets','a:5:{s:19:\"wp_inactive_widgets\";a:3:{i:0;s:8:\"search-3\";i:1;s:6:\"text-2\";i:2;s:8:\"search-4\";}s:9:\"sidebar-1\";a:2:{i:0;s:6:\"text-3\";i:1;s:10:\"calendar-3\";}s:9:\"sidebar-2\";a:2:{i:0;s:6:\"text-4\";i:1;s:10:\"calendar-3\";}s:9:\"sidebar-3\";a:1:{i:0;s:6:\"text-5\";}s:13:\"array_version\";i:3;}','yes'),(108,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(109,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(110,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(111,'cron','a:6:{i:1525692370;a:2:{s:22:\"backwpup_check_cleanup\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:23:\"backwpup_update_message\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1525719723;a:2:{s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1525720001;a:1:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1525762967;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1525764509;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(113,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1525677647;s:8:\"response\";a:1:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"4.0.3\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.4.0.3.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:5:\"4.9.5\";s:12:\"requires_php\";N;s:13:\"compatibility\";O:8:\"stdClass\":0:{}}}s:12:\"translations\";a:3:{i:0;a:7:{s:4:\"type\";s:6:\"plugin\";s:4:\"slug\";s:7:\"akismet\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"4.0.2\";s:7:\"updated\";s:19:\"2017-11-10 03:23:38\";s:7:\"package\";s:74:\"https://downloads.wordpress.org/translation/plugin/akismet/4.0.2/zh_CN.zip\";s:10:\"autoupdate\";b:1;}i:1;a:7:{s:4:\"type\";s:6:\"plugin\";s:4:\"slug\";s:11:\"hello-dolly\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:3:\"1.6\";s:7:\"updated\";s:19:\"2018-03-20 01:42:43\";s:7:\"package\";s:76:\"https://downloads.wordpress.org/translation/plugin/hello-dolly/1.6/zh_CN.zip\";s:10:\"autoupdate\";b:1;}i:2;a:7:{s:4:\"type\";s:6:\"plugin\";s:4:\"slug\";s:14:\"wp-user-avatar\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"2.0.9\";s:7:\"updated\";s:19:\"2018-03-29 10:22:04\";s:7:\"package\";s:81:\"https://downloads.wordpress.org/translation/plugin/wp-user-avatar/2.0.9/zh_CN.zip\";s:10:\"autoupdate\";b:1;}}s:9:\"no_update\";a:3:{s:21:\"backwpup/backwpup.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:22:\"w.org/plugins/backwpup\";s:4:\"slug\";s:8:\"backwpup\";s:6:\"plugin\";s:21:\"backwpup/backwpup.php\";s:11:\"new_version\";s:5:\"3.4.5\";s:3:\"url\";s:39:\"https://wordpress.org/plugins/backwpup/\";s:7:\"package\";s:57:\"https://downloads.wordpress.org/plugin/backwpup.3.4.5.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:61:\"https://ps.w.org/backwpup/assets/icon-256x256.png?rev=1422084\";s:2:\"1x\";s:61:\"https://ps.w.org/backwpup/assets/icon-128x128.png?rev=1422084\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:64:\"https://ps.w.org/backwpup/assets/banner-1544x500.png?rev=1749799\";s:2:\"1x\";s:63:\"https://ps.w.org/backwpup/assets/banner-772x250.png?rev=1749799\";}s:11:\"banners_rtl\";a:0:{}}s:9:\"hello.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:25:\"w.org/plugins/hello-dolly\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:9:\"hello.php\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/hello-dolly.1.6.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-256x256.jpg?rev=969907\";s:2:\"1x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-128x128.jpg?rev=969907\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:65:\"https://ps.w.org/hello-dolly/assets/banner-772x250.png?rev=478342\";}s:11:\"banners_rtl\";a:0:{}}s:33:\"wp-user-avatar/wp-user-avatar.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:28:\"w.org/plugins/wp-user-avatar\";s:4:\"slug\";s:14:\"wp-user-avatar\";s:6:\"plugin\";s:33:\"wp-user-avatar/wp-user-avatar.php\";s:11:\"new_version\";s:5:\"2.0.9\";s:3:\"url\";s:45:\"https://wordpress.org/plugins/wp-user-avatar/\";s:7:\"package\";s:57:\"https://downloads.wordpress.org/plugin/wp-user-avatar.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:67:\"https://ps.w.org/wp-user-avatar/assets/icon-256x256.png?rev=1755722\";s:2:\"1x\";s:67:\"https://ps.w.org/wp-user-avatar/assets/icon-128x128.png?rev=1755722\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:68:\"https://ps.w.org/wp-user-avatar/assets/banner-772x250.png?rev=882713\";}s:11:\"banners_rtl\";a:0:{}}}}','no'),(114,'auth_key','g)ckZJ)bB/sXY(P&[!:7:-O%cg}.ekE8_?_.Ly0bCZQ:b#Q=|#kKF_`E^u0~X7r)','no'),(115,'auth_salt','%o0ML!Z[)<Jq?s:W{hTmfElt#nxD~u@Fr]48(N9o%mshv-D>n0Sdaj&<``Cm.75D','no'),(116,'logged_in_key','eo)dTYvQzM$p=ult>[Aw%{bBhlu{&]=#wwE]a L@w=Ee}<#$I2xQyk!HpQM6Tg{[','no'),(117,'logged_in_salt','|W{,CG3 D@j#ZlZ7.OQWy?E5|rmvA:3eE!ddAnynJ([WEB`(w $2ED#;I|&mOrQ[','no'),(574,'_site_transient_timeout_theme_roots','1525679450','no'),(575,'_site_transient_theme_roots','a:4:{s:12:\"cyclone-blog\";s:7:\"/themes\";s:13:\"twentyfifteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";}','no'),(121,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1525677652;s:7:\"checked\";a:4:{s:12:\"cyclone-blog\";s:3:\"0.9\";s:13:\"twentyfifteen\";s:3:\"1.9\";s:15:\"twentyseventeen\";s:3:\"1.4\";s:13:\"twentysixteen\";s:3:\"1.4\";}s:8:\"response\";a:2:{s:12:\"cyclone-blog\";a:4:{s:5:\"theme\";s:12:\"cyclone-blog\";s:11:\"new_version\";s:3:\"1.0\";s:3:\"url\";s:42:\"https://wordpress.org/themes/cyclone-blog/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/theme/cyclone-blog.1.0.zip\";}s:15:\"twentyseventeen\";a:4:{s:5:\"theme\";s:15:\"twentyseventeen\";s:11:\"new_version\";s:3:\"1.5\";s:3:\"url\";s:45:\"https://wordpress.org/themes/twentyseventeen/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/theme/twentyseventeen.1.5.zip\";}}s:12:\"translations\";a:2:{i:0;a:7:{s:4:\"type\";s:5:\"theme\";s:4:\"slug\";s:13:\"twentyfifteen\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:3:\"1.9\";s:7:\"updated\";s:19:\"2018-02-27 15:47:07\";s:7:\"package\";s:77:\"https://downloads.wordpress.org/translation/theme/twentyfifteen/1.9/zh_CN.zip\";s:10:\"autoupdate\";b:1;}i:1;a:7:{s:4:\"type\";s:5:\"theme\";s:4:\"slug\";s:15:\"twentyseventeen\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:3:\"1.4\";s:7:\"updated\";s:19:\"2017-12-15 16:35:19\";s:7:\"package\";s:79:\"https://downloads.wordpress.org/translation/theme/twentyseventeen/1.4/zh_CN.zip\";s:10:\"autoupdate\";b:1;}}}','no'),(118,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:2:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.5.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.5.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.5-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.5-new-bundled.zip\";s:7:\"partial\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.9.5-partial-4.zip\";s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.9.5\";s:7:\"version\";s:5:\"4.9.5\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:5:\"4.9.4\";}i:1;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.5.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.5.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.5-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.5-new-bundled.zip\";s:7:\"partial\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.9.5-partial-4.zip\";s:8:\"rollback\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.5-rollback-4.zip\";}s:7:\"current\";s:5:\"4.9.5\";s:7:\"version\";s:5:\"4.9.5\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:5:\"4.9.4\";s:9:\"new_files\";s:0:\"\";}}s:12:\"last_checked\";i:1525677653;s:15:\"version_checked\";s:5:\"4.9.4\";s:12:\"translations\";a:1:{i:0;a:7:{s:4:\"type\";s:4:\"core\";s:4:\"slug\";s:7:\"default\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-17 22:20:52\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/zh_CN.zip\";s:10:\"autoupdate\";b:1;}}}','no'),(124,'can_compress_scripts','1','no'),(127,'_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','1523041346','no'),(554,'wp_user_avatar_default_avatar_updated','1','yes'),(199,'theme_mods_cyclone-blog','a:3:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:1:{s:6:\"menu-1\";i:2;}s:19:\"footer_social_links\";a:0:{}}','yes'),(200,'theme_switch_menu_locations','a:2:{s:3:\"top\";i:2;s:6:\"social\";i:0;}','yes'),(100,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(101,'widget_calendar','a:2:{s:12:\"_multiwidget\";i:1;i:3;a:0:{}}','yes'),(102,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(103,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(104,'widget_media_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(105,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(106,'nonce_key','q`&Kn&?fO[F%8(r|_.F]^v2TX.,q5L|d?$b}Qk~aG@$d)RRo1LY]3x.7`v:|nobj','no'),(107,'nonce_salt','5&wpPL96ekw0`ezmjvohO@=zAA(/N!{~P&j{j>C7f01krSuhMHS,Vuy65@{*&BH8','no'),(135,'theme_mods_twentyseventeen','a:10:{s:18:\"custom_css_post_id\";i:-1;s:18:\"nav_menu_locations\";a:2:{s:3:\"top\";i:2;s:6:\"social\";i:0;}s:7:\"panel_1\";i:11;s:7:\"panel_2\";i:8;s:7:\"panel_3\";i:10;s:7:\"panel_4\";i:9;s:11:\"colorscheme\";s:6:\"custom\";s:15:\"colorscheme_hue\";i:114;s:12:\"header_image\";s:20:\"random-default-image\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1523152575;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:3:{i:0;s:8:\"search-3\";i:1;s:6:\"text-2\";i:2;s:8:\"search-4\";}s:9:\"sidebar-1\";a:2:{i:0;s:6:\"text-3\";i:1;s:10:\"calendar-3\";}s:9:\"sidebar-2\";a:1:{i:0;s:6:\"text-4\";}s:9:\"sidebar-3\";a:1:{i:0;s:6:\"text-5\";}}}}','yes'),(138,'theme_mods_twentyfifteen','a:6:{s:18:\"custom_css_post_id\";i:-1;s:16:\"background_color\";s:6:\"e9f2f9\";s:12:\"color_scheme\";s:4:\"blue\";s:17:\"sidebar_textcolor\";s:7:\"#a5a5a5\";s:23:\"header_background_color\";s:7:\"#55c3dc\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1522998540;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:6:\"text-2\";i:1;s:8:\"search-3\";i:2;s:6:\"text-3\";}s:9:\"sidebar-2\";a:1:{i:0;s:6:\"text-4\";}s:9:\"sidebar-3\";a:2:{i:0;s:6:\"text-5\";i:1;s:8:\"search-4\";}}}}','yes'),(227,'category_children','a:0:{}','yes'),(193,'_transient_twentyseventeen_categories','1','yes'),(139,'current_theme','Cyclone Blog','yes'),(140,'theme_switched','','yes'),(141,'theme_switched_via_customizer','','yes'),(142,'nav_menu_options','a:1:{s:8:\"auto_add\";a:0:{}}','yes'),(143,'customize_stashed_theme_mods','a:0:{}','no'),(159,'theme_mods_twentysixteen','a:1:{s:18:\"custom_css_post_id\";i:-1;}','yes'),(161,'_transient_twentysixteen_categories','1','yes'),(162,'_transient_twentyfifteen_categories','1','yes'),(217,'cyclone_blog_hide_msg','1','yes'),(494,'backwpup_cfg_hash','056af3','no'),(495,'backwpup_jobs','a:1:{i:1;a:10:{s:5:\"jobid\";i:1;s:10:\"backuptype\";s:7:\"archive\";s:4:\"type\";a:5:{i:0;s:7:\"DBCHECK\";i:1;s:6:\"DBDUMP\";i:2;s:4:\"FILE\";i:3;s:5:\"WPEXP\";i:4;s:8:\"WPPLUGIN\";}s:12:\"destinations\";a:0:{}s:4:\"name\";s:13:\"Job with ID 1\";s:14:\"mailaddresslog\";s:16:\"lvyz0207@163.com\";s:20:\"mailaddresssenderlog\";s:37:\"BackWPup 大拇哥 <lvyz0207@163.com>\";s:13:\"mailerroronly\";b:1;s:13:\"archiveformat\";s:4:\".zip\";s:11:\"archivename\";s:24:\"%Y-%m-%d_%H-%i-%s_%hash%\";}}','no'),(546,'wp_user_avatar_disable_gravatar','0','yes'),(547,'wp_user_avatar_edit_avatar','1','yes'),(548,'wp_user_avatar_resize_crop','0','yes'),(549,'wp_user_avatar_resize_h','96','yes'),(550,'wp_user_avatar_resize_upload','0','yes'),(551,'wp_user_avatar_resize_w','96','yes'),(552,'wp_user_avatar_tinymce','1','yes'),(553,'wp_user_avatar_upload_size_limit','0','yes'),(482,'_site_transient_browser_12c3bee867dd154df341cf7794acab6c','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"66.0.3359.139\";s:8:\"platform\";s:9:\"Macintosh\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(485,'_transient_timeout_feed_7d1d7866a17d17cf5f79e1f075b87a31','1525471905','no'),(555,'wp_user_avatar_users_updated','1','yes'),(556,'wp_user_avatar_media_updated','1','yes'),(493,'recently_activated','a:0:{}','yes'),(543,'widget_wp_user_avatar_profile','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(544,'avatar_default_wp_user_avatar','','yes'),(545,'wp_user_avatar_allow_upload','0','yes'),(481,'_site_transient_timeout_browser_12c3bee867dd154df341cf7794acab6c','1526033498','no'),(496,'backwpup_version','3.4.5','no'),(497,'backwpup_cfg_showadminbar','','no'),(498,'backwpup_cfg_showfoldersize','','no'),(499,'backwpup_cfg_protectfolders','1','no'),(500,'backwpup_cfg_jobmaxexecutiontime','30','no'),(501,'backwpup_cfg_jobstepretry','3','no'),(502,'backwpup_cfg_jobrunauthkey','c826f624','no'),(503,'backwpup_cfg_loglevel','normal_translated','no'),(504,'backwpup_cfg_jobwaittimems','0','no'),(505,'backwpup_cfg_jobdooutput','0','no'),(506,'backwpup_cfg_windows','0','no'),(507,'backwpup_cfg_maxlogs','30','no'),(508,'backwpup_cfg_gzlogs','0','no'),(509,'backwpup_cfg_logfolder','uploads/backwpup-056af3-logs/','no'),(510,'backwpup_cfg_httpauthuser','','no'),(511,'backwpup_cfg_httpauthpassword','','no'),(513,'backwpup_message_id_en','JVQWWZJAKVZSASDBOBYHSIDBNZSCAR3JOZSSAWLPOVZCAUTBORUW4Z34NB2HI4DTHIXS653POJSHA4TFONZS433SM4XXG5LQOBXXE5BPOBWHKZ3JNYXWEYLDNN3XA5LQF5ZGK5TJMV3XGL34','no'),(514,'backwpup_message_content_en','Are you happy with BackWPup? If you are satisfied with our free plugin and support, then please make us even happier and just take 30 seconds to leave a positive rating. :) We would really appreciate that and it will motivate our team to develop even more cool features for BackWPup!','no'),(515,'backwpup_message_button_text_en','Make Us Happy and Give Your Rating','no'),(516,'backwpup_message_url_en','https://wordpress.org/support/plugin/backwpup/reviews/','no'),(517,'backwpup_message_id_es','YKQUQYL2NZXXGIDGMVWGSY3FOMQHSIDEMFXG64ZAOR2SA5TBNRXXEYLDNHB3G3RBPRUHI5DQOM5C6L3XN5ZGI4DSMVZXGLTPOJTS643VOBYG64TUF5YGY5LHNFXC6YTBMNVXO4DVOAXXEZLWNFSXO4ZP','no'),(518,'backwpup_message_content_es','¿Estás contento con BackWPup? Si estás satisfecho con nuestro plugin y con el soporte gratuito, por favor, haznos aún más felices e invierte sólo 30 segundos en dejar una calificación positiva. :) ¡Estaremos muy agradecidos y eso motivará a nuestro equipo a desarrollar características aún más interesantes para BackWPup!','no'),(519,'backwpup_message_button_text_es','¡Haznos felices y danos tu valoración!','no'),(520,'backwpup_message_url_es','https://wordpress.org/support/plugin/backwpup/reviews/','no'),(521,'backwpup_message_id_fr','IRXW43TFFVXG65LTEB2W4ZJANZXXIZJAOBXXG2LUNF3GK7DIOR2HA4Z2F4XXO33SMRYHEZLTOMXG64THF5ZXK4DQN5ZHIL3QNR2WO2LOF5RGCY3LO5YHK4BPOJSXM2LFO5ZS67D4','no'),(522,'backwpup_message_content_fr','Êtes-vous satisfait de BackWPup ? Si vous êtes satisfait de notre extension gratuite et du support, alors veuillez nous faire plaisir et prendre seulement 30 secondes pour laisser une note positive. :) Nous apprécions vraiment cela et ceci motivera notre équipe à développer des fonctionnalités en plus cool pour BackWPup!','no'),(523,'backwpup_message_button_text_fr','Donne-nous une note positive','no'),(524,'backwpup_message_url_fr','https://wordpress.org/support/plugin/backwpup/reviews/','no'),(525,'backwpup_message_id_de','JVQWG2BAOVXHGIDHNTB3YY3LNRUWG2BAOVXGIIDHNFRCA5LOOMQGIZLJNZSSAQTFO5SXE5DVNZTXY2DUORYHGORPF53W64TEOBZGK43TFZXXEZZPON2XA4DPOJ2C64DMOVTWS3RPMJQWG23XOB2XAL3SMV3GSZLXOMXXY7D4','no'),(526,'backwpup_message_content_de','Bist du glücklich mit BackWPup? Wenn du mit unserem freien Plugin und unserem Support zufrieden bist, dann mach auch uns glücklich und gib uns 30 Sekunden deiner Zeit, um uns eine gute Bewertung zu hinterlassen. :) Wir würden uns wirklich sehr darüber freuen, es würde uns motivieren, noch coolere Features für BackWPup zu entwickeln!','no'),(527,'backwpup_message_button_text_de','Mach uns glücklich und gib uns deine Bewertung','no'),(528,'backwpup_message_url_de','https://wordpress.org/support/plugin/backwpup/reviews/','no'),(529,'backwpup_message_id_it','I5ZGC6TJMUWCA3DBONRWSYJANFWCA5DVN4QGMZLFMRRGCY3LPRUHI5DQOM5C6L3XN5ZGI4DSMVZXGLTPOJTS643VOBYG64TUF5YGY5LHNFXC6YTBMNVXO4DVOAXXEZLWNFSXO4ZP','no'),(530,'backwpup_message_content_it','Ti piace BackWPup? Se sei soddisfatto della versione free e del supporto? Ci piacerebbe se potessi dedicarci 30 secondi e lasciare un feedback positivo. :) Lo apprezzerremo tanto ed inoltre motiverà il team a sviluppare nuove funzionalità per BackWPup!','no'),(531,'backwpup_message_button_text_it','Grazie, lascia il tuo feedback','no'),(532,'backwpup_message_url_it','https://wordpress.org/support/plugin/backwpup/reviews/','no'),(558,'widget_akismet_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(563,'backwpup_messages','a:0:{}','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM AUTO_INCREMENT=278 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (2,4,'_wp_attached_file','2018/04/espresso.jpg'),(3,4,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:2000;s:6:\"height\";i:1200;s:4:\"file\";s:20:\"2018/04/espresso.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(4,4,'_starter_content_theme','twentyseventeen'),(6,5,'_wp_attached_file','2018/04/sandwich.jpg'),(7,5,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:2000;s:6:\"height\";i:1200;s:4:\"file\";s:20:\"2018/04/sandwich.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(8,5,'_starter_content_theme','twentyseventeen'),(35,18,'_menu_item_xfn',''),(10,6,'_wp_attached_file','2018/04/coffee.jpg'),(11,6,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:2000;s:6:\"height\";i:1200;s:4:\"file\";s:18:\"2018/04/coffee.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(12,6,'_starter_content_theme','twentyseventeen'),(34,18,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(33,18,'_menu_item_target',''),(16,8,'_thumbnail_id','5'),(32,18,'_menu_item_object','custom'),(18,8,'_customize_changeset_uuid','0d4afdf0-e5af-4f71-8f5f-0d73e742e027'),(19,9,'_thumbnail_id','4'),(31,18,'_menu_item_object_id','18'),(21,9,'_customize_changeset_uuid','0d4afdf0-e5af-4f71-8f5f-0d73e742e027'),(22,10,'_thumbnail_id','6'),(30,18,'_menu_item_menu_item_parent','0'),(24,10,'_customize_changeset_uuid','0d4afdf0-e5af-4f71-8f5f-0d73e742e027'),(25,11,'_thumbnail_id','4'),(29,18,'_menu_item_type','custom'),(27,11,'_customize_changeset_uuid','0d4afdf0-e5af-4f71-8f5f-0d73e742e027'),(36,18,'_menu_item_url','http://blkid.cn/'),(37,19,'_menu_item_type','post_type'),(38,19,'_menu_item_menu_item_parent','0'),(39,19,'_menu_item_object_id','8'),(40,19,'_menu_item_object','page'),(41,19,'_menu_item_target',''),(42,19,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(43,19,'_menu_item_xfn',''),(44,19,'_menu_item_url',''),(45,20,'_menu_item_type','post_type'),(46,20,'_menu_item_menu_item_parent','0'),(47,20,'_menu_item_object_id','10'),(48,20,'_menu_item_object','page'),(49,20,'_menu_item_target',''),(50,20,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(51,20,'_menu_item_xfn',''),(52,20,'_menu_item_url',''),(53,21,'_menu_item_type','post_type'),(54,21,'_menu_item_menu_item_parent','0'),(55,21,'_menu_item_object_id','9'),(56,21,'_menu_item_object','page'),(57,21,'_menu_item_target',''),(58,21,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(59,21,'_menu_item_xfn',''),(60,21,'_menu_item_url',''),(164,47,'_edit_lock','1523098198:1'),(259,110,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:510;s:6:\"height\";i:340;s:4:\"file\";s:31:\"2018/04/flower-3313171__340.jpg\";s:5:\"sizes\";a:6:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:31:\"flower-3313171__340-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:31:\"flower-3313171__340-300x200.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:200;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:31:\"flower-3313171__340-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"cyclone_blog_gallery\";a:4:{s:4:\"file\";s:31:\"flower-3313171__340-500x340.jpg\";s:5:\"width\";i:500;s:6:\"height\";i:340;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:31:\"flower-3313171__340-368x240.jpg\";s:5:\"width\";i:368;s:6:\"height\";i:240;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:31:\"flower-3313171__340-220x190.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:6:\"EOS 7D\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(161,45,'_wp_trash_meta_time','1523097842'),(160,45,'_wp_trash_meta_status','publish'),(159,45,'_edit_lock','1523097798:1'),(158,44,'_wp_trash_meta_time','1523097567'),(157,44,'_wp_trash_meta_status','publish'),(156,44,'_edit_lock','1523097558:1'),(251,105,'_edit_last','1'),(192,53,'_wp_trash_meta_time','1523185896'),(191,53,'_wp_trash_meta_status','publish'),(188,1,'_edit_lock','1523177293:1'),(187,58,'_wp_trash_meta_time','1523152575'),(186,58,'_wp_trash_meta_status','publish'),(185,57,'_wp_trash_meta_time','1523099939'),(184,57,'_wp_trash_meta_status','publish'),(183,56,'_wp_trash_meta_time','1523099890'),(182,56,'_wp_trash_meta_status','publish'),(257,109,'_edit_last','1'),(258,110,'_wp_attached_file','2018/04/flower-3313171__340.jpg'),(256,109,'_edit_lock','1524041494:1'),(179,53,'_edit_lock','1523099607:1'),(178,53,'_edit_last','1'),(176,51,'_edit_lock','1523190028:1'),(175,51,'_edit_last','1'),(174,50,'_wp_trash_meta_time','1523099336'),(173,50,'_wp_trash_meta_status','publish'),(108,11,'_edit_lock','1522999064:1'),(109,11,'_edit_last','1'),(110,10,'_edit_lock','1523181226:1'),(111,10,'_edit_last','1'),(112,8,'_edit_last','1'),(113,8,'_edit_lock','1523000231:1'),(114,9,'_edit_last','1'),(115,9,'_edit_lock','1523185773:1'),(153,43,'_menu_item_url',''),(152,43,'_menu_item_xfn',''),(151,43,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(150,43,'_menu_item_target',''),(139,37,'_edit_last','1'),(140,37,'_edit_lock','1523001063:1'),(253,106,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1440;s:6:\"height\";i:2560;s:4:\"file\";s:25:\"2018/04/WechatIMG115.jpeg\";s:5:\"sizes\";a:10:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-150x150.jpeg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-169x300.jpeg\";s:5:\"width\";i:169;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:26:\"WechatIMG115-768x1365.jpeg\";s:5:\"width\";i:768;s:6:\"height\";i:1365;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:26:\"WechatIMG115-576x1024.jpeg\";s:5:\"width\";i:576;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-300x300.jpeg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"cyclone_blog_gallery\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-500x400.jpeg\";s:5:\"width\";i:500;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-368x240.jpeg\";s:5:\"width\";i:368;s:6:\"height\";i:240;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"cyclone_blog_detail_image\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-825x400.jpeg\";s:5:\"width\";i:825;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:31:\"cyclone_blog_portfolio_homepage\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-600x400.jpeg\";s:5:\"width\";i:600;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:25:\"WechatIMG115-220x190.jpeg\";s:5:\"width\";i:220;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:131:\"海岸灯塔在人生的航海征程中，心中永远要有一座明亮的灯塔，才能激励我们继续前行。©壹刻传媒\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(252,106,'_wp_attached_file','2018/04/WechatIMG115.jpeg'),(250,105,'_edit_lock','1523620094:1'),(146,43,'_menu_item_type','post_type'),(147,43,'_menu_item_menu_item_parent','0'),(148,43,'_menu_item_object_id','11'),(149,43,'_menu_item_object','page'),(154,43,'_menu_item_orphaned','1523096984'),(165,47,'_wp_trash_meta_status','publish'),(166,47,'_wp_trash_meta_time','1523098202'),(167,48,'_edit_lock','1523098294:1'),(168,48,'_wp_trash_meta_status','publish'),(169,48,'_wp_trash_meta_time','1523098309'),(170,49,'_wp_trash_meta_status','publish'),(171,49,'_wp_trash_meta_time','1523098467'),(172,50,'_edit_lock','1523099333:1'),(193,53,'_wp_desired_post_slug','%e5%8d%9a%e5%ae%a2'),(194,64,'_edit_lock','1523189673:1'),(195,64,'_edit_last','1'),(198,37,'_wp_trash_meta_status','publish'),(199,37,'_wp_trash_meta_time','1523189828'),(200,37,'_wp_desired_post_slug','%e7%ac%ac%e4%b8%80%e7%af%87%e4%b8%aa%e4%ba%ba%e5%8d%9a%e5%ae%a2%e7%bd%91%e7%ab%99'),(201,1,'_wp_trash_meta_status','publish'),(202,1,'_wp_trash_meta_time','1523189831'),(203,1,'_wp_desired_post_slug','hello-world'),(204,1,'_wp_trash_meta_comments_status','a:1:{i:1;s:1:\"1\";}'),(206,67,'_edit_lock','1523191419:1'),(207,67,'_edit_last','1'),(210,71,'_edit_lock','1523365179:1'),(211,71,'_edit_last','1'),(213,73,'_edit_lock','1523325237:1'),(214,73,'_edit_last','1'),(269,118,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1024;s:6:\"height\";i:883;s:4:\"file\";s:15:\"2018/05/345.jpg\";s:5:\"sizes\";a:10:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:15:\"345-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:15:\"345-300x259.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:259;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:15:\"345-768x662.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:662;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:16:\"345-1024x883.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:883;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:15:\"345-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"cyclone_blog_gallery\";a:4:{s:4:\"file\";s:15:\"345-500x400.jpg\";s:5:\"width\";i:500;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:15:\"345-368x240.jpg\";s:5:\"width\";i:368;s:6:\"height\";i:240;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"cyclone_blog_detail_image\";a:4:{s:4:\"file\";s:15:\"345-825x400.jpg\";s:5:\"width\";i:825;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:31:\"cyclone_blog_portfolio_homepage\";a:4:{s:4:\"file\";s:15:\"345-600x400.jpg\";s:5:\"width\";i:600;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:15:\"345-220x190.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(268,118,'_wp_attached_file','2018/05/345.jpg'),(267,117,'_edit_last','1'),(266,117,'_edit_lock','1525349912:1'),(263,112,'_edit_last','1'),(225,87,'_wp_attached_file','2018/04/e5969cb75e7ee0c9d38fc34c6686da41小运营图1.png'),(226,87,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:375;s:6:\"height\";i:160;s:4:\"file\";s:57:\"2018/04/e5969cb75e7ee0c9d38fc34c6686da41小运营图1.png\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:57:\"e5969cb75e7ee0c9d38fc34c6686da41小运营图1-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:57:\"e5969cb75e7ee0c9d38fc34c6686da41小运营图1-300x128.png\";s:5:\"width\";i:300;s:6:\"height\";i:128;s:9:\"mime-type\";s:9:\"image/png\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:57:\"e5969cb75e7ee0c9d38fc34c6686da41小运营图1-300x160.png\";s:5:\"width\";i:300;s:6:\"height\";i:160;s:9:\"mime-type\";s:9:\"image/png\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:57:\"e5969cb75e7ee0c9d38fc34c6686da41小运营图1-368x160.png\";s:5:\"width\";i:368;s:6:\"height\";i:160;s:9:\"mime-type\";s:9:\"image/png\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:57:\"e5969cb75e7ee0c9d38fc34c6686da41小运营图1-220x160.png\";s:5:\"width\";i:220;s:6:\"height\";i:160;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(262,112,'_edit_lock','1524046689:1'),(228,90,'_wp_attached_file','2018/04/100327002629.png'),(229,90,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:714;s:6:\"height\";i:537;s:4:\"file\";s:24:\"2018/04/100327002629.png\";s:5:\"sizes\";a:8:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:24:\"100327002629-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:24:\"100327002629-300x226.png\";s:5:\"width\";i:300;s:6:\"height\";i:226;s:9:\"mime-type\";s:9:\"image/png\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:24:\"100327002629-300x300.png\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:20:\"cyclone_blog_gallery\";a:4:{s:4:\"file\";s:24:\"100327002629-500x400.png\";s:5:\"width\";i:500;s:6:\"height\";i:400;s:9:\"mime-type\";s:9:\"image/png\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:24:\"100327002629-368x240.png\";s:5:\"width\";i:368;s:6:\"height\";i:240;s:9:\"mime-type\";s:9:\"image/png\";}s:25:\"cyclone_blog_detail_image\";a:4:{s:4:\"file\";s:24:\"100327002629-714x400.png\";s:5:\"width\";i:714;s:6:\"height\";i:400;s:9:\"mime-type\";s:9:\"image/png\";}s:31:\"cyclone_blog_portfolio_homepage\";a:4:{s:4:\"file\";s:24:\"100327002629-600x400.png\";s:5:\"width\";i:600;s:6:\"height\";i:400;s:9:\"mime-type\";s:9:\"image/png\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:24:\"100327002629-220x190.png\";s:5:\"width\";i:220;s:6:\"height\";i:190;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(230,91,'_wp_attached_file','2018/04/100327022731.jpg'),(231,91,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:717;s:6:\"height\";i:532;s:4:\"file\";s:24:\"2018/04/100327022731.jpg\";s:5:\"sizes\";a:8:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:24:\"100327022731-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:24:\"100327022731-300x223.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:223;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:24:\"100327022731-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"cyclone_blog_gallery\";a:4:{s:4:\"file\";s:24:\"100327022731-500x400.jpg\";s:5:\"width\";i:500;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:24:\"100327022731-368x240.jpg\";s:5:\"width\";i:368;s:6:\"height\";i:240;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"cyclone_blog_detail_image\";a:4:{s:4:\"file\";s:24:\"100327022731-717x400.jpg\";s:5:\"width\";i:717;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:31:\"cyclone_blog_portfolio_homepage\";a:4:{s:4:\"file\";s:24:\"100327022731-600x400.jpg\";s:5:\"width\";i:600;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:24:\"100327022731-220x190.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(234,94,'_edit_lock','1523366324:1'),(235,94,'_edit_last','1'),(236,95,'_wp_attached_file','2018/04/0792839387384297BFF215FDDD0B21D9.jpeg'),(237,95,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:794;s:6:\"height\";i:1123;s:4:\"file\";s:45:\"2018/04/0792839387384297BFF215FDDD0B21D9.jpeg\";s:5:\"sizes\";a:10:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-150x150.jpeg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-212x300.jpeg\";s:5:\"width\";i:212;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:46:\"0792839387384297BFF215FDDD0B21D9-768x1086.jpeg\";s:5:\"width\";i:768;s:6:\"height\";i:1086;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:46:\"0792839387384297BFF215FDDD0B21D9-724x1024.jpeg\";s:5:\"width\";i:724;s:6:\"height\";i:1024;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-300x300.jpeg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"cyclone_blog_gallery\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-500x400.jpeg\";s:5:\"width\";i:500;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-368x240.jpeg\";s:5:\"width\";i:368;s:6:\"height\";i:240;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"cyclone_blog_detail_image\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-794x400.jpeg\";s:5:\"width\";i:794;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:31:\"cyclone_blog_portfolio_homepage\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-600x400.jpeg\";s:5:\"width\";i:600;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:45:\"0792839387384297BFF215FDDD0B21D9-220x190.jpeg\";s:5:\"width\";i:220;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(242,101,'_edit_lock','1523501063:1'),(243,101,'_edit_last','1'),(247,103,'_edit_lock','1523536314:1'),(248,103,'_edit_last','1'),(254,105,'_thumbnail_id','106'),(260,109,'_thumbnail_id','110'),(270,117,'_thumbnail_id','118'),(272,120,'_edit_lock','1525399400:1'),(273,120,'_edit_last','1'),(274,121,'_wp_attached_file','2018/05/5678.jpg'),(275,121,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:600;s:6:\"height\";i:440;s:4:\"file\";s:16:\"2018/05/5678.jpg\";s:5:\"sizes\";a:8:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:16:\"5678-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:16:\"5678-300x220.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:220;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:19:\"cyclone_blog_medium\";a:4:{s:4:\"file\";s:16:\"5678-300x300.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:300;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:20:\"cyclone_blog_gallery\";a:4:{s:4:\"file\";s:16:\"5678-500x400.jpg\";s:5:\"width\";i:500;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:22:\"cyclone_blog_blog_list\";a:4:{s:4:\"file\";s:16:\"5678-368x240.jpg\";s:5:\"width\";i:368;s:6:\"height\";i:240;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"cyclone_blog_detail_image\";a:4:{s:4:\"file\";s:16:\"5678-600x400.jpg\";s:5:\"width\";i:600;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:31:\"cyclone_blog_portfolio_homepage\";a:4:{s:4:\"file\";s:16:\"5678-600x400.jpg\";s:5:\"width\";i:600;s:6:\"height\";i:400;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:35:\"cyclone_blog_blog_list_no_sidebar_1\";a:4:{s:4:\"file\";s:16:\"5678-220x190.jpg\";s:5:\"width\";i:220;s:6:\"height\";i:190;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(276,120,'_thumbnail_id','121');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(255) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=MyISAM AUTO_INCREMENT=124 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (1,1,'2018-04-06 07:01:48','2018-04-06 07:01:48','Welcome to WordPress. This is your first post. Edit or delete it, then start writing!','Hello world!','','trash','open','open','','hello-world__trashed','','','2018-04-08 12:17:11','2018-04-08 12:17:11','',0,'http://blkid.cn/?p=1',0,'post','',1),(4,1,'2018-04-06 07:05:40','2018-04-06 07:05:40','','Espresso','','inherit','open','closed','','espresso','','','2018-04-06 07:05:40','2018-04-06 07:05:40','',0,'http://blkid.cn/wp-content/uploads/2018/04/espresso.jpg',0,'attachment','image/jpeg',0),(5,1,'2018-04-06 07:05:40','2018-04-06 07:05:40','','Sandwich','','inherit','open','closed','','sandwich','','','2018-04-06 07:05:40','2018-04-06 07:05:40','',0,'http://blkid.cn/wp-content/uploads/2018/04/sandwich.jpg',0,'attachment','image/jpeg',0),(6,1,'2018-04-06 07:05:40','2018-04-06 07:05:40','','Coffee','','inherit','open','closed','','coffee','','','2018-04-06 07:05:40','2018-04-06 07:05:40','',0,'http://blkid.cn/wp-content/uploads/2018/04/coffee.jpg',0,'attachment','image/jpeg',0),(8,1,'2018-04-06 07:05:40','2018-04-06 07:05:40','You might be an artist who would like to introduce yourself and your work here or maybe you&rsquo;re a business with a mission to describe.','关于','','publish','closed','closed','','about','','','2018-04-06 07:37:11','2018-04-06 07:37:11','',0,'http://blkid.cn/?page_id=8',1,'page','',0),(9,1,'2018-04-06 07:05:41','2018-04-06 07:05:41','This is a page with some basic contact information, such as an address and phone number. You might also try a plugin to add a contact form.','联系','','publish','closed','closed','','contact','','','2018-04-06 07:36:34','2018-04-06 07:36:34','',0,'http://blkid.cn/?page_id=9',0,'page','',0),(10,1,'2018-04-06 07:05:41','2018-04-06 07:05:41','','博客','','publish','closed','closed','','blog','','','2018-04-06 07:36:32','2018-04-06 07:36:32','',0,'http://blkid.cn/?page_id=10',0,'page','',0),(11,1,'2018-04-06 07:05:41','2018-04-06 07:05:41','This is an example of a homepage section. Homepage sections can be any page other than the homepage itself, including the page that shows your latest blog posts.','主页','','publish','closed','closed','','a-homepage-section','','','2018-04-06 07:36:21','2018-04-06 07:36:21','',0,'http://blkid.cn/?page_id=11',0,'page','',0),(14,1,'2018-04-06 07:05:40','2018-04-06 07:05:40','You might be an artist who would like to introduce yourself and your work here or maybe you&rsquo;re a business with a mission to describe.','About','','inherit','closed','closed','','8-revision-v1','','','2018-04-06 07:05:40','2018-04-06 07:05:40','',8,'http://blkid.cn/?p=14',0,'revision','',0),(15,1,'2018-04-06 07:05:41','2018-04-06 07:05:41','This is a page with some basic contact information, such as an address and phone number. You might also try a plugin to add a contact form.','Contact','','inherit','closed','closed','','9-revision-v1','','','2018-04-06 07:05:41','2018-04-06 07:05:41','',9,'http://blkid.cn/?p=15',0,'revision','',0),(16,1,'2018-04-06 07:05:41','2018-04-06 07:05:41','','Blog','','inherit','closed','closed','','10-revision-v1','','','2018-04-06 07:05:41','2018-04-06 07:05:41','',10,'http://blkid.cn/?p=16',0,'revision','',0),(17,1,'2018-04-06 07:05:41','2018-04-06 07:05:41','This is an example of a homepage section. Homepage sections can be any page other than the homepage itself, including the page that shows your latest blog posts.','A homepage section','','inherit','closed','closed','','11-revision-v1','','','2018-04-06 07:05:41','2018-04-06 07:05:41','',11,'http://blkid.cn/?p=17',0,'revision','',0),(18,1,'2018-04-06 07:05:41','2018-04-06 07:05:41','','Home','','publish','closed','closed','','home','','','2018-04-06 07:05:41','2018-04-06 07:05:41','',0,'http://blkid.cn/?p=18',0,'nav_menu_item','',0),(19,1,'2018-04-06 07:05:41','2018-04-06 07:05:41',' ','','','publish','closed','closed','','19','','','2018-04-07 11:18:59','2018-04-07 11:18:59','',0,'http://blkid.cn/?p=19',4,'nav_menu_item','',0),(20,1,'2018-04-06 07:05:41','2018-04-06 07:05:41',' ','','','publish','closed','closed','','20','','','2018-04-07 11:18:59','2018-04-07 11:18:59','',0,'http://blkid.cn/?p=20',2,'nav_menu_item','',0),(21,1,'2018-04-06 07:05:41','2018-04-06 07:05:41',' ','','','publish','closed','closed','','21','','','2018-04-07 11:18:59','2018-04-07 11:18:59','',0,'http://blkid.cn/?p=21',3,'nav_menu_item','',0),(44,1,'2018-04-07 10:39:27','2018-04-07 10:39:27','{\"widget_text[4]\":{\"value\":{\"encoded_serialized_instance\":\"YTo0OntzOjU6InRpdGxlIjtzOjc6ImZpbmQgbWUiO3M6NDoidGV4dCI7czo0MjoiPGI+6YKu566x5Zyw5Z2A77yaPC9iPg0KDQpsdnl6MDIwN0AxNjMuY29tIjtzOjY6ImZpbHRlciI7YjoxO3M6NjoidmlzdWFsIjtiOjE7fQ==\",\"title\":\"find me\",\"is_widget_customizer_js_value\":true,\"instance_hash_key\":\"ae9e511ca5c28119872050de34bfd0fd\"},\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:34:08\"},\"widget_text[5]\":{\"value\":{\"encoded_serialized_instance\":\"YTo0OntzOjU6InRpdGxlIjtzOjU6IkFib3V0IjtzOjQ6InRleHQiO3M6MjU3OiI8c3BhbiBzdHlsZT0idmVydGljYWwtYWxpZ246IGluaGVyaXQ7Ij48c3BhbiBzdHlsZT0idmVydGljYWwtYWxpZ246IGluaGVyaXQ7Ij7orrDlvZXnlJ\\/mtLvlkozlt6XkvZzkuK3nmoTml6Xlv5fjgIHmioDmnK\\/ljZrlrqLjgIHmtYvor5XlvIDlj5Hnm7jlhbPnmoTmioDmnK\\/mlofku7bvvIw8L3NwYW4+PC9zcGFuPui\\/mOS8muWMheaLrOS7jue9kee7nOS4iui9rOi9veeahOaWh+aho++8jOWdh+S8muagh+aYjuWHuuWkhO+8jOS+teadg+WIoOS5i+OAgiI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\"title\":\"About\",\"is_widget_customizer_js_value\":true,\"instance_hash_key\":\"4754d7ebe26bf35672a0dee2896f982b\"},\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:39:09\"}}','','','trash','closed','closed','','2ec93f35-2d29-4428-8351-7d1e3cd80ab9','','','2018-04-07 10:39:27','2018-04-07 10:39:27','',0,'http://blkid.cn/?p=44',0,'customize_changeset','',0),(52,1,'2018-04-07 11:13:04','2018-04-07 11:13:04','<p data-source-line=\"2\">1、进入目录</p>\r\n\r\n<pre data-source-line=\"3\"><code class=\"hljs\"><span class=\"hljs-keyword\">cd</span> <span class=\"hljs-string\">/etc/ssh</span>\r\n</code></pre>\r\n<p data-source-line=\"6\">2、修改<code class=\"hljs\">ssh_config 文件</code></p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-attribute\">vi</span> ssh_config\r\n</code></pre>\r\n<p data-source-line=\"11\">找到port 并将#注释去掉 将22修改为 3506 Port 3506</p>\r\n<p data-source-line=\"14\">保存退出</p>\r\n<p data-source-line=\"16\">3、修改文件</p>\r\n\r\n<pre data-source-line=\"17\"><code class=\"hljs\"><span class=\"hljs-attribute\">vi</span> ssh_config\r\n</code></pre>\r\n<p data-source-line=\"20\">找到port 并将#注释去掉 将22修改为 3506 保存退出</p>\r\n<p data-source-line=\"23\">4、然后重启ssh服务</p>\r\n\r\n<pre data-source-line=\"24\"><code class=\"hljs\"><span class=\"hljs-attribute\">service sshd restart</span>\r\n</code></pre>\r\n<p data-source-line=\"27\">然后就可以使用3506的端口进行登陆</p>','修改服务器端口号','','inherit','closed','closed','','51-revision-v1','','','2018-04-07 11:13:04','2018-04-07 11:13:04','',51,'http://blkid.cn/?p=52',0,'revision','',0),(30,1,'2018-04-06 07:20:03','2018-04-06 07:20:03','This is an example of a homepage section. Homepage sections can be any page other than the homepage itself, including the page that shows your latest blog posts.','主页','','inherit','closed','closed','','11-revision-v1','','','2018-04-06 07:20:03','2018-04-06 07:20:03','',11,'http://blkid.cn/?p=30',0,'revision','',0),(31,1,'2018-04-06 07:20:35','2018-04-06 07:20:35','','博客','','inherit','closed','closed','','10-revision-v1','','','2018-04-06 07:20:35','2018-04-06 07:20:35','',10,'http://blkid.cn/?p=31',0,'revision','',0),(32,1,'2018-04-06 07:21:23','2018-04-06 07:21:23','You might be an artist who would like to introduce yourself and your work here or maybe you&rsquo;re a business with a mission to describe.','关于','','inherit','closed','closed','','8-revision-v1','','','2018-04-06 07:21:23','2018-04-06 07:21:23','',8,'http://blkid.cn/?p=32',0,'revision','',0),(33,1,'2018-04-06 07:22:27','2018-04-06 07:22:27','This is a page with some basic contact information, such as an address and phone number. You might also try a plugin to add a contact form.','联系','','inherit','closed','closed','','9-revision-v1','','','2018-04-06 07:22:27','2018-04-06 07:22:27','',9,'http://blkid.cn/?p=33',0,'revision','',0),(37,1,'2018-04-06 07:42:43','2018-04-06 07:42:43','这是我的第一个个人网站博客','第一篇个人博客网站','','trash','open','open','','%e7%ac%ac%e4%b8%80%e7%af%87%e4%b8%aa%e4%ba%ba%e5%8d%9a%e5%ae%a2%e7%bd%91%e7%ab%99__trashed','','','2018-04-08 12:17:08','2018-04-08 12:17:08','',0,'http://blkid.cn/?p=37',0,'post','',0),(38,1,'2018-04-06 07:42:43','2018-04-06 07:42:43','这是我的第一个个人网站博客','第一篇个人博客网站','','inherit','closed','closed','','37-revision-v1','','','2018-04-06 07:42:43','2018-04-06 07:42:43','',37,'http://blkid.cn/?p=38',0,'revision','',0),(105,1,'2018-04-13 11:50:31','2018-04-13 11:50:31','<p data-source-line=\"1\">Mac 修改python默认版本为python3</p>\r\n<p data-source-line=\"1\">可以修改</p>\r\n\r\n<pre data-source-line=\"2\"><code class=\"hljs\">vim ~/<span class=\"hljs-selector-class\">.bash_profile</span>\r\n</code></pre>\r\n<p data-source-line=\"5\">，修改path variable虽然比较安全。 找不到.bash_profile文件的可以使用find查找：</p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> / -name .bash_profile\r\n</code></pre>\r\n<p data-source-line=\"12\">然后在bash_profile文件添加下行（具体path取决python3安装路径）：</p>\r\n\r\n<pre data-source-line=\"14\"><code class=\"hljs\"><span class=\"hljs-keyword\">alias</span> <span class=\"hljs-keyword\">python</span>=<span class=\"hljs-string\">\"/System/Library/Frameworks/Python.framework/Versions/3.5/bin/python3.5\"</span>\r\n</code></pre>\r\n<p data-source-line=\"18\">然后重启一下Terminal。</p>\r\n<p data-source-line=\"20\">本人Mac上~/.bash_profile文件配置</p>\r\n\r\n<pre data-source-line=\"22\"><code class=\"hljs\">alias <span class=\"hljs-attribute\">python</span>=<span class=\"hljs-string\">\"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/Resources/Python.app/Contents/MacOS/Python\"</span>\r\nalias <span class=\"hljs-attribute\">pip</span>=<span class=\"hljs-string\">\"/usr/local/bin/pip3\"</span>\r\n\r\n<span class=\"hljs-comment\"># Setting PATH for Python 3.4</span>\r\n<span class=\"hljs-comment\"># The orginal/Library/Frameworks/Python.framework/Versions/3.4/bin version is saved in .bash_profile.pysave</span>\r\n<span class=\"hljs-attribute\">PATH</span>=<span class=\"hljs-string\">\"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/Resources/Python.app/Contents/MacOS/Python:<span class=\"hljs-variable\">${PATH}</span>\"</span>\r\n<span class=\"hljs-builtin-name\">export</span> PATH</code></pre>','Mac 修改python默认版本为python3','','publish','open','open','','mac-%e4%bf%ae%e6%94%b9python%e9%bb%98%e8%ae%a4%e7%89%88%e6%9c%ac%e4%b8%bapython3','','','2018-04-13 11:50:31','2018-04-13 11:50:31','',0,'http://blkid.cn/?p=105',0,'post','',0),(43,1,'2018-04-07 10:29:44','0000-00-00 00:00:00',' ','','','draft','closed','closed','','','','','2018-04-07 10:29:44','0000-00-00 00:00:00','',0,'http://blkid.cn/?p=43',1,'nav_menu_item','',0),(45,1,'2018-04-07 10:44:02','2018-04-07 10:44:02','{\"widget_text[3]\":{\"value\":{\"encoded_serialized_instance\":\"YTo0OntzOjU6InRpdGxlIjtzOjA6IiI7czo0OiJ0ZXh0IjtzOjEwNDoiPHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+PHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+5Liq5Lq65Zu+54mHPC9zcGFuPjwvc3Bhbj4iO3M6NjoiZmlsdGVyIjtiOjE7czo2OiJ2aXN1YWwiO2I6MTt9\",\"title\":\"\",\"is_widget_customizer_js_value\":true,\"instance_hash_key\":\"d22e6ca8cec2ecb5f805fb09fcb05c9b\"},\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:44:02\"},\"widget_text[2]\":{\"value\":{\"encoded_serialized_instance\":\"YTo0OntzOjU6InRpdGxlIjtzOjA6IiI7czo0OiJ0ZXh0IjtzOjA6IiI7czo2OiJmaWx0ZXIiO2I6MTtzOjY6InZpc3VhbCI7YjoxO30=\",\"title\":\"\",\"is_widget_customizer_js_value\":true,\"instance_hash_key\":\"a5220de4c2abd67283dce87f39dd5cd1\"},\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:43:09\"},\"sidebars_widgets[wp_inactive_widgets]\":{\"value\":[\"search-3\",\"text-2\"],\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:44:02\"},\"sidebars_widgets[sidebar-1]\":{\"value\":[\"text-3\"],\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:44:02\"}}','','','trash','closed','closed','','bba42291-31f6-4f3d-ba83-3521aceba528','','','2018-04-07 10:44:02','2018-04-07 10:44:02','',0,'http://blkid.cn/?p=45',0,'customize_changeset','',0),(47,1,'2018-04-07 10:50:02','2018-04-07 10:50:02','{\"widget_text[3]\":{\"value\":{\"encoded_serialized_instance\":\"YTo0OntzOjU6InRpdGxlIjtzOjA6IiI7czo0OiJ0ZXh0IjtzOjI4ODoiPHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+PHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+PHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+PHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+PHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+PHNwYW4gc3R5bGU9InZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyI+5Liq5Lq65Zu+54mHPC9zcGFuPjwvc3Bhbj48L3NwYW4+PC9zcGFuPjwvc3Bhbj48L3NwYW4+IjtzOjY6ImZpbHRlciI7YjoxO3M6NjoidmlzdWFsIjtiOjE7fQ==\",\"title\":\"\",\"is_widget_customizer_js_value\":true,\"instance_hash_key\":\"788ffb4d2dae98b1df27cecebb0c0674\"},\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:48:33\"},\"sidebars_widgets[sidebar-1]\":{\"value\":[\"text-3\",\"calendar-3\"],\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:47:33\"},\"widget_calendar[3]\":{\"value\":[],\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:47:33\"}}','','','trash','closed','closed','','cd907904-46e9-4ca3-80d4-498a789b5563','','','2018-04-07 10:50:02','2018-04-07 10:50:02','',0,'http://blkid.cn/?p=47',0,'customize_changeset','',0),(48,1,'2018-04-07 10:51:49','2018-04-07 10:51:49','{\"sidebars_widgets[wp_inactive_widgets]\":{\"value\":[\"search-3\",\"text-2\",\"search-4\"],\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:51:34\"},\"sidebars_widgets[sidebar-3]\":{\"value\":[\"text-5\"],\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:51:34\"},\"twentyseventeen::nav_menu_locations[top]\":{\"value\":0,\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:51:34\"},\"twentyseventeen::nav_menu_locations[social]\":{\"value\":0,\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:51:34\"}}','','','trash','closed','closed','','75d75983-034f-4873-a4b6-5d27baf1127a','','','2018-04-07 10:51:49','2018-04-07 10:51:49','',0,'http://blkid.cn/?p=48',0,'customize_changeset','',0),(49,1,'2018-04-07 10:54:27','2018-04-07 10:54:27','{\"twentyseventeen::colorscheme\":{\"value\":\"custom\",\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:54:27\"},\"twentyseventeen::colorscheme_hue\":{\"value\":114,\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 10:54:27\"}}','','','trash','closed','closed','','f0d9a60a-9903-4448-af79-86931a8423d5','','','2018-04-07 10:54:27','2018-04-07 10:54:27','',0,'http://blkid.cn/?p=49',0,'customize_changeset','',0),(50,1,'2018-04-07 11:08:56','2018-04-07 11:08:56','{\"blogname\":{\"value\":\"\\u5927\\u62c7\\u54e5\",\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:06:10\"},\"twentyseventeen::header_image\":{\"value\":\"random-default-image\",\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:07:10\"},\"twentyseventeen::header_image_data\":{\"value\":\"random-default-image\",\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:07:10\"},\"nav_menu[3]\":{\"value\":false,\"type\":\"nav_menu\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:08:10\"},\"nav_menu_item[24]\":{\"value\":false,\"type\":\"nav_menu_item\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:08:10\"},\"nav_menu_item[25]\":{\"value\":false,\"type\":\"nav_menu_item\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:08:10\"},\"nav_menu_item[26]\":{\"value\":false,\"type\":\"nav_menu_item\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:08:10\"},\"show_on_front\":{\"value\":\"page\",\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:08:53\"}}','','','trash','closed','closed','','3bf4402f-9884-4623-b720-ddffa117bc20','','','2018-04-07 11:08:56','2018-04-07 11:08:56','',0,'http://blkid.cn/?p=50',0,'customize_changeset','',0),(51,1,'2018-04-07 11:13:04','2018-04-07 11:13:04','<p data-source-line=\"2\">1、进入目录</p>\r\n\r\n<pre data-source-line=\"3\"><code class=\"hljs\"><span class=\"hljs-keyword\">cd</span> <span class=\"hljs-string\">/etc/ssh</span>\r\n</code></pre>\r\n<p data-source-line=\"6\">2、修改<code class=\"hljs\">ssh_config 文件</code></p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-attribute\">vi</span> ssh_config\r\n</code></pre>\r\n<p data-source-line=\"11\">找到port 并将#注释去掉 将22修改为 3506 Port 3506</p>\r\n<p data-source-line=\"14\">保存退出</p>\r\n<p data-source-line=\"16\">3、修改文件</p>\r\n\r\n<pre data-source-line=\"17\"><code class=\"hljs\"><span class=\"hljs-attribute\">vi</span> ssh_config\r\n</code></pre>\r\n<p data-source-line=\"20\">找到port 并将#注释去掉 将22修改为 3506 保存退出</p>\r\n<p data-source-line=\"23\">4、然后重启ssh服务</p>\r\n\r\n<pre data-source-line=\"24\"><code class=\"hljs\"><span class=\"hljs-attribute\">service sshd restart</span>\r\n</code></pre>\r\n<p data-source-line=\"27\">然后就可以使用3506的端口进行登陆</p>','修改服务器端口号','','publish','open','open','','%e4%bf%ae%e6%94%b9%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ab%af%e5%8f%a3%e5%8f%b7','','','2018-04-08 12:17:30','2018-04-08 12:17:30','',0,'http://blkid.cn/?p=51',0,'post','',0),(53,1,'2018-04-07 11:15:27','2018-04-07 11:15:27','','博客','','trash','closed','closed','','%e5%8d%9a%e5%ae%a2__trashed','','','2018-04-08 11:11:36','2018-04-08 11:11:36','',10,'http://blkid.cn/?page_id=53',0,'page','',0),(54,1,'2018-04-07 11:15:27','2018-04-07 11:15:27','','博客','','inherit','closed','closed','','53-revision-v1','','','2018-04-07 11:15:27','2018-04-07 11:15:27','',53,'http://blkid.cn/?p=54',0,'revision','',0),(117,1,'2018-05-03 12:20:29','2018-05-03 12:20:29','<p data-source-line=\"211\">github新建仓库分支后：</p>\r\n<p data-source-line=\"213\">echo \"# shanfeng\" &gt;&gt; <a href=\"http://README.md\">README.md</a></p>\r\n<p data-source-line=\"213\">1、初始化项目</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git init</code></p>\r\n<p data-source-line=\"213\">2、创建readme.md 文件</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git add README.md</code></p>\r\n<p data-source-line=\"213\">3、本地提交</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git commit -m \"first commit\"</code></p>\r\n<p data-source-line=\"213\">4、本地添加远程提交仓库</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git remote add origin https://github.com/doublepixel/shanfeng.git</code></p>\r\n<p data-source-line=\"213\">5、提交至远程仓库</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git push -u origin master</code></p>\r\n\r\n<pre data-source-line=\"215\"><img class=\"alignnone size-medium wp-image-118\" src=\"http://blkid.cn/wp-content/uploads/2018/05/345-300x259.jpg\" alt=\"\" width=\"300\" height=\"259\" /></pre>','git 本地创建版本，并同步至github','','publish','open','open','','git-%e6%9c%ac%e5%9c%b0%e5%88%9b%e5%bb%ba%e7%89%88%e6%9c%ac%ef%bc%8c%e5%b9%b6%e5%90%8c%e6%ad%a5%e8%87%b3github','','','2018-05-03 12:20:29','2018-05-03 12:20:29','',0,'http://blkid.cn/?p=117',0,'post','',0),(109,1,'2018-04-14 10:29:55','2018-04-14 10:29:55','本文转自：http://blog.51cto.com/tengxiansheng/1885340\r\n\r\nweb应用中，主观逻辑（视图处理）经常牵涉与数据库的交互。数据库驱动网站在后台连接数据库，从中取数据，然后甩漂亮界面展现在web端。许多复杂的网站都提供以上两种功能的结合（如Amazon.com），而Python天生具备简单强大的数据库查询执行方法，很适合开发这类数据库驱动网站。\r\n\r\n他就是下面介绍的Django数据库层！\r\n\r\n<strong>【 硬 编 码 链 接 数 据 库 】</strong>\r\n\r\ncat ~/HelloWorld/HelloWorld/view.py\r\n<div>\r\n<div id=\"highlighter_595705\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python keyword\">from</code> <code class=\"python plain\">django.shortcuts </code><code class=\"python keyword\">import</code> <code class=\"python plain\">render_to_response</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python keyword\">import</code> <code class=\"python plain\">MySQLdb</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">def</code> <code class=\"python plain\">book_list(request):</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">db </code><code class=\"python keyword\">=</code> <code class=\"python plain\">MySQLdb.connect(user</code><code class=\"python keyword\">=</code><code class=\"python string\">\'me\'</code><code class=\"python plain\">, db</code><code class=\"python keyword\">=</code><code class=\"python string\">\'mydb\'</code><code class=\"python plain\">, passwd</code><code class=\"python keyword\">=</code><code class=\"python string\">\'secret\'</code><code class=\"python plain\">, host</code><code class=\"python keyword\">=</code><code class=\"python string\">\'localhost\'</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">    </code><code class=\"python plain\">cursor </code><code class=\"python keyword\">=</code> <code class=\"python plain\">db.cursor()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">cursor.execute(</code><code class=\"python string\">\'SELECT name FROM books ORDER BY name\'</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">    </code><code class=\"python plain\">names </code><code class=\"python keyword\">=</code> <code class=\"python plain\">[row[</code><code class=\"python value\">0</code><code class=\"python plain\">] </code><code class=\"python keyword\">for</code> <code class=\"python plain\">row </code><code class=\"python keyword\">in</code> <code class=\"python plain\">cursor.fetchall()]</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">db.close()</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python keyword\">return</code> <code class=\"python plain\">render_to_response(</code><code class=\"python string\">\'book_list.html\'</code><code class=\"python plain\">, {</code><code class=\"python string\">\'names\'</code><code class=\"python plain\">: names})</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n弊端：此方法虽可用，但是我们将参数配置直接硬编码到视图函数，显然犯了前两节相同的错误；如果我们改一个参数、改一种数据库、换个执行语句等等，都会引起大范围的改动。\r\n\r\n那我们能不能像上节那样创建模板，其实django提供了更简单直接的方式：数据库API\r\n\r\n===============================================================================================\r\n\r\nMVC架构模式、MTV 开发模式\r\n\r\nDjango 设计遵循松耦合原则，修改某部分不影响其他部分。视图函数中通过了模板系统将业务逻辑和表现逻辑分隔，数据库层也应如此。\r\n\r\nMVC 架构模式：即数据存取逻辑（model）、表现逻辑（view）、业务逻辑（controller）的组合\r\n\r\n其中 C 由框架自行处理，django更关注的是模型（model）、模板（template）、视图（views），也被称MTV框架\r\n\r\nM：数据存取，处理与数据相关所有事务；\r\n\r\nT：表现层，处理与表现相关的决定，比如页面如何显示；\r\n\r\nV：视图，处理存取模型和调取模板的逻辑，可看做模型与模板的桥梁。\r\n\r\n注: django认为视图用来展现数据，控制器是如何展示；其他框架认为控制器用来展现数据，视图决定如何展现。\r\n\r\n================================================================================================\r\n\r\n上面所说的数据库API，其实就是更改django配置文件，通过配置文件的接口进数据库。\r\n<table cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td width=\"89\">数据库</td>\r\n<td width=\"140\">DATABASE_ENGINE</td>\r\n<td width=\"410\">适配器</td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">PostgreSQL</td>\r\n<td width=\"140\">postgresql</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-pgsql/1/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-pgsql/1/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">PostgreSQL</td>\r\n<td width=\"140\">postgresql_psycopg2</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-pgsql/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-pgsql/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">MySQL</td>\r\n<td width=\"140\">mysql</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-mysql/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-mysql/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">SQLite</td>\r\n<td width=\"140\">sqlite3</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-sqlite/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-sqlite/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">Oracle</td>\r\n<td width=\"140\">oracle</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-oracle/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-oracle/</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div>\r\n<div id=\"highlighter_878728\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">settings.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">DATABASES </code><code class=\"python keyword\">=</code> <code class=\"python plain\">{</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'default\'</code><code class=\"python plain\">: {</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">    </code><code class=\"python string\">\'ENGINE\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django.db.backends.mysql\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'NAME\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">    </code><code class=\"python string\">\'USER\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'PASSWORD\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django123\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python spaces\">    </code><code class=\"python string\">\'HOST\'</code><code class=\"python plain\">:</code><code class=\"python string\">\'localhost\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'PORT\'</code><code class=\"python plain\">:</code><code class=\"python string\">\'3306\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"python plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n之后去数据库建一个django库，并给django用户赋值。然后测试一下（没有报错信息即配置成功，并能链接到mysql的django库了，关于django报错信息，请参考下一节）：\r\n\r\n启动shell界面：python manage.py  shell\r\n\r\n&gt;&gt;&gt; from django.db import connection\r\n\r\n&gt;&gt;&gt; cursor = connection.cursor()\r\n\r\n<strong>【应用程序app 与 模型model.py】</strong>\r\n\r\n<strong>第 一 个 app  </strong>\r\n\r\nDjango规定：如果使用了django数据库层（或模型），必须要创建django app，把模型放在里面；应用程序app是项目project组成部分。\r\n\r\npython manage.py startapp mysql_django    #创建mysql_django app\r\n\r\n<a href=\"http://s2.51cto.com/wyfs02/M01/8B/E8/wKioL1hcETyAMEeSAAAWixnqf4s271.png\" target=\"_blank\" rel=\"noopener\"><img title=\"1.png\" src=\"http://s2.51cto.com/wyfs02/M01/8B/E8/wKioL1hcETyAMEeSAAAWixnqf4s271.png\" alt=\"wKioL1hcETyAMEeSAAAWixnqf4s271.png\" /></a>\r\n\r\n创建好app，将app加入到HelloWorld project中\r\n<div>\r\n<div id=\"highlighter_829413\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">settings.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">INSTALLED_APPS </code><code class=\"python keyword\">=</code> <code class=\"python plain\">[</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python string\">\'django.contrib.admin\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python string\">\'django.contrib.auth\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python string\">\'django.contrib.contenttypes\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python string\">\'django.contrib.sessions\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python string\">\'django.contrib.messages\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python string\">\'django.contrib.staticfiles\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>   <code class=\"python string\">\'mysql_django\'</code><code class=\"python plain\">,      </code><code class=\"python comments\">#逗号结尾，也可用点语法 HelloWorld.mysql_django</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python plain\">]</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>第 一 个 模 型  </strong>\r\n\r\n其实django模型就是以python代码表述数据库中表结构\r\n<div>\r\n<div id=\"highlighter_483391\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">mysql_django</code><code class=\"python keyword\">/</code><code class=\"python plain\">models.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">from</code> <code class=\"python plain\">django.db </code><code class=\"python keyword\">import</code> <code class=\"python plain\">models</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Publisher(models.Model): </code><code class=\"python comments\">#CREATE TABLE \"books_publisher\"(\"id\" serial NOT NULL PRIMARY KEY,</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">)   </code><code class=\"python comments\">#\"name\" varchar(30) NOT NULL,</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">address </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">50</code><code class=\"python plain\">) </code><code class=\"python comments\">#\"address\" varchar(50) NOT NULL,</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">city </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">60</code><code class=\"python plain\">)    </code><code class=\"python comments\">#\"city\" varchar(60) NOT NULL,</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">state_province </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">) </code><code class=\"python comments\">#\"state_province\" varchar(30) NOT NULL,</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">country </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">50</code><code class=\"python plain\">) </code><code class=\"python comments\">#\"country\" varchar(50) NOT NULL,</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">website </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.URLField()        </code><code class=\"python comments\">#\"website\" varchar(200) NOT NULL );</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"python spaces\">                        </code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Author(models.Model):</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">first_name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">last_name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">40</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">email </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.EmailField()</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"python spaces\">   </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Book(models.Model):          </code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">title </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">100</code><code class=\"python plain\">)           </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">authors </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.ManyToManyField(Author)</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">publisher </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.ForeignKey(Publisher)</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">publication_date </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.DateField()</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n代码解读：\r\n\r\n1、首先每个数据模型都是django.db.models.Model的子类，父类Model包含所有与数据库交互的必要方法；\r\n\r\n2、每个模型相当于数据库表，每个属性即字段，类型(CharField)相当于字段类型(varchar)\r\n\r\n3、Publisher举例，python语法即等于右边的数据库语法。\r\n\r\n4、定义了出版商、作者、书籍的一些内容。\r\n\r\n当完成以上模型建表后，并将其app加入到了项目，接下来就开始执行建表了\r\n\r\na、检查语法错误（django1.9.0版本以下用 python manage.py validate）\r\n\r\npython  manage.py  check\r\n\r\nb、生成数据库迁移文件（在app下的migrations下生成0001文件，更改后执行，生成0002....迁移文件）\r\n\r\npython  manage.py  makemigrations mysql_django\r\n\r\nc、同步数据库（老版本用python manage.py syncdb，即把迁移文件转换语法同步数据库[库名app名_类名]）\r\n\r\npython  manage.py  migrate\r\n\r\nd、转换成 SQL 语言（老版本 python manage.py sqlall mysql_django，查看转换后的mysql语法）\r\n\r\npython  manage.py  sqlmigrate  mysql_django  0001\r\n\r\n<strong>【Python 与 数 据 库 API】</strong>\r\n\r\n进入：python manage.py shell\r\n\r\n&gt;&gt;&gt; from mysql_django.models  import Publisher      #导入Publisher模型类\r\n\r\n&gt;&gt;&gt; p1 = Publisher(name=\'Apress\', address=\'2855 Telegraph Avenue\',\r\n\r\n...     city=\'Berkeley\', state_province=\'CA\', country=\'U.S.A.\',\r\n\r\n...     website=\'<a href=\"http://www.apress.com/\')\" target=\"_blank\" rel=\"noopener\">http://www.apress.com/\')</a>\r\n\r\n&gt;&gt;&gt; p1.save()                    #调用了save()方法，才能真正将p1插入数据库\r\n\r\n&gt;&gt;&gt; p2 = Publisher.objects.create(name=\"O\'Reilly\",\r\n\r\n...     address=\'10 Fawcett St.\', city=\'Cambridge\',\r\n\r\n...     state_province=\'MA\', country=\'U.S.A.\',\r\n\r\n...     website=\'http://www.oreilly.com/\')    #objects.create()方法可直接将数据插入数据库\r\n\r\n&gt;&gt;&gt; publisher_list = Publisher.objects.all()    #从数据库取出出版商信息==select\r\n\r\n&gt;&gt;&gt; publisher_list\r\n\r\n[&lt;Publisher: Publisher object&gt;, &lt;Publisher: Publisher object&gt;]\r\n\r\n插入两个数据后，讲道理Publisher.objects.all()方法会取出Publisher类的对象，但是却没有得到有用信息；\r\n\r\n解决此问题：要为Publisher对象添加一个__unicode__()方法，他告诉python将对象以unicode方式显示，如下：\r\n<div>\r\n<div id=\"highlighter_677995\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">mysql_django</code><code class=\"python keyword\">/</code><code class=\"python plain\">models.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">from</code> <code class=\"python plain\">django.db </code><code class=\"python keyword\">import</code> <code class=\"python plain\">models</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Publisher(models.Model):</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">     </code><code class=\"python plain\">......................</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">website </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.URLField()</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>      <code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>       <code class=\"python keyword\">return</code> <code class=\"python color1\">self</code><code class=\"python plain\">.name</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Author(models.Model):</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">.........................</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>    <code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>       <code class=\"python keyword\">return</code> <code class=\"python plain\">u</code><code class=\"python string\">\'%s %s\'</code> <code class=\"python keyword\">%</code> <code class=\"python plain\">(</code><code class=\"python color1\">self</code><code class=\"python plain\">.first_name, </code><code class=\"python color1\">self</code><code class=\"python plain\">.last_name)</code><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Book(models.Model):</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">.........................</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>    <code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>       <code class=\"python keyword\">return</code> <code class=\"python color1\">self</code><code class=\"python plain\">.title</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n============================================================================================\r\n\r\n<strong>unicode对象</strong> 是能处理上百万不同类的字符串的python字符串。普通的python字符串是经过编码的，穿插调用的话就会出现常见的???等乱七八糟的字符，这就是编码的问题；而unicode对象没有编码，使用它可以不用考虑编码的问题。所以请确保每个模型都定义了__unicode__()方法。\r\n\r\n关于unicode：<a href=\"http://www.joelonsoftware.com/articles/Unicode.html\" target=\"_blank\" rel=\"noopener\">http://www.joelonsoftware.com/articles/Unicode.html</a>\r\n\r\n再次进入shell解释器内，试验：&gt;&gt;&gt; publisher_list\r\n\r\n[&lt;Publisher: Apress&gt;, &lt;Publisher: O\'Reilly&gt;]\r\n\r\n============================================================================================\r\n\r\n1、数据查看、过滤操作：\r\n\r\n&gt;&gt;&gt; Publisher.objects.filter(name=\'Apress\')\r\n[&lt;Publisher: Apress&gt;]          #filter == where name=\'Apress\'\r\n&gt;&gt;&gt; Publisher.objects.filter(country=\"U.S.A.\", state_province=\"CA\")\r\n[&lt;Publisher: Apress&gt;]          #逗号转换成了 and\r\n&gt;&gt;&gt; Publisher.objects.filter(name__contains=\"press\")\r\n[&lt;Publisher: Apress&gt;]          #__contains  = where name LIKE \'%press%\';\r\n&gt;&gt;&gt; Publisher.objects.get(name=\"Apress\")\r\n&lt;Publisher: Apress&gt;           #get()方法获取单个对象，filter()函数返回一个记录集(列表)\r\n\r\n（icontains[大小写无关的LIKE]、startwith/endswith、range[BETWEEN]）\r\n\r\n2、数据排序操作：\r\n&gt;&gt;&gt; Publisher.objects.order_by(\"name\")\r\n[&lt;Publisher: Apress&gt;, &lt;Publisher: O\'Reilly&gt;]     #按字母排序\r\n&gt;&gt;&gt; Publisher.objects.order_by(\"state_province\", \"address\")\r\n[&lt;Publisher: Apress&gt;, &lt;Publisher: O\'Reilly&gt;]     #第一个字段相同，按第二个排序\r\n&gt;&gt;&gt; Publisher.objects.order_by(\"-name\")\r\n[&lt;Publisher: O\'Reilly&gt;, &lt;Publisher: Apress&gt;]     #-号，表示逆向排序\r\n<div>\r\n<div id=\"highlighter_927997\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">mysql_django</code><code class=\"python keyword\">/</code><code class=\"python plain\">models.py   </code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Publisher(models.Model):</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">    </code><code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">      </code><code class=\"python keyword\">return</code> <code class=\"python color1\">self</code><code class=\"python plain\">.name</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>   <code class=\"python keyword\">class</code> <code class=\"python plain\">Meta:              </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>     <code class=\"python plain\">ordering </code><code class=\"python keyword\">=</code> <code class=\"python plain\">[</code><code class=\"python string\">\'name\'</code><code class=\"python plain\">]  </code><code class=\"python comments\">#Meta类，默认会以name字段进行排序</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n3、连锁查询：\r\n&gt;&gt;&gt; Publisher.objects.filter(country=\"U.S.A.\").order_by(\"-name\")\r\n[&lt;Publisher: O\'Reilly&gt;, &lt;Publisher: Apress&gt;]  #检索country=\"U.S.A.\"降序排列\r\n&gt;&gt;&gt; Publisher.objects.order_by(\'name\')[0:2]   #取数据的特定子集=offset 0 limit 2，查询语句也可以加\r\n&gt;&gt;&gt; Publisher.objects.order_by(\'name\')[0]    #[0]=limit 1；不支持负索引[-1]，但可用降序[0]实现\r\n&lt;Publisher: Apress&gt;\r\n\r\n4、增加更改操作：（name、save、id、update）\r\n\r\n添加数据：&gt;&gt;&gt; p3 = ....name=\'Apress\' ...\r\n\r\n获取数据：&gt;&gt;&gt; p2 = Publisher.objects.get(name=\"Apress\")\r\n\r\n更改数据：&gt;&gt;&gt; p2.name = \'Apress Publishing\'\r\n\r\n保存数据：&gt;&gt;&gt; p2.save()    #他会update此id全部字段，不只是name字段；也有轻量级更改的方法。\r\n\r\n看主键id：&gt;&gt;&gt; p2.id      #我们可根据get到的数据查id，也可直接进数据库查\r\n\r\n更改数据：&gt;&gt;&gt; Publisher.objects.filter(id=1).update(name=\'Apress Publishing\')\r\n\r\n批量更改：&gt;&gt;&gt; Publisher.objects.all().update(country=\'USA\')    #返回数值即更改的条数\r\n\r\n5、删除命令操作：\r\n\r\n获取数据：&gt;&gt;&gt; p = Publisher.objects.get(name=\"O\'Reilly\")      #先得到数据再删除\r\n\r\n删除数据：&gt;&gt;&gt; p.delete()\r\n\r\n直接删除：&gt;&gt;&gt; Publisher.objects.filter(country=\'USA\').delete()  #删除所有country=\'USA\'的\r\n\r\n删除全部：&gt;&gt;&gt; Publisher.objects.all().delete()            #不加all()方法删除不了\r\n\r\n查看数据：&gt;&gt;&gt; Publisher.objects.all()\r\n\r\n当然，以上的操作都是直接在shell解释器中操作，我们也可以写到视图函数中，页面化查看。','【转】Django -- 模型（数据库层）','','publish','open','open','','%e3%80%90%e8%bd%ac%e3%80%91django-%e6%a8%a1%e5%9e%8b%ef%bc%88%e6%95%b0%e6%8d%ae%e5%ba%93%e5%b1%82%ef%bc%89','','','2018-04-14 10:29:55','2018-04-14 10:29:55','',0,'http://blkid.cn/?p=109',0,'post','',0),(56,1,'2018-04-07 11:18:10','2018-04-07 11:18:10','{\"twentyseventeen::nav_menu_locations[top]\":{\"value\":2,\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:18:10\"}}','','','trash','closed','closed','','a4455e66-22e1-491f-a8aa-97338a2c3d24','','','2018-04-07 11:18:10','2018-04-07 11:18:10','',0,'http://blkid.cn/?p=56',0,'customize_changeset','',0),(57,1,'2018-04-07 11:18:59','2018-04-07 11:18:59','{\"nav_menu_item[19]\":{\"value\":{\"menu_item_parent\":0,\"object_id\":8,\"object\":\"page\",\"type\":\"post_type\",\"type_label\":\"Page\",\"url\":\"http:\\/\\/blkid.cn\\/?page_id=8\",\"title\":\"\",\"target\":\"\",\"attr_title\":\"\",\"description\":\"\",\"classes\":\"\",\"xfn\":\"\",\"nav_menu_term_id\":2,\"position\":4,\"status\":\"publish\",\"original_title\":\"\\u5173\\u4e8e\",\"_invalid\":false},\"type\":\"nav_menu_item\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:18:59\"},\"nav_menu_item[20]\":{\"value\":{\"menu_item_parent\":0,\"object_id\":10,\"object\":\"page\",\"type\":\"post_type\",\"type_label\":\"Page\",\"url\":\"http:\\/\\/blkid.cn\\/?page_id=10\",\"title\":\"\",\"target\":\"\",\"attr_title\":\"\",\"description\":\"\",\"classes\":\"\",\"xfn\":\"\",\"nav_menu_term_id\":2,\"position\":2,\"status\":\"publish\",\"original_title\":\"\\u535a\\u5ba2\",\"_invalid\":false},\"type\":\"nav_menu_item\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:18:59\"},\"nav_menu_item[21]\":{\"value\":{\"menu_item_parent\":0,\"object_id\":9,\"object\":\"page\",\"type\":\"post_type\",\"type_label\":\"Page\",\"url\":\"http:\\/\\/blkid.cn\\/?page_id=9\",\"title\":\"\",\"target\":\"\",\"attr_title\":\"\",\"description\":\"\",\"classes\":\"\",\"xfn\":\"\",\"nav_menu_term_id\":2,\"position\":3,\"status\":\"publish\",\"original_title\":\"\\u8054\\u7cfb\",\"_invalid\":false},\"type\":\"nav_menu_item\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-07 11:18:59\"}}','','','trash','closed','closed','','b4bf037c-0da6-4022-b4ef-0b690820ef9e','','','2018-04-07 11:18:59','2018-04-07 11:18:59','',0,'http://blkid.cn/?p=57',0,'customize_changeset','',0),(58,1,'2018-04-08 01:56:15','2018-04-08 01:56:15','{\"old_sidebars_widgets_data\":{\"value\":{\"wp_inactive_widgets\":[\"search-3\",\"text-2\",\"search-4\"],\"sidebar-1\":[\"text-3\",\"calendar-3\"],\"sidebar-2\":[\"text-4\"],\"sidebar-3\":[\"text-5\"]},\"type\":\"global_variable\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-08 01:56:15\"},\"sidebars_widgets[sidebar-2]\":{\"value\":[\"text-4\",\"calendar-3\"],\"type\":\"option\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-08 01:56:15\"},\"cyclone-blog::nav_menu_locations[menu-1]\":{\"value\":2,\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-08 01:56:15\"},\"cyclone-blog::footer_social_links\":{\"value\":\"%5B%5D\",\"type\":\"theme_mod\",\"user_id\":1,\"date_modified_gmt\":\"2018-04-08 01:56:15\"}}','','','trash','closed','closed','','8cd06fb4-6e1a-4789-b557-ce10cbfa9aad','','','2018-04-08 01:56:15','2018-04-08 01:56:15','',0,'http://blkid.cn/?p=58',0,'customize_changeset','',0),(64,1,'2018-04-08 12:11:01','2018-04-08 12:11:01','<h3 id=\"登录github\" data-source-line=\"1\">github</h3>\r\n<p data-source-line=\"3\">（1）克隆服务器代码</p>\r\n\r\n<pre data-source-line=\"4\"><code class=\"hljs\">$ git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">git</span>@git.hst.git\r\n</code></pre>\r\n<p data-source-line=\"7\">（2）查看分支</p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git branch</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">（3）切换分支到1.0</p>\r\n\r\n<pre data-source-line=\"14\"><code class=\"hljs\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git checkout v1.0</span>\r\n</code></pre>\r\n<p data-source-line=\"19\">（4）拉1.0分支的代码</p>\r\n\r\n<pre data-source-line=\"21\"><code class=\"hljs\">$ git pull <span class=\"hljs-keyword\">origin </span><span class=\"hljs-built_in\">v1</span>.<span class=\"hljs-number\">0</span>\r\n</code></pre>\r\n<p data-source-line=\"26\">（5） 查看改动的文件</p>\r\n\r\n<pre data-source-line=\"28\"><code class=\"hljs\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git status</span>\r\n</code></pre>\r\n<p data-source-line=\"33\">（6）提交代码</p>\r\n\r\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">、</span>git <span class=\"hljs-keyword\">add</span><span class=\"bash\"> venues_manage_test.py		\r\n</span><span class=\"hljs-number\">2</span><span class=\"zh-hans\">、</span>git commit -m <span class=\"hljs-string\">\"<span class=\"zh-hans\">增加</span>XXXX<span class=\"zh-hans\">文件</span>\"</span>\r\n</code></pre>\r\n<p data-source-line=\"39\">3、提交至本地仓库</p>\r\n\r\n<pre data-source-line=\"41\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">push </span>origin <span class=\"hljs-built_in\">v1</span>.<span class=\"hljs-number\">0</span>\r\n</code></pre>\r\n<p data-source-line=\"44\">向服务器推送代码至1.0分支</p>\r\n<p data-source-line=\"47\">(7)为远程服务器添加一个别名</p>\r\n\r\n<pre data-source-line=\"49\"><code class=\"hljs\">git remote <span class=\"hljs-keyword\">add</span><span class=\"bash\">  bieming https://git.oschina.net/abcdefg.git\r\n</span></code></pre>\r\n<p data-source-line=\"54\">（8）</p>\r\n\r\n<pre data-source-line=\"55\"><code class=\"hljs\">git checkout <span class=\"hljs-keyword\">master</span>\r\n</code></pre>\r\n<p data-source-line=\"58\">切换至master分支</p>\r\n<p data-source-line=\"60\">（9）合并分支 1、分支将修改完成的问题或bug，提交至</p>\r\n\r\n<pre data-source-line=\"62\"><code class=\"hljs\"><span class=\"hljs-string\">git </span><span class=\"hljs-string\">commit </span><span class=\"hljs-built_in\">--m</span> <span class=\"hljs-string\">\'modify\'</span>\r\n</code></pre>\r\n<p data-source-line=\"66\">2、先将分支切换至master</p>\r\n\r\n<pre data-source-line=\"67\"><code class=\"hljs\">git checkout <span class=\"hljs-keyword\">master</span>\r\n</code></pre>\r\n<p data-source-line=\"71\">3、查看分支</p>\r\n\r\n<pre data-source-line=\"72\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch\r\n</span></code></pre>\r\n<p data-source-line=\"76\">4、合并分支至master</p>\r\n\r\n<pre data-source-line=\"77\"><code class=\"hljs\">git <span class=\"hljs-keyword\">merge</span>  <span class=\"zh-hans\">分支名称</span>\r\n</code></pre>\r\n<p data-source-line=\"81\">5、删除分支</p>\r\n\r\n<pre data-source-line=\"82\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch </span>-d	<span class=\"zh-hans\">分支名称</span>\r\n</code></pre>\r\n<p data-source-line=\"88\">2、git命令</p>\r\n<p data-source-line=\"90\">1）查看简洁的日志：</p>\r\n\r\n<pre data-source-line=\"91\"><code class=\"hljs\"><span class=\"hljs-comment\">git</span> <span class=\"hljs-comment\">log</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">oneline</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">graph</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">decorate</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">all</span>\r\n</code></pre>\r\n<p data-source-line=\"94\">2）查看分支：</p>\r\n\r\n<pre data-source-line=\"95\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch\r\n</span></code></pre>\r\n<p data-source-line=\"98\">3）创建分支：</p>\r\n\r\n<pre data-source-line=\"101\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch </span><span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"105\">4）创建+切换分支：</p>\r\n\r\n<pre data-source-line=\"106\"><code class=\"hljs\">git checkout -<span class=\"hljs-selector-tag\">b</span> <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"110\">5）合并到当前分支：</p>\r\n\r\n<pre data-source-line=\"111\"><code class=\"hljs\">git <span class=\"hljs-keyword\">merge</span> <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"115\">6）删除分支</p>\r\n\r\n<pre data-source-line=\"116\"><code class=\"hljs\"><span class=\"zh-hans\">：</span>git <span class=\"hljs-keyword\">branch </span>-d <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"120\">7）更新某分支代码到本地：</p>\r\n\r\n<pre data-source-line=\"121\"><code class=\"hljs\">git pull <span class=\"hljs-built_in\">origin</span> <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"126\">#取消对文件的修改。还原到最近的版本，废弃本地做的修改。</p>\r\n\r\n<pre data-source-line=\"128\"><code class=\"hljs\">git checkout <span class=\"hljs-comment\">-- &lt;file&gt;</span>\r\n</code></pre>\r\n<p data-source-line=\"133\">#取消已经暂存的文件。即，撤销先前\"git add\"的操作</p>\r\n\r\n<pre data-source-line=\"135\"><code class=\"hljs\">git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-keyword\">HEAD</span> &lt;<span class=\"hljs-keyword\">file</span>&gt;...\r\n</code></pre>\r\n<p data-source-line=\"140\">#修改最后一次提交。用于修改上一次的提交信息，或漏提交文件等情况。</p>\r\n\r\n<pre data-source-line=\"142\"><code class=\"hljs\">git <span class=\"hljs-keyword\">commit</span> <span class=\"hljs-comment\">--amend</span>\r\n</code></pre>\r\n<p data-source-line=\"147\">#回退所有内容到上一个版本</p>\r\n\r\n<pre data-source-line=\"149\"><code class=\"hljs\"><span class=\"hljs-attribute\">git</span> reset HEAD<span class=\"hljs-regexp\"> ^</span>\r\n</code></pre>\r\n<p data-source-line=\"154\">#回退a.py这个文件的版本到上一个版本</p>\r\n\r\n<pre data-source-line=\"156\"><code class=\"hljs\">git reset HEAD^ <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-class\">.py</span>\r\n</code></pre>\r\n<p data-source-line=\"161\">#向前回退到第3个版本</p>\r\n\r\n<pre data-source-line=\"163\"><code class=\"hljs\">git <span class=\"hljs-keyword\">reset</span> <span class=\"zh-hans\">–</span>soft <span class=\"hljs-keyword\">HEAD</span>~<span class=\"hljs-number\">3</span>\r\n</code></pre>\r\n<p data-source-line=\"168\">#将本地的状态回退到和远程的一样</p>\r\n\r\n<pre data-source-line=\"170\"><code class=\"hljs\">git reset <span class=\"zh-hans\">–</span>hard origin/<span class=\"hljs-keyword\">master</span>\r\n</code></pre>\r\n<p data-source-line=\"175\">#回退到某个版本</p>\r\n\r\n<pre data-source-line=\"177\"><code class=\"hljs\">git reset <span class=\"hljs-number\">057d</span>\r\n</code></pre>\r\n<p data-source-line=\"182\">#回退到上一次提交的状态，按照某一次的commit完全反向的进行一次commit.(代码回滚到上个版本，并提交git)</p>\r\n\r\n<pre data-source-line=\"184\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">revert </span>HEAD</code></pre>\r\n&nbsp;\r\n\r\n<!--5f39ae17-8c62-4a45-bc43-b32064c9388a:>','git常用命令','','publish','open','open','','git%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4','','','2018-04-08 12:16:18','2018-04-08 12:16:18','',0,'http://blkid.cn/?p=64',0,'post','',2),(65,1,'2018-04-08 12:11:01','2018-04-08 12:11:01','<h3 id=\"登录github\" data-source-line=\"1\">github</h3>\r\n<p data-source-line=\"3\">（1）克隆服务器代码</p>\r\n\r\n<pre data-source-line=\"4\"><code class=\"hljs\">$ git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">git</span>@git.hst.git\r\n</code></pre>\r\n<p data-source-line=\"7\">（2）查看分支</p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git branch</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">（3）切换分支到1.0</p>\r\n\r\n<pre data-source-line=\"14\"><code class=\"hljs\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git checkout v1.0</span>\r\n</code></pre>\r\n<p data-source-line=\"19\">（4）拉1.0分支的代码</p>\r\n\r\n<pre data-source-line=\"21\"><code class=\"hljs\">$ git pull <span class=\"hljs-keyword\">origin </span><span class=\"hljs-built_in\">v1</span>.<span class=\"hljs-number\">0</span>\r\n</code></pre>\r\n<p data-source-line=\"26\">（5） 查看改动的文件</p>\r\n\r\n<pre data-source-line=\"28\"><code class=\"hljs\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> git status</span>\r\n</code></pre>\r\n<p data-source-line=\"33\">（6）提交代码</p>\r\n\r\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">、</span>git <span class=\"hljs-keyword\">add</span><span class=\"bash\"> venues_manage_test.py		\r\n</span><span class=\"hljs-number\">2</span><span class=\"zh-hans\">、</span>git commit -m <span class=\"hljs-string\">\"<span class=\"zh-hans\">增加</span>XXXX<span class=\"zh-hans\">文件</span>\"</span>\r\n</code></pre>\r\n<p data-source-line=\"39\">3、提交至本地仓库</p>\r\n\r\n<pre data-source-line=\"41\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">push </span>origin <span class=\"hljs-built_in\">v1</span>.<span class=\"hljs-number\">0</span>\r\n</code></pre>\r\n<p data-source-line=\"44\">向服务器推送代码至1.0分支</p>\r\n<p data-source-line=\"47\">(7)为远程服务器添加一个别名</p>\r\n\r\n<pre data-source-line=\"49\"><code class=\"hljs\">git remote <span class=\"hljs-keyword\">add</span><span class=\"bash\">  bieming https://git.oschina.net/abcdefg.git\r\n</span></code></pre>\r\n<p data-source-line=\"54\">（8）</p>\r\n\r\n<pre data-source-line=\"55\"><code class=\"hljs\">git checkout <span class=\"hljs-keyword\">master</span>\r\n</code></pre>\r\n<p data-source-line=\"58\">切换至master分支</p>\r\n<p data-source-line=\"60\">（9）合并分支 1、分支将修改完成的问题或bug，提交至</p>\r\n\r\n<pre data-source-line=\"62\"><code class=\"hljs\"><span class=\"hljs-string\">git </span><span class=\"hljs-string\">commit </span><span class=\"hljs-built_in\">--m</span> <span class=\"hljs-string\">\'modify\'</span>\r\n</code></pre>\r\n<p data-source-line=\"66\">2、先将分支切换至master</p>\r\n\r\n<pre data-source-line=\"67\"><code class=\"hljs\">git checkout <span class=\"hljs-keyword\">master</span>\r\n</code></pre>\r\n<p data-source-line=\"71\">3、查看分支</p>\r\n\r\n<pre data-source-line=\"72\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch\r\n</span></code></pre>\r\n<p data-source-line=\"76\">4、合并分支至master</p>\r\n\r\n<pre data-source-line=\"77\"><code class=\"hljs\">git <span class=\"hljs-keyword\">merge</span>  <span class=\"zh-hans\">分支名称</span>\r\n</code></pre>\r\n<p data-source-line=\"81\">5、删除分支</p>\r\n\r\n<pre data-source-line=\"82\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch </span>-d	<span class=\"zh-hans\">分支名称</span>\r\n</code></pre>\r\n<p data-source-line=\"88\">2、git命令</p>\r\n<p data-source-line=\"90\">1）查看简洁的日志：</p>\r\n\r\n<pre data-source-line=\"91\"><code class=\"hljs\"><span class=\"hljs-comment\">git</span> <span class=\"hljs-comment\">log</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">oneline</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">graph</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">decorate</span> <span class=\"hljs-literal\">-</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">all</span>\r\n</code></pre>\r\n<p data-source-line=\"94\">2）查看分支：</p>\r\n\r\n<pre data-source-line=\"95\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch\r\n</span></code></pre>\r\n<p data-source-line=\"98\">3）创建分支：</p>\r\n\r\n<pre data-source-line=\"101\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">branch </span><span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"105\">4）创建+切换分支：</p>\r\n\r\n<pre data-source-line=\"106\"><code class=\"hljs\">git checkout -<span class=\"hljs-selector-tag\">b</span> <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"110\">5）合并到当前分支：</p>\r\n\r\n<pre data-source-line=\"111\"><code class=\"hljs\">git <span class=\"hljs-keyword\">merge</span> <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"115\">6）删除分支</p>\r\n\r\n<pre data-source-line=\"116\"><code class=\"hljs\"><span class=\"zh-hans\">：</span>git <span class=\"hljs-keyword\">branch </span>-d <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"120\">7）更新某分支代码到本地：</p>\r\n\r\n<pre data-source-line=\"121\"><code class=\"hljs\">git pull <span class=\"hljs-built_in\">origin</span> <span class=\"zh-hans\">分支名</span>\r\n</code></pre>\r\n<p data-source-line=\"126\">#取消对文件的修改。还原到最近的版本，废弃本地做的修改。</p>\r\n\r\n<pre data-source-line=\"128\"><code class=\"hljs\">git checkout <span class=\"hljs-comment\">-- &lt;file&gt;</span>\r\n</code></pre>\r\n<p data-source-line=\"133\">#取消已经暂存的文件。即，撤销先前\"git add\"的操作</p>\r\n\r\n<pre data-source-line=\"135\"><code class=\"hljs\">git <span class=\"hljs-keyword\">reset</span> <span class=\"hljs-keyword\">HEAD</span> &lt;<span class=\"hljs-keyword\">file</span>&gt;...\r\n</code></pre>\r\n<p data-source-line=\"140\">#修改最后一次提交。用于修改上一次的提交信息，或漏提交文件等情况。</p>\r\n\r\n<pre data-source-line=\"142\"><code class=\"hljs\">git <span class=\"hljs-keyword\">commit</span> <span class=\"hljs-comment\">--amend</span>\r\n</code></pre>\r\n<p data-source-line=\"147\">#回退所有内容到上一个版本</p>\r\n\r\n<pre data-source-line=\"149\"><code class=\"hljs\"><span class=\"hljs-attribute\">git</span> reset HEAD<span class=\"hljs-regexp\"> ^</span>\r\n</code></pre>\r\n<p data-source-line=\"154\">#回退a.py这个文件的版本到上一个版本</p>\r\n\r\n<pre data-source-line=\"156\"><code class=\"hljs\">git reset HEAD^ <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-class\">.py</span>\r\n</code></pre>\r\n<p data-source-line=\"161\">#向前回退到第3个版本</p>\r\n\r\n<pre data-source-line=\"163\"><code class=\"hljs\">git <span class=\"hljs-keyword\">reset</span> <span class=\"zh-hans\">–</span>soft <span class=\"hljs-keyword\">HEAD</span>~<span class=\"hljs-number\">3</span>\r\n</code></pre>\r\n<p data-source-line=\"168\">#将本地的状态回退到和远程的一样</p>\r\n\r\n<pre data-source-line=\"170\"><code class=\"hljs\">git reset <span class=\"zh-hans\">–</span>hard origin/<span class=\"hljs-keyword\">master</span>\r\n</code></pre>\r\n<p data-source-line=\"175\">#回退到某个版本</p>\r\n\r\n<pre data-source-line=\"177\"><code class=\"hljs\">git reset <span class=\"hljs-number\">057d</span>\r\n</code></pre>\r\n<p data-source-line=\"182\">#回退到上一次提交的状态，按照某一次的commit完全反向的进行一次commit.(代码回滚到上个版本，并提交git)</p>\r\n\r\n<pre data-source-line=\"184\"><code class=\"hljs\"><span class=\"hljs-symbol\">git</span> <span class=\"hljs-keyword\">revert </span>HEAD</code></pre>\r\n&nbsp;\r\n\r\n<!--5f39ae17-8c62-4a45-bc43-b32064c9388a:>','git常用命令','','inherit','closed','closed','','64-revision-v1','','','2018-04-08 12:11:01','2018-04-08 12:11:01','',64,'http://blkid.cn/?p=65',0,'revision','',0),(66,1,'2018-04-08 12:17:11','2018-04-08 12:17:11','Welcome to WordPress. This is your first post. Edit or delete it, then start writing!','Hello world!','','inherit','closed','closed','','1-revision-v1','','','2018-04-08 12:17:11','2018-04-08 12:17:11','',1,'http://blkid.cn/?p=66',0,'revision','',0),(67,1,'2018-04-08 12:44:20','2018-04-08 12:44:20','<h1>HTTP 8 种请求方法</h1>\r\n<div class=\"tutintro\">\r\n<p style=\"text-align: left;\">根据HTTP标准，HTTP请求可以使用多种请求方法。</p>\r\n<p style=\"text-align: left;\">HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。</p>\r\n<p style=\"text-align: left;\">HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。</p>\r\n\r\n</div>\r\n<table class=\"reference alignleft\">\r\n<tbody>\r\n<tr>\r\n<th width=\"5%\">序号</th>\r\n<th style=\"text-align: left;\" width=\"10%\">方法</th>\r\n<th>描述</th>\r\n</tr>\r\n<tr>\r\n<td>1</td>\r\n<td>GET</td>\r\n<td>请求指定的页面信息，并返回实体主体。</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>HEAD</td>\r\n<td>类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>POST</td>\r\n<td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>PUT</td>\r\n<td>从客户端向服务器传送的数据取代指定的文档的内容。</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>DELETE</td>\r\n<td>请求服务器删除指定的页面。</td>\r\n</tr>\r\n<tr>\r\n<td>6</td>\r\n<td>CONNECT</td>\r\n<td>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</td>\r\n</tr>\r\n<tr>\r\n<td>7</td>\r\n<td>OPTIONS</td>\r\n<td>允许客户端查看服务器的性能。</td>\r\n</tr>\r\n<tr>\r\n<td>8</td>\r\n<td>TRACE</td>\r\n<td>回显服务器收到的请求，主要用于测试或诊断。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"text-align: left;\">笔记：</p>\r\n\r\n<div>\r\n<div>post     get    head      delete      put</div>\r\n<div>trace 回显服务器收到的请求，主要用于测试或诊断。</div>\r\n<div>options 客户端可查看服务器性能</div>\r\n<div>Connect 能够将连接方式改为管道方式的代理服务器</div>\r\n</div>\r\n&nbsp;\r\n\r\n&nbsp;','http  八种请求方式','','publish','open','open','','http-%e5%85%ab%e7%a7%8d%e8%af%b7%e6%b1%82%e6%96%b9%e5%bc%8f','','','2018-04-08 12:45:40','2018-04-08 12:45:40','',0,'http://blkid.cn/?p=67',0,'post','',0),(68,1,'2018-04-08 12:44:20','2018-04-08 12:44:20','<h1>HTTP 8 种请求方法</h1>\r\n<div class=\"tutintro\">\r\n\r\n根据HTTP标准，HTTP请求可以使用多种请求方法。\r\n\r\nHTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。\r\n\r\nHTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。\r\n\r\n</div>\r\n<table class=\"reference\">\r\n<tbody>\r\n<tr>\r\n<th width=\"5%\">序号</th>\r\n<th width=\"10%\">方法</th>\r\n<th>描述</th>\r\n</tr>\r\n<tr>\r\n<td>1</td>\r\n<td>GET</td>\r\n<td>请求指定的页面信息，并返回实体主体。</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>HEAD</td>\r\n<td>类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>POST</td>\r\n<td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>PUT</td>\r\n<td>从客户端向服务器传送的数据取代指定的文档的内容。</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>DELETE</td>\r\n<td>请求服务器删除指定的页面。</td>\r\n</tr>\r\n<tr>\r\n<td>6</td>\r\n<td>CONNECT</td>\r\n<td>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</td>\r\n</tr>\r\n<tr>\r\n<td>7</td>\r\n<td>OPTIONS</td>\r\n<td>允许客户端查看服务器的性能。</td>\r\n</tr>\r\n<tr>\r\n<td>8</td>\r\n<td>TRACE</td>\r\n<td>回显服务器收到的请求，主要用于测试或诊断。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n笔记：\r\n<div>\r\n<div>post     get    head      delete      put</div>\r\n<div>trace 回显服务器收到的请求，主要用于测试或诊断。</div>\r\n<div>options 客户端可查看服务器性能</div>\r\n<div>Connect 能够将连接方式改为管道方式的代理服务器</div>\r\n</div>\r\n&nbsp;\r\n\r\n&nbsp;','http  八种请求方式','','inherit','closed','closed','','67-revision-v1','','','2018-04-08 12:44:20','2018-04-08 12:44:20','',67,'http://blkid.cn/?p=68',0,'revision','',0),(69,1,'2018-04-08 12:45:26','2018-04-08 12:45:26','<h1>HTTP 8 种请求方法</h1>\n<div class=\"tutintro\">\n\n根据HTTP标准，HTTP请求可以使用多种请求方法。\n\nHTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。\n\nHTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。\n\n</div>\n<table class=\"reference\">\n<tbody>\n<tr>\n<th width=\"5%\">序号</th>\n<th style=\"text-align: left;\" width=\"10%\">方法</th>\n<th>描述</th>\n</tr>\n<tr>\n<td>1</td>\n<td>GET</td>\n<td>请求指定的页面信息，并返回实体主体。</td>\n</tr>\n<tr>\n<td>2</td>\n<td>HEAD</td>\n<td>类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头</td>\n</tr>\n<tr>\n<td>3</td>\n<td>POST</td>\n<td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。</td>\n</tr>\n<tr>\n<td>4</td>\n<td>PUT</td>\n<td>从客户端向服务器传送的数据取代指定的文档的内容。</td>\n</tr>\n<tr>\n<td>5</td>\n<td>DELETE</td>\n<td>请求服务器删除指定的页面。</td>\n</tr>\n<tr>\n<td>6</td>\n<td>CONNECT</td>\n<td>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</td>\n</tr>\n<tr>\n<td>7</td>\n<td>OPTIONS</td>\n<td>允许客户端查看服务器的性能。</td>\n</tr>\n<tr>\n<td>8</td>\n<td>TRACE</td>\n<td>回显服务器收到的请求，主要用于测试或诊断。</td>\n</tr>\n</tbody>\n</table>\n笔记：\n<div>\n<div>post     get    head      delete      put</div>\n<div>trace 回显服务器收到的请求，主要用于测试或诊断。</div>\n<div>options 客户端可查看服务器性能</div>\n<div>Connect 能够将连接方式改为管道方式的代理服务器</div>\n</div>\n&nbsp;\n\n&nbsp;','http  八种请求方式','','inherit','closed','closed','','67-autosave-v1','','','2018-04-08 12:45:26','2018-04-08 12:45:26','',67,'http://blkid.cn/?p=69',0,'revision','',0),(70,1,'2018-04-08 12:45:40','2018-04-08 12:45:40','<h1>HTTP 8 种请求方法</h1>\r\n<div class=\"tutintro\">\r\n<p style=\"text-align: left;\">根据HTTP标准，HTTP请求可以使用多种请求方法。</p>\r\n<p style=\"text-align: left;\">HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。</p>\r\n<p style=\"text-align: left;\">HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。</p>\r\n\r\n</div>\r\n<table class=\"reference alignleft\">\r\n<tbody>\r\n<tr>\r\n<th width=\"5%\">序号</th>\r\n<th style=\"text-align: left;\" width=\"10%\">方法</th>\r\n<th>描述</th>\r\n</tr>\r\n<tr>\r\n<td>1</td>\r\n<td>GET</td>\r\n<td>请求指定的页面信息，并返回实体主体。</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>HEAD</td>\r\n<td>类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>POST</td>\r\n<td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>PUT</td>\r\n<td>从客户端向服务器传送的数据取代指定的文档的内容。</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>DELETE</td>\r\n<td>请求服务器删除指定的页面。</td>\r\n</tr>\r\n<tr>\r\n<td>6</td>\r\n<td>CONNECT</td>\r\n<td>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</td>\r\n</tr>\r\n<tr>\r\n<td>7</td>\r\n<td>OPTIONS</td>\r\n<td>允许客户端查看服务器的性能。</td>\r\n</tr>\r\n<tr>\r\n<td>8</td>\r\n<td>TRACE</td>\r\n<td>回显服务器收到的请求，主要用于测试或诊断。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style=\"text-align: left;\">笔记：</p>\r\n\r\n<div>\r\n<div>post     get    head      delete      put</div>\r\n<div>trace 回显服务器收到的请求，主要用于测试或诊断。</div>\r\n<div>options 客户端可查看服务器性能</div>\r\n<div>Connect 能够将连接方式改为管道方式的代理服务器</div>\r\n</div>\r\n&nbsp;\r\n\r\n&nbsp;','http  八种请求方式','','inherit','closed','closed','','67-revision-v1','','','2018-04-08 12:45:40','2018-04-08 12:45:40','',67,'http://blkid.cn/?p=70',0,'revision','',0),(71,1,'2018-04-08 12:54:19','2018-04-08 12:54:19','&nbsp;\r\n\r\n笔记：\r\n<div>\r\n<div>tcp / ip 三次握手</div>\r\n<div>1、客户端发送syn包给服务器，并进入SYN-SENT 状态，等待服务器确认</div>\r\n<div>2、服务器收到SYN包，反馈给客户端一个syn+ack包，，此时服务器进入syn—recv状态</div>\r\n<div>3、客户端收到SYN+ack包，向服务器发送确认包ACK，客户端和服务器同时进入established状态，完成三次握手</div>\r\n</div>\r\n<div></div>\r\n<div><img class=\"alignnone wp-image-90\" src=\"http://blkid.cn/wp-content/uploads/2018/04/100327002629-300x226.png\" alt=\"\" width=\"402\" height=\"303\" /></div>\r\n<div></div>\r\n<div>\r\n<div>四次挥手</div>\r\n<div>1、关闭方向另一方发送一个带有fin的附加标记的报文</div>\r\n<div>2、收到的一方先向主机A回复确认报文ACK，同时通知自己相应的程序：关闭连接，使应用程序作出相应的清理工作</div>\r\n<div>3、收到fin请求方完成清理工后，像发送方，回复fin报文段</div>\r\n<div>4、发送方收到fin报文段后，向服务器发送一个ACK，标示连接彻底释放</div>\r\n</div>\r\n<div><img class=\"alignnone  wp-image-91\" src=\"http://blkid.cn/wp-content/uploads/2018/04/100327022731-300x223.jpg\" alt=\"\" width=\"459\" height=\"341\" /></div>\r\n<div></div>','tcp/ip 三次握手','','publish','open','open','','tcp-ip-%e4%b8%89%e6%ac%a1%e6%8f%a1%e6%89%8b','','','2018-04-10 13:01:51','2018-04-10 13:01:51','',0,'http://blkid.cn/?p=71',0,'post','',0),(72,1,'2018-04-08 12:54:19','2018-04-08 12:54:19','&nbsp;\r\n\r\n笔记：\r\n<div>\r\n<div>tcp / ip 三次握手</div>\r\n<div>1、客户端发送syn包给服务器，并进入SYN-SENT 状态，等待服务器确认</div>\r\n<div>2、服务器收到SYN包，反馈给客户端一个syn+ack包，，此时服务器进入syn—recv状态</div>\r\n<div>3、客户端收到SYN+ack包，向服务器发送确认包ACK，客户端和服务器同时进入established状态，完成三次握手</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div>四次挥手</div>\r\n<div>1、关闭方向另一方发送一个带有fin的附加标记的报文</div>\r\n<div>2、收到的一方先向主机A回复确认报文ACK，同时通知自己相应的程序：关闭连接，使应用程序作出相应的清理工作</div>\r\n<div>3、收到fin请求方完成清理工后，像发送方，回复fin报文段</div>\r\n<div>4、发送方收到fin报文段后，向服务器发送一个ACK，标示连接彻底释放</div>\r\n</div>','tcp/ip 三次握手','','inherit','closed','closed','','71-revision-v1','','','2018-04-08 12:54:19','2018-04-08 12:54:19','',71,'http://blkid.cn/?p=72',0,'revision','',0),(73,1,'2018-04-09 10:49:32','2018-04-09 10:49:32','<p style=\"text-align: center;\" data-source-line=\"1\"><strong>macOS 下常用软件安装和配置</strong></p>\r\n<p data-source-line=\"3\">1、Homebrew 官网：<a href=\"https://brew.sh/\">https://brew.sh/</a></p>\r\n<p data-source-line=\"6\">Homebrew是一个包管理器，就相当于 yum 和 apt ，通过 Homebrew 我们可以在macOS上安装软件。 它有几个优点，最重要的就是不需要超级管理员权限，比如默认的 pip 安装一些库的时候，每次都需要 sudo 安装Homebrew</p>\r\n\r\n<pre data-source-line=\"9\"><code class=\"hljs\">/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"zh-hans\">可能会提示你安装</span>Xcode Command Line <span class=\"zh-hans\">耐心等待即可</span></span>\r\n</code></pre>\r\n<p data-source-line=\"15\">使用Homebrew安装</p>\r\n\r\n<pre data-source-line=\"16\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> python2</span>\r\nbrew install python\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> python3</span>\r\nbrew install python3\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> nodejs</span>\r\nbrew install node\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> jmeter <span class=\"zh-hans\">安装完毕后在</span> <span class=\"zh-hans\">终端</span> <span class=\"zh-hans\">直接输入</span> jmeter <span class=\"zh-hans\">即可</span></span>\r\nbrew install jmeter\r\n\r\nbrew install redis\r\n\r\nbrew install ruby\r\n\r\nbrew install mysql\r\n\r\nbrew install maven\r\n\r\nbrew install git\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> ...</span>\r\n\r\n</code></pre>\r\n<p data-source-line=\"42\">使用Homebrew安装软件 现在 Homebrew 支持安装一些常用的软件，使用 brew cask install 即可 示例</p>\r\n\r\n<pre data-source-line=\"45\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> install java8</span>\r\nbrew cask install java8# <span class=\"zh-hans\">推荐使用</span> iterm2 <span class=\"zh-hans\">替代</span> <span class=\"zh-hans\">系统自带的</span>terminal brew cask install iterm2# chromebrew cask install google-chrome# sublimebrew cask install sublime\r\n</code></pre>\r\n<p data-source-line=\"49\">ZSH 官网：<a href=\"http://ohmyz.sh/\">http://ohmyz.sh/</a></p>\r\n<p data-source-line=\"49\">系统默认自带的是 bash ，我个人比较喜欢 zsh ，也是 shell 的一种，但更灵活，更强大。相关配置</p>\r\n\r\n<pre data-source-line=\"52\"><code class=\"hljs\">sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span>\r\n</code></pre>\r\n<p data-source-line=\"55\">修改zsh主题： 为了启用主题，ZSH_THEME请~/.zshrc在采购Oh My Zsh之前设置主题的名称; 例如：ZSH_THEME=\"robbyrussell\" 如果您不想启用任何主题，请将其设置ZSH_THEME为空白：ZSH_THEME=\"\"</p>\r\n<p data-source-line=\"55\">个人比较喜欢这个主题：dallas</p>\r\n<p data-source-line=\"61\">配置 shadowsocks</p>\r\n<p data-source-line=\"61\">如果你使用 shadowsocks 在下载完客户端之后就可以使用了，这里只提醒两点，Git 和 终端 需要额外设置。</p>\r\n\r\n<pre data-source-line=\"62\"><code class=\"hljs\"># terminal\r\nexport http_proxy=\'http://127.0.0.1:1080\'    \r\nexport https_proxy=\'http://127.0.0.1:1080\'\r\n# git\r\ngit config --global https.proxy http://127.0.0.1:1080\r\ngit config --global https.proxy https://127.0.0.1:1080\r\n# or sock\r\ngit config --global http.proxy \'socks5://127.0.0.1:1080\'\r\ngit config --global https.proxy \'socks5://127.0.0.1:1080\'</code></pre>','macOS 系统安装','','publish','open','open','','macos-%e7%b3%bb%e7%bb%9f%e5%ae%89%e8%a3%85','','','2018-04-10 01:56:10','2018-04-10 01:56:10','',0,'http://blkid.cn/?p=73',0,'post','',0),(74,1,'2018-04-09 10:49:32','2018-04-09 10:49:32','<p style=\"text-align: center;\" data-source-line=\"1\"><strong>macOS 下常用软件安装和配置</strong></p>\r\n<p data-source-line=\"3\">1、Homebrew 官网：<a href=\"https://brew.sh/\">https://brew.sh/</a></p>\r\n<p data-source-line=\"6\">Homebrew是一个包管理器，就相当于 yum 和 apt ，通过 Homebrew 我们可以在macOS上安装软件。 它有几个优点，最重要的就是不需要超级管理员权限，比如默认的 pip 安装一些库的时候，每次都需要 sudo 安装Homebrew</p>\r\n\r\n<pre data-source-line=\"9\"><code class=\"hljs\">/usr/bin/ruby -e \"$(curl -fsSL \r\n\r\nhttps://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"zh-hans\">可能会提示你安装</span>Xcode Command Line <span class=\"zh-hans\">耐心等待即可</span></span>\r\n</code></pre>\r\n<p data-source-line=\"15\">使用Homebrew安装</p>\r\n\r\n<pre data-source-line=\"16\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> python2</span>\r\nbrew install python\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> python3</span>\r\nbrew install python3\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> nodejs</span>\r\nbrew install node\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> jmeter <span class=\"zh-hans\">安装完毕后在</span> <span class=\"zh-hans\">终端</span> <span class=\"zh-hans\">直接输入</span> jmeter <span class=\"zh-hans\">即可</span></span>\r\nbrew install jmeter\r\n\r\nbrew install redis\r\n\r\nbrew install ruby\r\n\r\nbrew install mysql\r\n\r\nbrew install maven\r\n\r\nbrew install git\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> ...</span>\r\n\r\n</code></pre>\r\n<p data-source-line=\"42\">使用Homebrew安装软件 现在 Homebrew 支持安装一些常用的软件，使用 brew cask install 即可 示例</p>\r\n\r\n<pre data-source-line=\"45\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> install java8</span>\r\nbrew cask install java8# <span class=\"zh-hans\">推荐使用</span> iterm2 <span class=\"zh-hans\">替代</span> <span class=\"zh-hans\">系统自带的</span>terminal brew cask install iterm2# chromebrew cask install google-chrome# sublimebrew cask install sublime\r\n</code></pre>\r\n<p data-source-line=\"49\">ZSH 官网：<a href=\"http://ohmyz.sh/\">http://ohmyz.sh/</a> 系统默认自带的是 bash ，我个人比较喜欢 zsh ，也是 shell 的一种，但更灵活，更强大。相关配置</p>\r\n\r\n<pre data-source-line=\"52\"><code class=\"hljs\">sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span>\r\n</code></pre>\r\n<p data-source-line=\"55\">修改zsh主题： 为了启用主题，ZSH_THEME请~/.zshrc在采购Oh My Zsh之前设置主题的名称; 例如：ZSH_THEME=\"robbyrussell\" 如果您不想启用任何主题，请将其设置ZSH_THEME为空白：ZSH_THEME=\"\" 配置 shadowsocks 个人比较喜欢这个主题：dallas</p>\r\n<p data-source-line=\"61\">如果你使用 shadowsocks 在下载完客户端之后就可以使用了，这里只提醒两点，Git 和 终端 需要额外设置。</p>\r\n\r\n<pre data-source-line=\"62\"><code class=\"hljs\"># terminal\r\nexport http_proxy=\'http://127.0.0.1:1080\'    \r\nexport https_proxy=\'http://127.0.0.1:1080\'\r\n# git\r\ngit config --global https.proxy http://127.0.0.1:1080\r\ngit config --global https.proxy https://127.0.0.1:1080\r\n# or sock\r\ngit config --global http.proxy \'socks5://127.0.0.1:1080\'\r\ngit config --global https.proxy \'socks5://127.0.0.1:1080\'</code></pre>','macOS 系统安装','','inherit','closed','closed','','73-revision-v1','','','2018-04-09 10:49:32','2018-04-09 10:49:32','',73,'http://blkid.cn/?p=74',0,'revision','',0),(75,1,'2018-04-09 10:50:48','2018-04-09 10:50:48','<p style=\"text-align: center;\" data-source-line=\"1\"><strong>macOS 下常用软件安装和配置</strong></p>\n<p data-source-line=\"3\">1、Homebrew 官网：<a href=\"https://brew.sh/\">https://brew.sh/</a></p>\n<p data-source-line=\"6\">Homebrew是一个包管理器，就相当于 yum 和 apt ，通过 Homebrew 我们可以在macOS上安装软件。 它有几个优点，最重要的就是不需要超级管理员权限，比如默认的 pip 安装一些库的时候，每次都需要 sudo 安装Homebrew</p>\n\n<pre data-source-line=\"9\"><code class=\"hljs\">/usr/bin/ruby -e \"$(curl -fsSL \n\nhttps://raw.githubusercontent.com/Homebrew/install/master/install)\"\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"zh-hans\">可能会提示你安装</span>Xcode Command Line <span class=\"zh-hans\">耐心等待即可</span></span>\n</code></pre>\n<p data-source-line=\"15\">使用Homebrew安装</p>\n\n<pre data-source-line=\"16\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> python2</span>\nbrew install python\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> python3</span>\nbrew install python3\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> nodejs</span>\nbrew install node\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> jmeter <span class=\"zh-hans\">安装完毕后在</span> <span class=\"zh-hans\">终端</span> <span class=\"zh-hans\">直接输入</span> jmeter <span class=\"zh-hans\">即可</span></span>\nbrew install jmeter\n\nbrew install redis\n\nbrew install ruby\n\nbrew install mysql\n\nbrew install maven\n\nbrew install git\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> ...</span>\n\n</code></pre>\n<p data-source-line=\"42\">使用Homebrew安装软件 现在 Homebrew 支持安装一些常用的软件，使用 brew cask install 即可 示例</p>\n\n<pre data-source-line=\"45\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> install java8</span>\nbrew cask install java8# <span class=\"zh-hans\">推荐使用</span> iterm2 <span class=\"zh-hans\">替代</span> <span class=\"zh-hans\">系统自带的</span>terminal brew cask install iterm2# chromebrew cask install google-chrome# sublimebrew cask install sublime\n</code></pre>\n<p data-source-line=\"49\">ZSH 官网：<a href=\"http://ohmyz.sh/\">http://ohmyz.sh/</a></p>\n<p data-source-line=\"49\">系统默认自带的是 bash ，我个人比较喜欢 zsh ，也是 shell 的一种，但更灵活，更强大。相关配置</p>\n\n<pre data-source-line=\"52\"><code class=\"hljs\">sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span>\n</code></pre>\n<p data-source-line=\"55\">修改zsh主题： 为了启用主题，ZSH_THEME请~/.zshrc在采购Oh My Zsh之前设置主题的名称; 例如：ZSH_THEME=\"robbyrussell\" 如果您不想启用任何主题，请将其设置ZSH_THEME为空白：ZSH_THEME=\"\" 配置 shadowsocks 个人比较喜欢这个主题：dallas</p>\n<p data-source-line=\"61\">如果你使用 shadowsocks 在下载完客户端之后就可以使用了，这里只提醒两点，Git 和 终端 需要额外设置。</p>\n\n<pre data-source-line=\"62\"><code class=\"hljs\"># terminal\nexport http_proxy=\'http://127.0.0.1:1080\'    \nexport https_proxy=\'http://127.0.0.1:1080\'\n# git\ngit config --global https.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\n# or sock\ngit config --global http.proxy \'socks5://127.0.0.1:1080\'\ngit config --global https.proxy \'socks5://127.0.0.1:1080\'</code></pre>','macOS 系统安装','','inherit','closed','closed','','73-autosave-v1','','','2018-04-09 10:50:48','2018-04-09 10:50:48','',73,'http://blkid.cn/?p=75',0,'revision','',0),(76,1,'2018-04-09 10:51:17','2018-04-09 10:51:17','<p style=\"text-align: center;\" data-source-line=\"1\"><strong>macOS 下常用软件安装和配置</strong></p>\r\n<p data-source-line=\"3\">1、Homebrew 官网：<a href=\"https://brew.sh/\">https://brew.sh/</a></p>\r\n<p data-source-line=\"6\">Homebrew是一个包管理器，就相当于 yum 和 apt ，通过 Homebrew 我们可以在macOS上安装软件。 它有几个优点，最重要的就是不需要超级管理员权限，比如默认的 pip 安装一些库的时候，每次都需要 sudo 安装Homebrew</p>\r\n\r\n<pre data-source-line=\"9\"><code class=\"hljs\">/usr/bin/ruby -e \"$(curl -fsSL \r\n\r\nhttps://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"zh-hans\">可能会提示你安装</span>Xcode Command Line <span class=\"zh-hans\">耐心等待即可</span></span>\r\n</code></pre>\r\n<p data-source-line=\"15\">使用Homebrew安装</p>\r\n\r\n<pre data-source-line=\"16\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> python2</span>\r\nbrew install python\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> python3</span>\r\nbrew install python3\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> nodejs</span>\r\nbrew install node\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> jmeter <span class=\"zh-hans\">安装完毕后在</span> <span class=\"zh-hans\">终端</span> <span class=\"zh-hans\">直接输入</span> jmeter <span class=\"zh-hans\">即可</span></span>\r\nbrew install jmeter\r\n\r\nbrew install redis\r\n\r\nbrew install ruby\r\n\r\nbrew install mysql\r\n\r\nbrew install maven\r\n\r\nbrew install git\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> ...</span>\r\n\r\n</code></pre>\r\n<p data-source-line=\"42\">使用Homebrew安装软件 现在 Homebrew 支持安装一些常用的软件，使用 brew cask install 即可 示例</p>\r\n\r\n<pre data-source-line=\"45\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> install java8</span>\r\nbrew cask install java8# <span class=\"zh-hans\">推荐使用</span> iterm2 <span class=\"zh-hans\">替代</span> <span class=\"zh-hans\">系统自带的</span>terminal brew cask install iterm2# chromebrew cask install google-chrome# sublimebrew cask install sublime\r\n</code></pre>\r\n<p data-source-line=\"49\">ZSH 官网：<a href=\"http://ohmyz.sh/\">http://ohmyz.sh/</a></p>\r\n<p data-source-line=\"49\">系统默认自带的是 bash ，我个人比较喜欢 zsh ，也是 shell 的一种，但更灵活，更强大。相关配置</p>\r\n\r\n<pre data-source-line=\"52\"><code class=\"hljs\">sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span>\r\n</code></pre>\r\n<p data-source-line=\"55\">修改zsh主题： 为了启用主题，ZSH_THEME请~/.zshrc在采购Oh My Zsh之前设置主题的名称; 例如：ZSH_THEME=\"robbyrussell\" 如果您不想启用任何主题，请将其设置ZSH_THEME为空白：ZSH_THEME=\"\"</p>\r\n<p data-source-line=\"55\">个人比较喜欢这个主题：dallas</p>\r\n<p data-source-line=\"61\">配置 shadowsocks</p>\r\n<p data-source-line=\"61\">如果你使用 shadowsocks 在下载完客户端之后就可以使用了，这里只提醒两点，Git 和 终端 需要额外设置。</p>\r\n\r\n<pre data-source-line=\"62\"><code class=\"hljs\"># terminal\r\nexport http_proxy=\'http://127.0.0.1:1080\'    \r\nexport https_proxy=\'http://127.0.0.1:1080\'\r\n# git\r\ngit config --global https.proxy http://127.0.0.1:1080\r\ngit config --global https.proxy https://127.0.0.1:1080\r\n# or sock\r\ngit config --global http.proxy \'socks5://127.0.0.1:1080\'\r\ngit config --global https.proxy \'socks5://127.0.0.1:1080\'</code></pre>','macOS 系统安装','','inherit','closed','closed','','73-revision-v1','','','2018-04-09 10:51:17','2018-04-09 10:51:17','',73,'http://blkid.cn/?p=76',0,'revision','',0),(77,1,'2018-04-10 01:56:10','2018-04-10 01:56:10','<p style=\"text-align: center;\" data-source-line=\"1\"><strong>macOS 下常用软件安装和配置</strong></p>\r\n<p data-source-line=\"3\">1、Homebrew 官网：<a href=\"https://brew.sh/\">https://brew.sh/</a></p>\r\n<p data-source-line=\"6\">Homebrew是一个包管理器，就相当于 yum 和 apt ，通过 Homebrew 我们可以在macOS上安装软件。 它有几个优点，最重要的就是不需要超级管理员权限，比如默认的 pip 安装一些库的时候，每次都需要 sudo 安装Homebrew</p>\r\n\r\n<pre data-source-line=\"9\"><code class=\"hljs\">/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"zh-hans\">可能会提示你安装</span>Xcode Command Line <span class=\"zh-hans\">耐心等待即可</span></span>\r\n</code></pre>\r\n<p data-source-line=\"15\">使用Homebrew安装</p>\r\n\r\n<pre data-source-line=\"16\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> python2</span>\r\nbrew install python\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> python3</span>\r\nbrew install python3\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> nodejs</span>\r\nbrew install node\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> jmeter <span class=\"zh-hans\">安装完毕后在</span> <span class=\"zh-hans\">终端</span> <span class=\"zh-hans\">直接输入</span> jmeter <span class=\"zh-hans\">即可</span></span>\r\nbrew install jmeter\r\n\r\nbrew install redis\r\n\r\nbrew install ruby\r\n\r\nbrew install mysql\r\n\r\nbrew install maven\r\n\r\nbrew install git\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> ...</span>\r\n\r\n</code></pre>\r\n<p data-source-line=\"42\">使用Homebrew安装软件 现在 Homebrew 支持安装一些常用的软件，使用 brew cask install 即可 示例</p>\r\n\r\n<pre data-source-line=\"45\"><code class=\"hljs\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> install java8</span>\r\nbrew cask install java8# <span class=\"zh-hans\">推荐使用</span> iterm2 <span class=\"zh-hans\">替代</span> <span class=\"zh-hans\">系统自带的</span>terminal brew cask install iterm2# chromebrew cask install google-chrome# sublimebrew cask install sublime\r\n</code></pre>\r\n<p data-source-line=\"49\">ZSH 官网：<a href=\"http://ohmyz.sh/\">http://ohmyz.sh/</a></p>\r\n<p data-source-line=\"49\">系统默认自带的是 bash ，我个人比较喜欢 zsh ，也是 shell 的一种，但更灵活，更强大。相关配置</p>\r\n\r\n<pre data-source-line=\"52\"><code class=\"hljs\">sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span>\r\n</code></pre>\r\n<p data-source-line=\"55\">修改zsh主题： 为了启用主题，ZSH_THEME请~/.zshrc在采购Oh My Zsh之前设置主题的名称; 例如：ZSH_THEME=\"robbyrussell\" 如果您不想启用任何主题，请将其设置ZSH_THEME为空白：ZSH_THEME=\"\"</p>\r\n<p data-source-line=\"55\">个人比较喜欢这个主题：dallas</p>\r\n<p data-source-line=\"61\">配置 shadowsocks</p>\r\n<p data-source-line=\"61\">如果你使用 shadowsocks 在下载完客户端之后就可以使用了，这里只提醒两点，Git 和 终端 需要额外设置。</p>\r\n\r\n<pre data-source-line=\"62\"><code class=\"hljs\"># terminal\r\nexport http_proxy=\'http://127.0.0.1:1080\'    \r\nexport https_proxy=\'http://127.0.0.1:1080\'\r\n# git\r\ngit config --global https.proxy http://127.0.0.1:1080\r\ngit config --global https.proxy https://127.0.0.1:1080\r\n# or sock\r\ngit config --global http.proxy \'socks5://127.0.0.1:1080\'\r\ngit config --global https.proxy \'socks5://127.0.0.1:1080\'</code></pre>','macOS 系统安装','','inherit','closed','closed','','73-revision-v1','','','2018-04-10 01:56:10','2018-04-10 01:56:10','',73,'http://blkid.cn/?p=77',0,'revision','',0),(87,1,'2018-04-10 12:56:03','2018-04-10 12:56:03','','e5969cb75e7ee0c9d38fc34c6686da41小运营图1','','inherit','open','closed','','e5969cb75e7ee0c9d38fc34c6686da41%e5%b0%8f%e8%bf%90%e8%90%a5%e5%9b%be1','','','2018-04-10 12:56:03','2018-04-10 12:56:03','',0,'http://blkid.cn/wp-content/uploads/2018/04/e5969cb75e7ee0c9d38fc34c6686da41小运营图1.png',0,'attachment','image/png',0),(112,1,'2018-04-18 10:20:03','2018-04-18 10:20:03','<h3 data-source-line=\"1\"><strong><span style=\"color: #ff6600;\">chmod</span></strong></h3>\r\n<pre data-source-line=\"3\"><code class=\"hljs\">chmod -R <span class=\"hljs-number\">777</span> <span class=\"hljs-regexp\">/tmp/</span>practise\r\n</code></pre>\r\n<p data-source-line=\"6\">这个目录下所有的目录的所有文件所有权限均变为 777</p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-keyword\">ls</span> -ld <span class=\"hljs-string\">/tmp/practise</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">查看该目录下的权限</p>\r\n\r\n<pre data-source-line=\"13\"><code class=\"hljs\">useradd  		<span class=\"zh-hans\">添加用户</span>\r\n<span class=\"zh-hans\">权限定义</span>\r\n<span class=\"hljs-keyword\">file</span>\r\nr:cat/more/head/tail/less		\r\nw: vim\r\nx: script / commond\r\ndriectory:			<span class=\"zh-hans\">有</span>r<span class=\"zh-hans\">权限一定有</span>X<span class=\"zh-hans\">权限</span>  <span class=\"zh-hans\">成对出现</span>\r\nr: ls\r\nw: touch /mkdir /rmdir /rm\r\nx:cd\r\n\r\n<span class=\"hljs-symbol\">$</span> chmod u+x <span class=\"hljs-keyword\">file</span>                <span class=\"zh-hans\">　　　</span>   <span class=\"zh-hans\">给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的属主增加执行权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">751</span> <span class=\"hljs-keyword\">file</span>                <span class=\"zh-hans\">　　　</span>   <span class=\"zh-hans\">给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的属主分配读、写、执行</span>(<span class=\"hljs-number\">7</span>)<span class=\"zh-hans\">的权限，给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的所在组分配读、执行</span>(<span class=\"hljs-number\">5</span>)<span class=\"zh-hans\">的权限，给其他用户分配执行</span>(<span class=\"hljs-number\">1</span>)<span class=\"zh-hans\">的权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod u=rwx,g=rx,o=x <span class=\"hljs-keyword\">file</span>      <span class=\"zh-hans\">上例的另一种形式</span>\r\n<span class=\"hljs-symbol\">$</span> chmod =r <span class=\"hljs-keyword\">file</span>                 <span class=\"zh-hans\">　　　　为所有用户分配读权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">444</span> <span class=\"hljs-keyword\">file</span>              <span class=\"zh-hans\">　　　　</span> <span class=\"zh-hans\">同上例</span>\r\n<span class=\"hljs-symbol\">$</span> chmod a-wx,a+r   <span class=\"hljs-keyword\">file</span>   <span class=\"zh-hans\">　　</span> <span class=\"zh-hans\">　</span>   <span class=\"zh-hans\">同上例</span>\r\n<span class=\"hljs-symbol\">$</span> chmod -R u+r directory       <span class=\"zh-hans\">　</span>   <span class=\"zh-hans\">递归地给</span>directory<span class=\"zh-hans\">目录下所有文件和子目录的属主分配读的权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">4755</span>                          <span class=\"zh-hans\">　　设置用</span>ID<span class=\"zh-hans\">，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。</span>\r\n</code></pre>\r\n<p data-source-line=\"36\"><code class=\"hljs\">umask -S  <span class=\"zh-hans\">显示缺省的权限</span>\r\ntouch <span class=\"zh-hans\">新建的文件不会有</span>X<span class=\"zh-hans\">权限</span>\r\nchown	<span class=\"zh-hans\">更改所属用户</span>\r\nchgrp		<span class=\"zh-hans\">更改组</span>\r\nu	<span class=\"zh-hans\">用户的当前权限</span>\r\ng	<span class=\"zh-hans\">组的当前权限</span>\r\no	<span class=\"zh-hans\">其他用户的当前权限</span></code>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\"></code></h3>\r\n<span class=\"hljs-builtin-name\" style=\"color: #ff6600;\">find</span>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\"></code></h3>\r\n<code class=\"hljs\"> <span class=\"zh-hans\">文件搜索命令</span>\r\n<span class=\"zh-hans\">      不要在服务器</span> <span class=\"zh-hans\">高峰期查找，搜索条件越小越好</span>\r\n</code>\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> init   <span class=\"zh-hans\">精确搜索</span></code><code class=\"hljs\">init\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> *init  <span class=\"zh-hans\">模糊查找</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> init???   ?<span class=\"zh-hans\">匹配单个字符</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /etc -name init???\r\n-iname     <span class=\"zh-hans\">不区分大小写</span>			<span class=\"zh-hans\">根据文件名查找</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /<span class=\"zh-hans\">【路径】</span> -size </code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /home -user\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /etc </code>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\"></code></h3>\r\n<code class=\"hljs\">useradd   <span class=\"zh-hans\">添加用户</span>\r\n</code>\r\n\r\n<code class=\"hljs\">userdel   	<span class=\"zh-hans\">删除用户</span>\r\n</code>\r\n\r\n<code class=\"hljs\">who<span class=\"zh-hans\">命令用于显示谁登录了系统</span>\r\n</code>\r\n\r\n<code class=\"hljs\">whoami<span class=\"zh-hans\">的命令，只输出用户账号。</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"zh-hans\">而</span>who<span class=\"zh-hans\">或者</span>who am i<span class=\"zh-hans\">不仅显示账号，还显示终端文件名、时间、来源</span>IP<span class=\"zh-hans\">等。</span>\r\n</code>\r\n\r\n<code class=\"hljs\">uptime <span class=\"zh-hans\">显示系统当前时间</span>\r\nw<span class=\"zh-hans\">命令不仅可以看到登录服务器的用户信息，而且可以看到这些用户做了什么</span>\r\n</code>\r\n<pre data-source-line=\"66\"><code class=\"hljs\"><span class=\"zh-hans\">tar\r\n\r\n压缩、解压缩命令</span>\r\n<span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">解包：</span>tar xvf FileName<span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">打包：</span>tar cvf FileName<span class=\"hljs-selector-class\">.tar</span> DirName\r\n<span class=\"zh-hans\">（注：</span>tar<span class=\"zh-hans\">是打包，不是压缩！）</span>\r\n<span class=\"zh-hans\">———————————————</span>\r\n<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">解压</span><span class=\"hljs-number\">1</span><span class=\"zh-hans\">：</span>gunzip FileName<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">解压</span><span class=\"hljs-number\">2</span><span class=\"zh-hans\">：</span>gzip -d FileName<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">压缩：</span>gzip FileName\r\n<span class=\"zh-hans\">———————————————</span>\r\n<span class=\"hljs-selector-class\">.zip</span>\r\n<span class=\"zh-hans\">解压：</span>unzip FileName<span class=\"hljs-selector-class\">.zip</span>\r\n<span class=\"zh-hans\">压缩：</span>zip FileName<span class=\"hljs-selector-class\">.zip</span> DirName\r\n<span class=\"zh-hans\">打包：</span>tar -cvf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span>  <span class=\"zh-hans\">被打包的文件</span>\r\n<span class=\"zh-hans\">解包：</span>tar -xvf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">打包压缩文件</span>: tar -cvzf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>  <span class=\"zh-hans\">被打包的压缩文件</span>\r\n<span class=\"zh-hans\">解包压缩文件：</span>tar -xvzf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">边打包边压缩：</span> tar -cvjf <span class=\"zh-hans\">压缩文件名</span>  <span class=\"zh-hans\">被压缩文件</span>\r\n<span class=\"zh-hans\">解压缩包：</span>tar -xvjf <span class=\"zh-hans\">压缩文件名</span>\r\n</code></pre>\r\n<pre data-source-line=\"92\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">、</span>vim<span class=\"zh-hans\">编辑器常用快捷键</span>\r\n      <span class=\"hljs-number\">1</span><span class=\"zh-hans\">）打开项目地址：</span>fn+f9\r\n      <span class=\"hljs-number\">2</span><span class=\"zh-hans\">）光标切换到项目列表右边：</span><span class=\"hljs-section\">control</span>+w+l\r\n      <span class=\"hljs-number\">3</span><span class=\"zh-hans\">）光标切换到项目左边：</span><span class=\"hljs-section\">control</span>+w+h\r\n      <span class=\"hljs-number\">4</span><span class=\"zh-hans\">）光标切换到文件下边：</span><span class=\"hljs-section\">control</span>+w+j\r\n      <span class=\"hljs-number\">5</span><span class=\"zh-hans\">）光标切换到文件上边：</span><span class=\"hljs-section\">control</span>+w+k\r\n      <span class=\"hljs-number\">6</span><span class=\"zh-hans\">）将光标所在的字符大写：</span>shift+~\r\n      <span class=\"hljs-number\">7</span><span class=\"zh-hans\">）将光标所在的单词大写：</span>g+U+w\r\n      <span class=\"hljs-number\">8</span><span class=\"zh-hans\">）将光标所在的单词小写：</span>g+u+w\r\n      <span class=\"hljs-number\">9</span><span class=\"zh-hans\">）删除光标所在后面的一行所有：</span>C\r\n     <span class=\"hljs-number\">10</span><span class=\"zh-hans\">）移动到光标所在行的最后一个字符：</span>$\r\n     <span class=\"hljs-number\">11</span><span class=\"zh-hans\">）移动到光标所在行的开头：</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">（数字零）</span>\r\n     <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）移动到光标的第一个一个字符：</span>^\r\n     <span class=\"hljs-number\">13</span><span class=\"zh-hans\">）反撤销一次：</span><span class=\"hljs-section\">control</span>+r\r\n     <span class=\"hljs-number\">14</span><span class=\"zh-hans\">）撤销：</span>u\r\n     <span class=\"hljs-number\">15</span><span class=\"zh-hans\">）格式化代码：</span>=\r\n     <span class=\"hljs-number\">16</span><span class=\"zh-hans\">）从光标所在行选中：</span>V\r\n     <span class=\"hljs-number\">17</span><span class=\"zh-hans\">）从光标所在字符选中：</span>v\r\n     <span class=\"hljs-number\">18</span><span class=\"zh-hans\">）退出窗口：</span><span class=\"hljs-section\">control</span>+z\r\n     <span class=\"hljs-number\">19</span>   <span class=\"zh-hans\">进入窗口：</span>f+g <span class=\"zh-hans\">回车</span></code></pre>','chmod、tar、vim相关命令','','publish','open','open','','112','','','2018-04-18 10:20:30','2018-04-18 10:20:30','',0,'http://blkid.cn/?p=112',0,'post','',0),(89,1,'2018-04-10 13:00:38','2018-04-10 13:00:38','&nbsp;\n\n笔记：\n<div>\n<div>tcp / ip 三次握手</div>\n<div>1、客户端发送syn包给服务器，并进入SYN-SENT 状态，等待服务器确认</div>\n<div>2、服务器收到SYN包，反馈给客户端一个syn+ack包，，此时服务器进入syn—recv状态</div>\n<div>3、客户端收到SYN+ack包，向服务器发送确认包ACK，客户端和服务器同时进入established状态，完成三次握手</div>\n</div>\n<div></div>\n<div><img class=\"alignnone size-medium wp-image-90\" src=\"http://blkid.cn/wp-content/uploads/2018/04/100327002629-300x226.png\" alt=\"\" width=\"300\" height=\"226\" /></div>\n<div></div>\n<div>\n<div>四次挥手</div>\n<div>1、关闭方向另一方发送一个带有fin的附加标记的报文</div>\n<div>2、收到的一方先向主机A回复确认报文ACK，同时通知自己相应的程序：关闭连接，使应用程序作出相应的清理工作</div>\n<div>3、收到fin请求方完成清理工后，像发送方，回复fin报文段</div>\n<div>4、发送方收到fin报文段后，向服务器发送一个ACK，标示连接彻底释放</div>\n</div>','tcp/ip 三次握手','','inherit','closed','closed','','71-autosave-v1','','','2018-04-10 13:00:38','2018-04-10 13:00:38','',71,'http://blkid.cn/?p=89',0,'revision','',0),(90,1,'2018-04-10 13:00:33','2018-04-10 13:00:33','','100327002629','','inherit','open','closed','','100327002629','','','2018-04-10 13:00:33','2018-04-10 13:00:33','',71,'http://blkid.cn/wp-content/uploads/2018/04/100327002629.png',0,'attachment','image/png',0),(91,1,'2018-04-10 13:01:04','2018-04-10 13:01:04','','100327022731','','inherit','open','closed','','100327022731','','','2018-04-10 13:01:04','2018-04-10 13:01:04','',71,'http://blkid.cn/wp-content/uploads/2018/04/100327022731.jpg',0,'attachment','image/jpeg',0),(92,1,'2018-04-10 13:01:14','2018-04-10 13:01:14','&nbsp;\r\n\r\n笔记：\r\n<div>\r\n<div>tcp / ip 三次握手</div>\r\n<div>1、客户端发送syn包给服务器，并进入SYN-SENT 状态，等待服务器确认</div>\r\n<div>2、服务器收到SYN包，反馈给客户端一个syn+ack包，，此时服务器进入syn—recv状态</div>\r\n<div>3、客户端收到SYN+ack包，向服务器发送确认包ACK，客户端和服务器同时进入established状态，完成三次握手</div>\r\n</div>\r\n<div></div>\r\n<div><img class=\"alignnone  wp-image-90\" src=\"http://blkid.cn/wp-content/uploads/2018/04/100327002629-300x226.png\" alt=\"\" width=\"402\" height=\"303\" /></div>\r\n<div></div>\r\n<div>\r\n<div>四次挥手</div>\r\n<div>1、关闭方向另一方发送一个带有fin的附加标记的报文</div>\r\n<div>2、收到的一方先向主机A回复确认报文ACK，同时通知自己相应的程序：关闭连接，使应用程序作出相应的清理工作</div>\r\n<div>3、收到fin请求方完成清理工后，像发送方，回复fin报文段</div>\r\n<div>4、发送方收到fin报文段后，向服务器发送一个ACK，标示连接彻底释放</div>\r\n</div>\r\n<div><img class=\"alignnone size-medium wp-image-91\" src=\"http://blkid.cn/wp-content/uploads/2018/04/100327022731-300x223.jpg\" alt=\"\" width=\"300\" height=\"223\" /></div>\r\n<div></div>','tcp/ip 三次握手','','inherit','closed','closed','','71-revision-v1','','','2018-04-10 13:01:14','2018-04-10 13:01:14','',71,'http://blkid.cn/?p=92',0,'revision','',0),(93,1,'2018-04-10 13:01:51','2018-04-10 13:01:51','&nbsp;\r\n\r\n笔记：\r\n<div>\r\n<div>tcp / ip 三次握手</div>\r\n<div>1、客户端发送syn包给服务器，并进入SYN-SENT 状态，等待服务器确认</div>\r\n<div>2、服务器收到SYN包，反馈给客户端一个syn+ack包，，此时服务器进入syn—recv状态</div>\r\n<div>3、客户端收到SYN+ack包，向服务器发送确认包ACK，客户端和服务器同时进入established状态，完成三次握手</div>\r\n</div>\r\n<div></div>\r\n<div><img class=\"alignnone wp-image-90\" src=\"http://blkid.cn/wp-content/uploads/2018/04/100327002629-300x226.png\" alt=\"\" width=\"402\" height=\"303\" /></div>\r\n<div></div>\r\n<div>\r\n<div>四次挥手</div>\r\n<div>1、关闭方向另一方发送一个带有fin的附加标记的报文</div>\r\n<div>2、收到的一方先向主机A回复确认报文ACK，同时通知自己相应的程序：关闭连接，使应用程序作出相应的清理工作</div>\r\n<div>3、收到fin请求方完成清理工后，像发送方，回复fin报文段</div>\r\n<div>4、发送方收到fin报文段后，向服务器发送一个ACK，标示连接彻底释放</div>\r\n</div>\r\n<div><img class=\"alignnone  wp-image-91\" src=\"http://blkid.cn/wp-content/uploads/2018/04/100327022731-300x223.jpg\" alt=\"\" width=\"459\" height=\"341\" /></div>\r\n<div></div>','tcp/ip 三次握手','','inherit','closed','closed','','71-revision-v1','','','2018-04-10 13:01:51','2018-04-10 13:01:51','',71,'http://blkid.cn/?p=93',0,'revision','',0),(94,1,'2018-04-10 13:16:53','2018-04-10 13:16:53','在Python中，与时间处理有关的模块就包括：<!--5f39ae17-8c62-4a45-bc43-b32064c9388a:W3siYmxvY2tUeXBlIjoicGFyYWdyYXBoIiwic3R5bGVzIjp7ImFsaWduIjoibGVmdCIsImluZGVudCI6MCwidGV4dC1pbmRlbnQiOjAsImxpbmUtaGVpZ2h0IjoxLjc1fSwiYmxvY2tJZCI6IjI3LTE1MTM5NDAxNTAwNDYiLCJyaWNoVGV4dCI6eyJpc1JpY2hUZXh0Ijp0cnVlLCJrZWVwTGluZUJyZWFrIjp0cnVlLCJkYXRhIjpbeyJjaGFyIjoi5ZyoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJQIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ5Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ0Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJvIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJuIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLkuK0iLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6Iu+8jCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5LiOIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLml7YiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IumXtCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5aSEIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnkIYiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaciSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5YWzIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnmoQiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaooSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5Z2XIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLlsLEiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuWMhSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5ousIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLvvJoiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19XX19XQ==--><strong>time</strong>，<strong>datetime</strong>以及<strong>calendar</strong>。这篇文章，主要讲解time模块。\r\n\r\n在开始之前，首先要说明这几点：\r\n\r\n1.在Python中，通常有这几种方式来表示时间\r\n<pre data-source-line=\"5\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">）时间戳</span>\r\n<span class=\"hljs-number\">2</span><span class=\"zh-hans\">）格式化的时间字符串</span>\r\n<span class=\"hljs-number\">3</span><span class=\"zh-hans\">）元组（</span>struct_time<span class=\"zh-hans\">）共九个元素。由于</span>Python<span class=\"zh-hans\">的</span>time<span class=\"zh-hans\">模块实现主要调用</span>C<span class=\"zh-hans\">库，所以各个平台可能有所不同。</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">2.UTC（Coordinated Universal Time，世界协调时）亦即格林威治天文时间，世界标准时间。在中国为UTC+8。DST（Daylight Saving Time）即夏令时。</p>\r\n<p data-source-line=\"13\">3.时间戳（timestamp）的方式：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。</p>\r\n<p data-source-line=\"15\">4.元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。下面列出这种方式元组中的几个元素：</p>\r\n\r\n<pre data-source-line=\"18\"><code class=\"hljs\"><span class=\"zh-hans\">索引（</span>Index<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">属性（</span>Attribute<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">值（</span>Values<span class=\"zh-hans\">）</span>\r\n<span class=\"hljs-number\">0</span> tm_year<span class=\"zh-hans\">（年）</span> <span class=\"zh-hans\">比如</span><span class=\"hljs-number\">2011</span>\r\n<span class=\"hljs-number\">1</span> tm_mon<span class=\"zh-hans\">（月）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">12</span>\r\n<span class=\"hljs-number\">2</span> tm_mday<span class=\"zh-hans\">（日）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">31</span>\r\n<span class=\"hljs-number\">3</span> tm_hour<span class=\"zh-hans\">（时）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">23</span>\r\n<span class=\"hljs-number\">4</span> tm_min<span class=\"zh-hans\">（分）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>\r\n<span class=\"hljs-number\">5</span> tm_sec<span class=\"zh-hans\">（秒）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">61</span>\r\n<span class=\"hljs-number\">6</span> tm_wday<span class=\"zh-hans\">（</span>weekday<span class=\"zh-hans\">）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">（</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">表示周日）</span>\r\n<span class=\"hljs-number\">7</span> tm_yday<span class=\"zh-hans\">（一年中的第几天）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">366</span>\r\n<span class=\"hljs-number\">8</span> tm_isdst<span class=\"zh-hans\">（是否是夏令时）</span> <span class=\"zh-hans\">默认为</span><span class=\"hljs-number\">-1</span>\r\n</code></pre>\r\n<p data-source-line=\"31\">接着介绍time模块中常用的几个函数： 1）time.localtime([secs])：将一个时间戳转换为当前时区的struct_time。secs参数未提供，则以当前时间为准。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime()\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">14</span>, tm_sec=<span class=\"hljs-number\">50</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime(<span class=\"hljs-number\">1304575584.1361799</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">6</span>, tm_sec=<span class=\"hljs-number\">24</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n</code></pre>\r\n<p data-source-line=\"43\">2）time.gmtime([secs])：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"46\"><code class=\"hljs\">&gt;&gt;&gt;time.gmtime()\r\ntime.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=6, tm_min=19, tm_sec=48, tm_wday=3, tm_yday=125, tm_isdst=0)\r\n</code></pre>\r\n<p data-source-line=\"51\">3）time.time()：返回当前时间的时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"54\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.time()\r\n<span class=\"hljs-number\">1304575584.1361799</span>\r\n</code></pre>\r\n<p data-source-line=\"60\">4）time.mktime(t)：将一个struct_time转化为时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"64\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.mktime(time.localtime())\r\n<span class=\"hljs-number\">1304576839.0</span>\r\n</code></pre>\r\n<p data-source-line=\"69\">5）time.sleep(secs)：线程推迟指定的时间运行。单位为秒。 6）time.clock()：这个需要注意，在不同的系统上含义不同。在UNIX系统上，它返回的是“进程时间”，它是用秒表示的浮点数（时间戳）。而在WINDOWS中，第一次调用，返回的是进程运行的实际时间。而第二次之后的调用是自第一次调用以后到现在的运行时间。（实际上是以WIN32上QueryPerformanceCounter()为基础，它比毫秒表示更为精确） 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"74\"><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> time \r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\'__main__\'</span>: \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock1:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock2:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock3:%s\"</span> % time.clock()\r\n</code></pre>\r\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"zh-hans\">运行结果：</span>\r\nclock1:3.35238137808e-006\r\nclock2:1.00004944763\r\nclock3:2.00012040636\r\n</code></pre>\r\n<p data-source-line=\"92\">其中第一个clock()输出的是程序运行时间 第二、三个clock()输出的都是与第一个clock的时间间隔 7）time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：\'Sun Jun 20 23:21:05 1993\'。如果没有参数，将会将time.localtime()作为参数传入。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"98\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.asctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:55:43 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"103\">8）time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"107\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:09 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(time.time())\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:39 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(<span class=\"hljs-number\">1304579615</span>)\r\n<span class=\"hljs-string\">\'Thu May 5 15:13:35 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"116\">9）time.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。如果元组中任何一个元素越界，ValueError的错误将会被抛出。</p>\r\n\r\n<pre data-source-line=\"118\"><code class=\"hljs\"><span class=\"xml\"><span class=\"zh-hans\">格式</span> <span class=\"zh-hans\">含义</span> <span class=\"zh-hans\">备注</span>\r\n</span><span class=\"perl\">%a <span class=\"zh-hans\">本地（</span>locale<span class=\"zh-hans\">）简化星期名称</span> </span>\r\n<span class=\"perl\">%A <span class=\"zh-hans\">本地完整星期名称</span> </span>\r\n<span class=\"perl\">%b <span class=\"zh-hans\">本地简化月份名称</span> </span>\r\n<span class=\"perl\">%B <span class=\"zh-hans\">本地完整月份名称</span> </span>\r\n<span class=\"perl\">%c <span class=\"zh-hans\">本地相应的日期和时间表示</span> </span>\r\n<span class=\"perl\">%d <span class=\"zh-hans\">一个月中的第几天（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">31</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%H <span class=\"zh-hans\">一天中的第几个小时（</span><span class=\"hljs-number\">24</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">23</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%I <span class=\"zh-hans\">第几个小时（</span><span class=\"hljs-number\">12</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%j <span class=\"zh-hans\">一年中的第几天（</span><span class=\"hljs-number\">001</span> - <span class=\"hljs-number\">366</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%m <span class=\"zh-hans\">月份（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%M <span class=\"zh-hans\">分钟数（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">59</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%p <span class=\"zh-hans\">本地</span>am<span class=\"zh-hans\">或者</span>pm<span class=\"zh-hans\">的相应符</span> <span class=\"zh-hans\">一</span></span>\r\n<span class=\"perl\">%S <span class=\"zh-hans\">秒（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">61</span><span class=\"zh-hans\">）</span> <span class=\"zh-hans\">二</span></span>\r\n<span class=\"perl\">%U <span class=\"zh-hans\">一年中的星期数。（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">53</span><span class=\"zh-hans\">星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">周。</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%w <span class=\"zh-hans\">一个星期中的第几天（</span><span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">，</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">是星期天）</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%W <span class=\"zh-hans\">和</span>%U<span class=\"zh-hans\">基本相同，不同的是</span>%W<span class=\"zh-hans\">以星期一为一个星期的开始。</span> </span>\r\n<span class=\"perl\">%x <span class=\"zh-hans\">本地相应日期</span> </span>\r\n<span class=\"perl\">%X <span class=\"zh-hans\">本地相应时间</span> </span>\r\n<span class=\"perl\">%y <span class=\"zh-hans\">去掉世纪的年份（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">99</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%Y <span class=\"zh-hans\">完整的年份</span> </span>\r\n<span class=\"perl\">%Z <span class=\"zh-hans\">时区的名字（如果不存在为空字符）</span> </span>\r\n<span class=\"perl\">%% <span class=\"zh-hans\">‘</span>%\'<span class=\"zh-hans\">字符</span></span>\r\n</code></pre>\r\n<p data-source-line=\"144\">备注： “%p”只有与“%I”配合使用才有效果。 文档中强调确实是0 - 61，而不是59，闰年秒占两秒（汗一个）。 当使用strptime()函数时，只有当在这年中的周数和天数被确定的时候%U和%W才会被计算。 举个例子： 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"152\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strftime(<span class=\"hljs-string\">\"%Y-%m-%d %X\"</span>, time.localtime())\r\n<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>\r\n</code></pre>\r\n<p data-source-line=\"157\">10）time.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"161\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strptime(<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>, <span class=\"hljs-string\">\'%Y-%m-%d %X\'</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">16</span>, tm_min=<span class=\"hljs-number\">37</span>, tm_sec=<span class=\"hljs-number\">6</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">-1</span>)\r\n</code></pre>\r\n<p data-source-line=\"167\">在这个函数中，format默认为：\"%a %b %d %H:%M:%S %Y\"。 最后，我们来对time模块进行一个总结。根据之前描述，在Python中共有三种表达方式：1）timestamp 2）tuple或者struct_time 3）格式化字符串。 它们之间的转化如图所示：</p>\r\n<p data-source-line=\"167\"><img class=\"wp-image-95 aligncenter\" src=\"http://blkid.cn/wp-content/uploads/2018/04/0792839387384297BFF215FDDD0B21D9-212x300.jpeg\" alt=\"\" width=\"490\" height=\"693\" /></p>','python time模块详解','','publish','open','open','','94','','','2018-04-10 13:20:53','2018-04-10 13:20:53','',0,'http://blkid.cn/?p=94',0,'post','',0),(95,1,'2018-04-10 13:16:06','2018-04-10 13:16:06','','0792839387384297BFF215FDDD0B21D9','','inherit','open','closed','','0792839387384297bff215fddd0b21d9','','','2018-04-10 13:16:06','2018-04-10 13:16:06','',94,'http://blkid.cn/wp-content/uploads/2018/04/0792839387384297BFF215FDDD0B21D9.jpeg',0,'attachment','image/jpeg',0),(96,1,'2018-04-10 13:16:53','2018-04-10 13:16:53','<p data-source-line=\"2\">time，datetime以及calendar。这篇文章，主要讲解time模块。 在开始之前，首先要说明这几点： 1.在Python中，通常有这几种方式来表示时间</p>\r\n\r\n<pre data-source-line=\"5\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">）时间戳</span>\r\n<span class=\"hljs-number\">2</span><span class=\"zh-hans\">）格式化的时间字符串</span>\r\n<span class=\"hljs-number\">3</span><span class=\"zh-hans\">）元组（</span>struct_time<span class=\"zh-hans\">）共九个元素。由于</span>Python<span class=\"zh-hans\">的</span>time<span class=\"zh-hans\">模块实现主要调用</span>C<span class=\"zh-hans\">库，所以各个平台可能有所不同。</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">2.UTC（Coordinated Universal Time，世界协调时）亦即格林威治天文时间，世界标准时间。在中国为UTC+8。DST（Daylight Saving Time）即夏令时。</p>\r\n<p data-source-line=\"13\">3.时间戳（timestamp）的方式：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。</p>\r\n<p data-source-line=\"15\">4.元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。下面列出这种方式元组中的几个元素：</p>\r\n\r\n<pre data-source-line=\"18\"><code class=\"hljs\"><span class=\"zh-hans\">索引（</span>Index<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">属性（</span>Attribute<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">值（</span>Values<span class=\"zh-hans\">）</span>\r\n<span class=\"hljs-number\">0</span> tm_year<span class=\"zh-hans\">（年）</span> <span class=\"zh-hans\">比如</span><span class=\"hljs-number\">2011</span>\r\n<span class=\"hljs-number\">1</span> tm_mon<span class=\"zh-hans\">（月）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">12</span>\r\n<span class=\"hljs-number\">2</span> tm_mday<span class=\"zh-hans\">（日）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">31</span>\r\n<span class=\"hljs-number\">3</span> tm_hour<span class=\"zh-hans\">（时）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">23</span>\r\n<span class=\"hljs-number\">4</span> tm_min<span class=\"zh-hans\">（分）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>\r\n<span class=\"hljs-number\">5</span> tm_sec<span class=\"zh-hans\">（秒）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">61</span>\r\n<span class=\"hljs-number\">6</span> tm_wday<span class=\"zh-hans\">（</span>weekday<span class=\"zh-hans\">）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">（</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">表示周日）</span>\r\n<span class=\"hljs-number\">7</span> tm_yday<span class=\"zh-hans\">（一年中的第几天）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">366</span>\r\n<span class=\"hljs-number\">8</span> tm_isdst<span class=\"zh-hans\">（是否是夏令时）</span> <span class=\"zh-hans\">默认为</span><span class=\"hljs-number\">-1</span>\r\n</code></pre>\r\n<p data-source-line=\"31\">接着介绍time模块中常用的几个函数： 1）time.localtime([secs])：将一个时间戳转换为当前时区的struct_time。secs参数未提供，则以当前时间为准。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime()\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">14</span>, tm_sec=<span class=\"hljs-number\">50</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime(<span class=\"hljs-number\">1304575584.1361799</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">6</span>, tm_sec=<span class=\"hljs-number\">24</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n</code></pre>\r\n<p data-source-line=\"43\">2）time.gmtime([secs])：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"46\"><code class=\"hljs\">&gt;&gt;&gt;time.gmtime()\r\ntime.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=6, tm_min=19, tm_sec=48, tm_wday=3, tm_yday=125, tm_isdst=0)\r\n</code></pre>\r\n<p data-source-line=\"51\">3）time.time()：返回当前时间的时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"54\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.time()\r\n<span class=\"hljs-number\">1304575584.1361799</span>\r\n</code></pre>\r\n<p data-source-line=\"60\">4）time.mktime(t)：将一个struct_time转化为时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"64\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.mktime(time.localtime())\r\n<span class=\"hljs-number\">1304576839.0</span>\r\n</code></pre>\r\n<p data-source-line=\"69\">5）time.sleep(secs)：线程推迟指定的时间运行。单位为秒。 6）time.clock()：这个需要注意，在不同的系统上含义不同。在UNIX系统上，它返回的是“进程时间”，它是用秒表示的浮点数（时间戳）。而在WINDOWS中，第一次调用，返回的是进程运行的实际时间。而第二次之后的调用是自第一次调用以后到现在的运行时间。（实际上是以WIN32上QueryPerformanceCounter()为基础，它比毫秒表示更为精确） 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"74\"><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> time \r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\'__main__\'</span>: \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock1:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock2:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock3:%s\"</span> % time.clock()\r\n</code></pre>\r\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"zh-hans\">运行结果：</span>\r\nclock1:3.35238137808e-006\r\nclock2:1.00004944763\r\nclock3:2.00012040636\r\n</code></pre>\r\n<p data-source-line=\"92\">其中第一个clock()输出的是程序运行时间 第二、三个clock()输出的都是与第一个clock的时间间隔 7）time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：\'Sun Jun 20 23:21:05 1993\'。如果没有参数，将会将time.localtime()作为参数传入。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"98\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.asctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:55:43 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"103\">8）time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"107\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:09 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(time.time())\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:39 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(<span class=\"hljs-number\">1304579615</span>)\r\n<span class=\"hljs-string\">\'Thu May 5 15:13:35 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"116\">9）time.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。如果元组中任何一个元素越界，ValueError的错误将会被抛出。</p>\r\n\r\n<pre data-source-line=\"118\"><code class=\"hljs\"><span class=\"xml\"><span class=\"zh-hans\">格式</span> <span class=\"zh-hans\">含义</span> <span class=\"zh-hans\">备注</span>\r\n</span><span class=\"perl\">%a <span class=\"zh-hans\">本地（</span>locale<span class=\"zh-hans\">）简化星期名称</span> </span>\r\n<span class=\"perl\">%A <span class=\"zh-hans\">本地完整星期名称</span> </span>\r\n<span class=\"perl\">%b <span class=\"zh-hans\">本地简化月份名称</span> </span>\r\n<span class=\"perl\">%B <span class=\"zh-hans\">本地完整月份名称</span> </span>\r\n<span class=\"perl\">%c <span class=\"zh-hans\">本地相应的日期和时间表示</span> </span>\r\n<span class=\"perl\">%d <span class=\"zh-hans\">一个月中的第几天（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">31</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%H <span class=\"zh-hans\">一天中的第几个小时（</span><span class=\"hljs-number\">24</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">23</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%I <span class=\"zh-hans\">第几个小时（</span><span class=\"hljs-number\">12</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%j <span class=\"zh-hans\">一年中的第几天（</span><span class=\"hljs-number\">001</span> - <span class=\"hljs-number\">366</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%m <span class=\"zh-hans\">月份（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%M <span class=\"zh-hans\">分钟数（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">59</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%p <span class=\"zh-hans\">本地</span>am<span class=\"zh-hans\">或者</span>pm<span class=\"zh-hans\">的相应符</span> <span class=\"zh-hans\">一</span></span>\r\n<span class=\"perl\">%S <span class=\"zh-hans\">秒（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">61</span><span class=\"zh-hans\">）</span> <span class=\"zh-hans\">二</span></span>\r\n<span class=\"perl\">%U <span class=\"zh-hans\">一年中的星期数。（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">53</span><span class=\"zh-hans\">星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">周。</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%w <span class=\"zh-hans\">一个星期中的第几天（</span><span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">，</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">是星期天）</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%W <span class=\"zh-hans\">和</span>%U<span class=\"zh-hans\">基本相同，不同的是</span>%W<span class=\"zh-hans\">以星期一为一个星期的开始。</span> </span>\r\n<span class=\"perl\">%x <span class=\"zh-hans\">本地相应日期</span> </span>\r\n<span class=\"perl\">%X <span class=\"zh-hans\">本地相应时间</span> </span>\r\n<span class=\"perl\">%y <span class=\"zh-hans\">去掉世纪的年份（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">99</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%Y <span class=\"zh-hans\">完整的年份</span> </span>\r\n<span class=\"perl\">%Z <span class=\"zh-hans\">时区的名字（如果不存在为空字符）</span> </span>\r\n<span class=\"perl\">%% <span class=\"zh-hans\">‘</span>%\'<span class=\"zh-hans\">字符</span></span>\r\n</code></pre>\r\n<p data-source-line=\"144\">备注： “%p”只有与“%I”配合使用才有效果。 文档中强调确实是0 - 61，而不是59，闰年秒占两秒（汗一个）。 当使用strptime()函数时，只有当在这年中的周数和天数被确定的时候%U和%W才会被计算。 举个例子： 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"152\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strftime(<span class=\"hljs-string\">\"%Y-%m-%d %X\"</span>, time.localtime())\r\n<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>\r\n</code></pre>\r\n<p data-source-line=\"157\">10）time.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"161\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strptime(<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>, <span class=\"hljs-string\">\'%Y-%m-%d %X\'</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">16</span>, tm_min=<span class=\"hljs-number\">37</span>, tm_sec=<span class=\"hljs-number\">6</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">-1</span>)\r\n</code></pre>\r\n<p data-source-line=\"167\">在这个函数中，format默认为：\"%a %b %d %H:%M:%S %Y\"。 最后，我们来对time模块进行一个总结。根据之前描述，在Python中共有三种表达方式：1）timestamp 2）tuple或者struct_time 3）格式化字符串。 它们之间的转化如图所示：</p>\r\n<p data-source-line=\"167\"><img class=\"wp-image-95 aligncenter\" src=\"http://blkid.cn/wp-content/uploads/2018/04/0792839387384297BFF215FDDD0B21D9-212x300.jpeg\" alt=\"\" width=\"490\" height=\"693\" /></p>','','','inherit','closed','closed','','94-revision-v1','','','2018-04-10 13:16:53','2018-04-10 13:16:53','',94,'http://blkid.cn/?p=96',0,'revision','',0),(97,1,'2018-04-10 13:17:32','2018-04-10 13:17:32','<p data-source-line=\"2\">time，datetime以及calendar。这篇文章，主要讲解time模块。 在开始之前，首先要说明这几点： 1.在Python中，通常有这几种方式来表示时间</p>\r\n\r\n<pre data-source-line=\"5\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">）时间戳</span>\r\n<span class=\"hljs-number\">2</span><span class=\"zh-hans\">）格式化的时间字符串</span>\r\n<span class=\"hljs-number\">3</span><span class=\"zh-hans\">）元组（</span>struct_time<span class=\"zh-hans\">）共九个元素。由于</span>Python<span class=\"zh-hans\">的</span>time<span class=\"zh-hans\">模块实现主要调用</span>C<span class=\"zh-hans\">库，所以各个平台可能有所不同。</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">2.UTC（Coordinated Universal Time，世界协调时）亦即格林威治天文时间，世界标准时间。在中国为UTC+8。DST（Daylight Saving Time）即夏令时。</p>\r\n<p data-source-line=\"13\">3.时间戳（timestamp）的方式：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。</p>\r\n<p data-source-line=\"15\">4.元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。下面列出这种方式元组中的几个元素：</p>\r\n\r\n<pre data-source-line=\"18\"><code class=\"hljs\"><span class=\"zh-hans\">索引（</span>Index<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">属性（</span>Attribute<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">值（</span>Values<span class=\"zh-hans\">）</span>\r\n<span class=\"hljs-number\">0</span> tm_year<span class=\"zh-hans\">（年）</span> <span class=\"zh-hans\">比如</span><span class=\"hljs-number\">2011</span>\r\n<span class=\"hljs-number\">1</span> tm_mon<span class=\"zh-hans\">（月）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">12</span>\r\n<span class=\"hljs-number\">2</span> tm_mday<span class=\"zh-hans\">（日）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">31</span>\r\n<span class=\"hljs-number\">3</span> tm_hour<span class=\"zh-hans\">（时）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">23</span>\r\n<span class=\"hljs-number\">4</span> tm_min<span class=\"zh-hans\">（分）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>\r\n<span class=\"hljs-number\">5</span> tm_sec<span class=\"zh-hans\">（秒）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">61</span>\r\n<span class=\"hljs-number\">6</span> tm_wday<span class=\"zh-hans\">（</span>weekday<span class=\"zh-hans\">）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">（</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">表示周日）</span>\r\n<span class=\"hljs-number\">7</span> tm_yday<span class=\"zh-hans\">（一年中的第几天）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">366</span>\r\n<span class=\"hljs-number\">8</span> tm_isdst<span class=\"zh-hans\">（是否是夏令时）</span> <span class=\"zh-hans\">默认为</span><span class=\"hljs-number\">-1</span>\r\n</code></pre>\r\n<p data-source-line=\"31\">接着介绍time模块中常用的几个函数： 1）time.localtime([secs])：将一个时间戳转换为当前时区的struct_time。secs参数未提供，则以当前时间为准。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime()\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">14</span>, tm_sec=<span class=\"hljs-number\">50</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime(<span class=\"hljs-number\">1304575584.1361799</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">6</span>, tm_sec=<span class=\"hljs-number\">24</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n</code></pre>\r\n<p data-source-line=\"43\">2）time.gmtime([secs])：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"46\"><code class=\"hljs\">&gt;&gt;&gt;time.gmtime()\r\ntime.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=6, tm_min=19, tm_sec=48, tm_wday=3, tm_yday=125, tm_isdst=0)\r\n</code></pre>\r\n<p data-source-line=\"51\">3）time.time()：返回当前时间的时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"54\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.time()\r\n<span class=\"hljs-number\">1304575584.1361799</span>\r\n</code></pre>\r\n<p data-source-line=\"60\">4）time.mktime(t)：将一个struct_time转化为时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"64\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.mktime(time.localtime())\r\n<span class=\"hljs-number\">1304576839.0</span>\r\n</code></pre>\r\n<p data-source-line=\"69\">5）time.sleep(secs)：线程推迟指定的时间运行。单位为秒。 6）time.clock()：这个需要注意，在不同的系统上含义不同。在UNIX系统上，它返回的是“进程时间”，它是用秒表示的浮点数（时间戳）。而在WINDOWS中，第一次调用，返回的是进程运行的实际时间。而第二次之后的调用是自第一次调用以后到现在的运行时间。（实际上是以WIN32上QueryPerformanceCounter()为基础，它比毫秒表示更为精确） 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"74\"><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> time \r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\'__main__\'</span>: \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock1:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock2:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock3:%s\"</span> % time.clock()\r\n</code></pre>\r\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"zh-hans\">运行结果：</span>\r\nclock1:3.35238137808e-006\r\nclock2:1.00004944763\r\nclock3:2.00012040636\r\n</code></pre>\r\n<p data-source-line=\"92\">其中第一个clock()输出的是程序运行时间 第二、三个clock()输出的都是与第一个clock的时间间隔 7）time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：\'Sun Jun 20 23:21:05 1993\'。如果没有参数，将会将time.localtime()作为参数传入。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"98\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.asctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:55:43 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"103\">8）time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"107\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:09 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(time.time())\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:39 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(<span class=\"hljs-number\">1304579615</span>)\r\n<span class=\"hljs-string\">\'Thu May 5 15:13:35 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"116\">9）time.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。如果元组中任何一个元素越界，ValueError的错误将会被抛出。</p>\r\n\r\n<pre data-source-line=\"118\"><code class=\"hljs\"><span class=\"xml\"><span class=\"zh-hans\">格式</span> <span class=\"zh-hans\">含义</span> <span class=\"zh-hans\">备注</span>\r\n</span><span class=\"perl\">%a <span class=\"zh-hans\">本地（</span>locale<span class=\"zh-hans\">）简化星期名称</span> </span>\r\n<span class=\"perl\">%A <span class=\"zh-hans\">本地完整星期名称</span> </span>\r\n<span class=\"perl\">%b <span class=\"zh-hans\">本地简化月份名称</span> </span>\r\n<span class=\"perl\">%B <span class=\"zh-hans\">本地完整月份名称</span> </span>\r\n<span class=\"perl\">%c <span class=\"zh-hans\">本地相应的日期和时间表示</span> </span>\r\n<span class=\"perl\">%d <span class=\"zh-hans\">一个月中的第几天（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">31</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%H <span class=\"zh-hans\">一天中的第几个小时（</span><span class=\"hljs-number\">24</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">23</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%I <span class=\"zh-hans\">第几个小时（</span><span class=\"hljs-number\">12</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%j <span class=\"zh-hans\">一年中的第几天（</span><span class=\"hljs-number\">001</span> - <span class=\"hljs-number\">366</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%m <span class=\"zh-hans\">月份（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%M <span class=\"zh-hans\">分钟数（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">59</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%p <span class=\"zh-hans\">本地</span>am<span class=\"zh-hans\">或者</span>pm<span class=\"zh-hans\">的相应符</span> <span class=\"zh-hans\">一</span></span>\r\n<span class=\"perl\">%S <span class=\"zh-hans\">秒（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">61</span><span class=\"zh-hans\">）</span> <span class=\"zh-hans\">二</span></span>\r\n<span class=\"perl\">%U <span class=\"zh-hans\">一年中的星期数。（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">53</span><span class=\"zh-hans\">星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">周。</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%w <span class=\"zh-hans\">一个星期中的第几天（</span><span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">，</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">是星期天）</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%W <span class=\"zh-hans\">和</span>%U<span class=\"zh-hans\">基本相同，不同的是</span>%W<span class=\"zh-hans\">以星期一为一个星期的开始。</span> </span>\r\n<span class=\"perl\">%x <span class=\"zh-hans\">本地相应日期</span> </span>\r\n<span class=\"perl\">%X <span class=\"zh-hans\">本地相应时间</span> </span>\r\n<span class=\"perl\">%y <span class=\"zh-hans\">去掉世纪的年份（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">99</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%Y <span class=\"zh-hans\">完整的年份</span> </span>\r\n<span class=\"perl\">%Z <span class=\"zh-hans\">时区的名字（如果不存在为空字符）</span> </span>\r\n<span class=\"perl\">%% <span class=\"zh-hans\">‘</span>%\'<span class=\"zh-hans\">字符</span></span>\r\n</code></pre>\r\n<p data-source-line=\"144\">备注： “%p”只有与“%I”配合使用才有效果。 文档中强调确实是0 - 61，而不是59，闰年秒占两秒（汗一个）。 当使用strptime()函数时，只有当在这年中的周数和天数被确定的时候%U和%W才会被计算。 举个例子： 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"152\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strftime(<span class=\"hljs-string\">\"%Y-%m-%d %X\"</span>, time.localtime())\r\n<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>\r\n</code></pre>\r\n<p data-source-line=\"157\">10）time.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"161\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strptime(<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>, <span class=\"hljs-string\">\'%Y-%m-%d %X\'</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">16</span>, tm_min=<span class=\"hljs-number\">37</span>, tm_sec=<span class=\"hljs-number\">6</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">-1</span>)\r\n</code></pre>\r\n<p data-source-line=\"167\">在这个函数中，format默认为：\"%a %b %d %H:%M:%S %Y\"。 最后，我们来对time模块进行一个总结。根据之前描述，在Python中共有三种表达方式：1）timestamp 2）tuple或者struct_time 3）格式化字符串。 它们之间的转化如图所示：</p>\r\n<p data-source-line=\"167\"><img class=\"wp-image-95 aligncenter\" src=\"http://blkid.cn/wp-content/uploads/2018/04/0792839387384297BFF215FDDD0B21D9-212x300.jpeg\" alt=\"\" width=\"490\" height=\"693\" /></p>','python time模块详解','','inherit','closed','closed','','94-revision-v1','','','2018-04-10 13:17:32','2018-04-10 13:17:32','',94,'http://blkid.cn/?p=97',0,'revision','',0),(98,1,'2018-04-10 13:20:09','2018-04-10 13:20:09','在Python中，与时间处理有关的模块就包括：<!--5f39ae17-8c62-4a45-bc43-b32064c9388a:W3siYmxvY2tUeXBlIjoicGFyYWdyYXBoIiwic3R5bGVzIjp7ImFsaWduIjoibGVmdCIsImluZGVudCI6MCwidGV4dC1pbmRlbnQiOjAsImxpbmUtaGVpZ2h0IjoxLjc1fSwiYmxvY2tJZCI6IjI3LTE1MTM5NDAxNTAwNDYiLCJyaWNoVGV4dCI6eyJpc1JpY2hUZXh0Ijp0cnVlLCJrZWVwTGluZUJyZWFrIjp0cnVlLCJkYXRhIjpbeyJjaGFyIjoi5ZyoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJQIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ5Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ0Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJvIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJuIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLkuK0iLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6Iu+8jCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5LiOIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLml7YiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IumXtCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5aSEIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnkIYiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaciSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5YWzIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnmoQiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaooSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5Z2XIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLlsLEiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuWMhSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5ousIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLvvJoiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19XX19XQ==--><strong>time</strong>，<strong>datetime</strong>以及<strong>calendar</strong>。这篇文章，主要讲解time模块。\n\n在开始之前，首先要说明这几点：\n\n1.在Python中，通常有这几种方式来表示时间\n<pre data-source-line=\"5\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">）时间戳</span>\n<span class=\"hljs-number\">2</span><span class=\"zh-hans\">）格式化的时间字符串</span>\n<span class=\"hljs-number\">3</span><span class=\"zh-hans\">）元组（</span>struct_time<span class=\"zh-hans\">）共九个元素。由于</span>Python<span class=\"zh-hans\">的</span>time<span class=\"zh-hans\">模块实现主要调用</span>C<span class=\"zh-hans\">库，所以各个平台可能有所不同。</span>\n</code></pre>\n<p data-source-line=\"11\">2.UTC（Coordinated Universal Time，世界协调时）亦即格林威治天文时间，世界标准时间。在中国为UTC+8。DST（Daylight Saving Time）即夏令时。</p>\n<p data-source-line=\"13\">3.时间戳（timestamp）的方式：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。</p>\n<p data-source-line=\"15\">4.元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。下面列出这种方式元组中的几个元素：</p>\n\n<pre data-source-line=\"18\"><code class=\"hljs\"><span class=\"zh-hans\">索引（</span>Index<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">属性（</span>Attribute<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">值（</span>Values<span class=\"zh-hans\">）</span>\n<span class=\"hljs-number\">0</span> tm_year<span class=\"zh-hans\">（年）</span> <span class=\"zh-hans\">比如</span><span class=\"hljs-number\">2011</span>\n<span class=\"hljs-number\">1</span> tm_mon<span class=\"zh-hans\">（月）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">12</span>\n<span class=\"hljs-number\">2</span> tm_mday<span class=\"zh-hans\">（日）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">31</span>\n<span class=\"hljs-number\">3</span> tm_hour<span class=\"zh-hans\">（时）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">23</span>\n<span class=\"hljs-number\">4</span> tm_min<span class=\"zh-hans\">（分）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>\n<span class=\"hljs-number\">5</span> tm_sec<span class=\"zh-hans\">（秒）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">61</span>\n<span class=\"hljs-number\">6</span> tm_wday<span class=\"zh-hans\">（</span>weekday<span class=\"zh-hans\">）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">（</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">表示周日）</span>\n<span class=\"hljs-number\">7</span> tm_yday<span class=\"zh-hans\">（一年中的第几天）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">366</span>\n<span class=\"hljs-number\">8</span> tm_isdst<span class=\"zh-hans\">（是否是夏令时）</span> <span class=\"zh-hans\">默认为</span><span class=\"hljs-number\">-1</span>\n</code></pre>\n<p data-source-line=\"31\">接着介绍time模块中常用的几个函数： 1）time.localtime([secs])：将一个时间戳转换为当前时区的struct_time。secs参数未提供，则以当前时间为准。 复制代码 代码如下:</p>\n\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime()\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">14</span>, tm_sec=<span class=\"hljs-number\">50</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime(<span class=\"hljs-number\">1304575584.1361799</span>)\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">6</span>, tm_sec=<span class=\"hljs-number\">24</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\n</code></pre>\n<p data-source-line=\"43\">2）time.gmtime([secs])：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。 复制代码 代码如下:</p>\n\n<pre data-source-line=\"46\"><code class=\"hljs\">&gt;&gt;&gt;time.gmtime()\ntime.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=6, tm_min=19, tm_sec=48, tm_wday=3, tm_yday=125, tm_isdst=0)\n</code></pre>\n<p data-source-line=\"51\">3）time.time()：返回当前时间的时间戳。 复制代码 代码如下:</p>\n\n<pre data-source-line=\"54\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.time()\n<span class=\"hljs-number\">1304575584.1361799</span>\n</code></pre>\n<p data-source-line=\"60\">4）time.mktime(t)：将一个struct_time转化为时间戳。 复制代码 代码如下:</p>\n\n<pre data-source-line=\"64\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.mktime(time.localtime())\n<span class=\"hljs-number\">1304576839.0</span>\n</code></pre>\n<p data-source-line=\"69\">5）time.sleep(secs)：线程推迟指定的时间运行。单位为秒。 6）time.clock()：这个需要注意，在不同的系统上含义不同。在UNIX系统上，它返回的是“进程时间”，它是用秒表示的浮点数（时间戳）。而在WINDOWS中，第一次调用，返回的是进程运行的实际时间。而第二次之后的调用是自第一次调用以后到现在的运行时间。（实际上是以WIN32上QueryPerformanceCounter()为基础，它比毫秒表示更为精确） 复制代码 代码如下:</p>\n\n<pre data-source-line=\"74\"><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> time \n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\'__main__\'</span>: \n    time.sleep(<span class=\"hljs-number\">1</span>) \n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock1:%s\"</span> % time.clock() \n    time.sleep(<span class=\"hljs-number\">1</span>) \n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock2:%s\"</span> % time.clock() \n    time.sleep(<span class=\"hljs-number\">1</span>) \n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock3:%s\"</span> % time.clock()\n</code></pre>\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"zh-hans\">运行结果：</span>\nclock1:3.35238137808e-006\nclock2:1.00004944763\nclock3:2.00012040636\n</code></pre>\n<p data-source-line=\"92\">其中第一个clock()输出的是程序运行时间 第二、三个clock()输出的都是与第一个clock的时间间隔 7）time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：\'Sun Jun 20 23:21:05 1993\'。如果没有参数，将会将time.localtime()作为参数传入。 复制代码 代码如下:</p>\n\n<pre data-source-line=\"98\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.asctime()\n<span class=\"hljs-string\">\'Thu May 5 14:55:43 2011\'</span>\n</code></pre>\n<p data-source-line=\"103\">8）time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。 复制代码 代码如下:</p>\n\n<pre data-source-line=\"107\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime()\n<span class=\"hljs-string\">\'Thu May 5 14:58:09 2011\'</span>\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(time.time())\n<span class=\"hljs-string\">\'Thu May 5 14:58:39 2011\'</span>\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(<span class=\"hljs-number\">1304579615</span>)\n<span class=\"hljs-string\">\'Thu May 5 15:13:35 2011\'</span>\n</code></pre>\n<p data-source-line=\"116\">9）time.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。如果元组中任何一个元素越界，ValueError的错误将会被抛出。</p>\n\n<pre data-source-line=\"118\"><code class=\"hljs\"><span class=\"xml\"><span class=\"zh-hans\">格式</span> <span class=\"zh-hans\">含义</span> <span class=\"zh-hans\">备注</span>\n</span><span class=\"perl\">%a <span class=\"zh-hans\">本地（</span>locale<span class=\"zh-hans\">）简化星期名称</span> </span>\n<span class=\"perl\">%A <span class=\"zh-hans\">本地完整星期名称</span> </span>\n<span class=\"perl\">%b <span class=\"zh-hans\">本地简化月份名称</span> </span>\n<span class=\"perl\">%B <span class=\"zh-hans\">本地完整月份名称</span> </span>\n<span class=\"perl\">%c <span class=\"zh-hans\">本地相应的日期和时间表示</span> </span>\n<span class=\"perl\">%d <span class=\"zh-hans\">一个月中的第几天（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">31</span><span class=\"zh-hans\">）</span> </span>\n<span class=\"perl\">%H <span class=\"zh-hans\">一天中的第几个小时（</span><span class=\"hljs-number\">24</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">23</span><span class=\"zh-hans\">）</span> </span>\n<span class=\"perl\">%I <span class=\"zh-hans\">第几个小时（</span><span class=\"hljs-number\">12</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\n<span class=\"perl\">%j <span class=\"zh-hans\">一年中的第几天（</span><span class=\"hljs-number\">001</span> - <span class=\"hljs-number\">366</span><span class=\"zh-hans\">）</span> </span>\n<span class=\"perl\">%m <span class=\"zh-hans\">月份（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\n<span class=\"perl\">%M <span class=\"zh-hans\">分钟数（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">59</span><span class=\"zh-hans\">）</span> </span>\n<span class=\"perl\">%p <span class=\"zh-hans\">本地</span>am<span class=\"zh-hans\">或者</span>pm<span class=\"zh-hans\">的相应符</span> <span class=\"zh-hans\">一</span></span>\n<span class=\"perl\">%S <span class=\"zh-hans\">秒（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">61</span><span class=\"zh-hans\">）</span> <span class=\"zh-hans\">二</span></span>\n<span class=\"perl\">%U <span class=\"zh-hans\">一年中的星期数。（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">53</span><span class=\"zh-hans\">星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">周。</span> <span class=\"zh-hans\">三</span></span>\n<span class=\"perl\">%w <span class=\"zh-hans\">一个星期中的第几天（</span><span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">，</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">是星期天）</span> <span class=\"zh-hans\">三</span></span>\n<span class=\"perl\">%W <span class=\"zh-hans\">和</span>%U<span class=\"zh-hans\">基本相同，不同的是</span>%W<span class=\"zh-hans\">以星期一为一个星期的开始。</span> </span>\n<span class=\"perl\">%x <span class=\"zh-hans\">本地相应日期</span> </span>\n<span class=\"perl\">%X <span class=\"zh-hans\">本地相应时间</span> </span>\n<span class=\"perl\">%y <span class=\"zh-hans\">去掉世纪的年份（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">99</span><span class=\"zh-hans\">）</span> </span>\n<span class=\"perl\">%Y <span class=\"zh-hans\">完整的年份</span> </span>\n<span class=\"perl\">%Z <span class=\"zh-hans\">时区的名字（如果不存在为空字符）</span> </span>\n<span class=\"perl\">%% <span class=\"zh-hans\">‘</span>%\'<span class=\"zh-hans\">字符</span></span>\n</code></pre>\n<p data-source-line=\"144\">备注： “%p”只有与“%I”配合使用才有效果。 文档中强调确实是0 - 61，而不是59，闰年秒占两秒（汗一个）。 当使用strptime()函数时，只有当在这年中的周数和天数被确定的时候%U和%W才会被计算。 举个例子： 复制代码 代码如下:</p>\n\n<pre data-source-line=\"152\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strftime(<span class=\"hljs-string\">\"%Y-%m-%d %X\"</span>, time.localtime())\n<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>\n</code></pre>\n<p data-source-line=\"157\">10）time.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。 复制代码 代码如下:</p>\n\n<pre data-source-line=\"161\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strptime(<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>, <span class=\"hljs-string\">\'%Y-%m-%d %X\'</span>)\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">16</span>, tm_min=<span class=\"hljs-number\">37</span>, tm_sec=<span class=\"hljs-number\">6</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">-1</span>)\n</code></pre>\n<p data-source-line=\"167\">在这个函数中，format默认为：\"%a %b %d %H:%M:%S %Y\"。 最后，我们来对time模块进行一个总结。根据之前描述，在Python中共有三种表达方式：1）timestamp 2）tuple或者struct_time 3）格式化字符串。 它们之间的转化如图所示：</p>\n<p data-source-line=\"167\"><img class=\"wp-image-95 aligncenter\" src=\"http://blkid.cn/wp-content/uploads/2018/04/0792839387384297BFF215FDDD0B21D9-212x300.jpeg\" alt=\"\" width=\"490\" height=\"693\" /></p>','python time模块详解','','inherit','closed','closed','','94-autosave-v1','','','2018-04-10 13:20:09','2018-04-10 13:20:09','',94,'http://blkid.cn/?p=98',0,'revision','',0),(99,1,'2018-04-10 13:19:07','2018-04-10 13:19:07','<div>在Python中，与时间处理有关的模块就包括：<!--5f39ae17-8c62-4a45-bc43-b32064c9388a:W3siYmxvY2tUeXBlIjoicGFyYWdyYXBoIiwic3R5bGVzIjp7ImFsaWduIjoibGVmdCIsImluZGVudCI6MCwidGV4dC1pbmRlbnQiOjAsImxpbmUtaGVpZ2h0IjoxLjc1fSwiYmxvY2tJZCI6IjI3LTE1MTM5NDAxNTAwNDYiLCJyaWNoVGV4dCI6eyJpc1JpY2hUZXh0Ijp0cnVlLCJrZWVwTGluZUJyZWFrIjp0cnVlLCJkYXRhIjpbeyJjaGFyIjoi5ZyoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJQIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ5Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ0Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJvIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJuIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLkuK0iLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6Iu+8jCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5LiOIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLml7YiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IumXtCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5aSEIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnkIYiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaciSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5YWzIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnmoQiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaooSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5Z2XIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLlsLEiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuWMhSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5ousIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLvvJoiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19XX19XQ==--><strong>time</strong>，<strong>datetime</strong>以及<strong>calendar</strong>。这篇文章，主要讲解time模块。</div>\r\n<div>在开始之前，首先要说明这几点：</div>\r\n<div>1.在Python中，通常有这几种方式来表示时间</div>\r\n<pre data-source-line=\"5\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">）时间戳</span>\r\n<span class=\"hljs-number\">2</span><span class=\"zh-hans\">）格式化的时间字符串</span>\r\n<span class=\"hljs-number\">3</span><span class=\"zh-hans\">）元组（</span>struct_time<span class=\"zh-hans\">）共九个元素。由于</span>Python<span class=\"zh-hans\">的</span>time<span class=\"zh-hans\">模块实现主要调用</span>C<span class=\"zh-hans\">库，所以各个平台可能有所不同。</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">2.UTC（Coordinated Universal Time，世界协调时）亦即格林威治天文时间，世界标准时间。在中国为UTC+8。DST（Daylight Saving Time）即夏令时。</p>\r\n<p data-source-line=\"13\">3.时间戳（timestamp）的方式：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。</p>\r\n<p data-source-line=\"15\">4.元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。下面列出这种方式元组中的几个元素：</p>\r\n\r\n<pre data-source-line=\"18\"><code class=\"hljs\"><span class=\"zh-hans\">索引（</span>Index<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">属性（</span>Attribute<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">值（</span>Values<span class=\"zh-hans\">）</span>\r\n<span class=\"hljs-number\">0</span> tm_year<span class=\"zh-hans\">（年）</span> <span class=\"zh-hans\">比如</span><span class=\"hljs-number\">2011</span>\r\n<span class=\"hljs-number\">1</span> tm_mon<span class=\"zh-hans\">（月）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">12</span>\r\n<span class=\"hljs-number\">2</span> tm_mday<span class=\"zh-hans\">（日）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">31</span>\r\n<span class=\"hljs-number\">3</span> tm_hour<span class=\"zh-hans\">（时）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">23</span>\r\n<span class=\"hljs-number\">4</span> tm_min<span class=\"zh-hans\">（分）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>\r\n<span class=\"hljs-number\">5</span> tm_sec<span class=\"zh-hans\">（秒）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">61</span>\r\n<span class=\"hljs-number\">6</span> tm_wday<span class=\"zh-hans\">（</span>weekday<span class=\"zh-hans\">）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">（</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">表示周日）</span>\r\n<span class=\"hljs-number\">7</span> tm_yday<span class=\"zh-hans\">（一年中的第几天）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">366</span>\r\n<span class=\"hljs-number\">8</span> tm_isdst<span class=\"zh-hans\">（是否是夏令时）</span> <span class=\"zh-hans\">默认为</span><span class=\"hljs-number\">-1</span>\r\n</code></pre>\r\n<p data-source-line=\"31\">接着介绍time模块中常用的几个函数： 1）time.localtime([secs])：将一个时间戳转换为当前时区的struct_time。secs参数未提供，则以当前时间为准。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime()\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">14</span>, tm_sec=<span class=\"hljs-number\">50</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime(<span class=\"hljs-number\">1304575584.1361799</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">6</span>, tm_sec=<span class=\"hljs-number\">24</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n</code></pre>\r\n<p data-source-line=\"43\">2）time.gmtime([secs])：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"46\"><code class=\"hljs\">&gt;&gt;&gt;time.gmtime()\r\ntime.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=6, tm_min=19, tm_sec=48, tm_wday=3, tm_yday=125, tm_isdst=0)\r\n</code></pre>\r\n<p data-source-line=\"51\">3）time.time()：返回当前时间的时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"54\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.time()\r\n<span class=\"hljs-number\">1304575584.1361799</span>\r\n</code></pre>\r\n<p data-source-line=\"60\">4）time.mktime(t)：将一个struct_time转化为时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"64\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.mktime(time.localtime())\r\n<span class=\"hljs-number\">1304576839.0</span>\r\n</code></pre>\r\n<p data-source-line=\"69\">5）time.sleep(secs)：线程推迟指定的时间运行。单位为秒。 6）time.clock()：这个需要注意，在不同的系统上含义不同。在UNIX系统上，它返回的是“进程时间”，它是用秒表示的浮点数（时间戳）。而在WINDOWS中，第一次调用，返回的是进程运行的实际时间。而第二次之后的调用是自第一次调用以后到现在的运行时间。（实际上是以WIN32上QueryPerformanceCounter()为基础，它比毫秒表示更为精确） 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"74\"><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> time \r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\'__main__\'</span>: \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock1:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock2:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock3:%s\"</span> % time.clock()\r\n</code></pre>\r\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"zh-hans\">运行结果：</span>\r\nclock1:3.35238137808e-006\r\nclock2:1.00004944763\r\nclock3:2.00012040636\r\n</code></pre>\r\n<p data-source-line=\"92\">其中第一个clock()输出的是程序运行时间 第二、三个clock()输出的都是与第一个clock的时间间隔 7）time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：\'Sun Jun 20 23:21:05 1993\'。如果没有参数，将会将time.localtime()作为参数传入。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"98\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.asctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:55:43 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"103\">8）time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"107\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:09 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(time.time())\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:39 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(<span class=\"hljs-number\">1304579615</span>)\r\n<span class=\"hljs-string\">\'Thu May 5 15:13:35 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"116\">9）time.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。如果元组中任何一个元素越界，ValueError的错误将会被抛出。</p>\r\n\r\n<pre data-source-line=\"118\"><code class=\"hljs\"><span class=\"xml\"><span class=\"zh-hans\">格式</span> <span class=\"zh-hans\">含义</span> <span class=\"zh-hans\">备注</span>\r\n</span><span class=\"perl\">%a <span class=\"zh-hans\">本地（</span>locale<span class=\"zh-hans\">）简化星期名称</span> </span>\r\n<span class=\"perl\">%A <span class=\"zh-hans\">本地完整星期名称</span> </span>\r\n<span class=\"perl\">%b <span class=\"zh-hans\">本地简化月份名称</span> </span>\r\n<span class=\"perl\">%B <span class=\"zh-hans\">本地完整月份名称</span> </span>\r\n<span class=\"perl\">%c <span class=\"zh-hans\">本地相应的日期和时间表示</span> </span>\r\n<span class=\"perl\">%d <span class=\"zh-hans\">一个月中的第几天（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">31</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%H <span class=\"zh-hans\">一天中的第几个小时（</span><span class=\"hljs-number\">24</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">23</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%I <span class=\"zh-hans\">第几个小时（</span><span class=\"hljs-number\">12</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%j <span class=\"zh-hans\">一年中的第几天（</span><span class=\"hljs-number\">001</span> - <span class=\"hljs-number\">366</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%m <span class=\"zh-hans\">月份（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%M <span class=\"zh-hans\">分钟数（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">59</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%p <span class=\"zh-hans\">本地</span>am<span class=\"zh-hans\">或者</span>pm<span class=\"zh-hans\">的相应符</span> <span class=\"zh-hans\">一</span></span>\r\n<span class=\"perl\">%S <span class=\"zh-hans\">秒（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">61</span><span class=\"zh-hans\">）</span> <span class=\"zh-hans\">二</span></span>\r\n<span class=\"perl\">%U <span class=\"zh-hans\">一年中的星期数。（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">53</span><span class=\"zh-hans\">星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">周。</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%w <span class=\"zh-hans\">一个星期中的第几天（</span><span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">，</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">是星期天）</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%W <span class=\"zh-hans\">和</span>%U<span class=\"zh-hans\">基本相同，不同的是</span>%W<span class=\"zh-hans\">以星期一为一个星期的开始。</span> </span>\r\n<span class=\"perl\">%x <span class=\"zh-hans\">本地相应日期</span> </span>\r\n<span class=\"perl\">%X <span class=\"zh-hans\">本地相应时间</span> </span>\r\n<span class=\"perl\">%y <span class=\"zh-hans\">去掉世纪的年份（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">99</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%Y <span class=\"zh-hans\">完整的年份</span> </span>\r\n<span class=\"perl\">%Z <span class=\"zh-hans\">时区的名字（如果不存在为空字符）</span> </span>\r\n<span class=\"perl\">%% <span class=\"zh-hans\">‘</span>%\'<span class=\"zh-hans\">字符</span></span>\r\n</code></pre>\r\n<p data-source-line=\"144\">备注： “%p”只有与“%I”配合使用才有效果。 文档中强调确实是0 - 61，而不是59，闰年秒占两秒（汗一个）。 当使用strptime()函数时，只有当在这年中的周数和天数被确定的时候%U和%W才会被计算。 举个例子： 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"152\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strftime(<span class=\"hljs-string\">\"%Y-%m-%d %X\"</span>, time.localtime())\r\n<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>\r\n</code></pre>\r\n<p data-source-line=\"157\">10）time.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"161\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strptime(<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>, <span class=\"hljs-string\">\'%Y-%m-%d %X\'</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">16</span>, tm_min=<span class=\"hljs-number\">37</span>, tm_sec=<span class=\"hljs-number\">6</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">-1</span>)\r\n</code></pre>\r\n<p data-source-line=\"167\">在这个函数中，format默认为：\"%a %b %d %H:%M:%S %Y\"。 最后，我们来对time模块进行一个总结。根据之前描述，在Python中共有三种表达方式：1）timestamp 2）tuple或者struct_time 3）格式化字符串。 它们之间的转化如图所示：</p>\r\n<p data-source-line=\"167\"><img class=\"wp-image-95 aligncenter\" src=\"http://blkid.cn/wp-content/uploads/2018/04/0792839387384297BFF215FDDD0B21D9-212x300.jpeg\" alt=\"\" width=\"490\" height=\"693\" /></p>','python time模块详解','','inherit','closed','closed','','94-revision-v1','','','2018-04-10 13:19:07','2018-04-10 13:19:07','',94,'http://blkid.cn/?p=99',0,'revision','',0),(100,1,'2018-04-10 13:20:53','2018-04-10 13:20:53','在Python中，与时间处理有关的模块就包括：<!--5f39ae17-8c62-4a45-bc43-b32064c9388a:W3siYmxvY2tUeXBlIjoicGFyYWdyYXBoIiwic3R5bGVzIjp7ImFsaWduIjoibGVmdCIsImluZGVudCI6MCwidGV4dC1pbmRlbnQiOjAsImxpbmUtaGVpZ2h0IjoxLjc1fSwiYmxvY2tJZCI6IjI3LTE1MTM5NDAxNTAwNDYiLCJyaWNoVGV4dCI6eyJpc1JpY2hUZXh0Ijp0cnVlLCJrZWVwTGluZUJyZWFrIjp0cnVlLCJkYXRhIjpbeyJjaGFyIjoi5ZyoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJQIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ5Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJ0Iiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJoIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJvIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiJuIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLkuK0iLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6Iu+8jCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5LiOIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLml7YiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IumXtCIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5aSEIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnkIYiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaciSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5YWzIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLnmoQiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuaooSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5Z2XIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLlsLEiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19LHsiY2hhciI6IuWMhSIsInN0eWxlcyI6eyJjb2xvciI6IiMzMzMzMzMifX0seyJjaGFyIjoi5ousIiwic3R5bGVzIjp7ImNvbG9yIjoiIzMzMzMzMyJ9fSx7ImNoYXIiOiLvvJoiLCJzdHlsZXMiOnsiY29sb3IiOiIjMzMzMzMzIn19XX19XQ==--><strong>time</strong>，<strong>datetime</strong>以及<strong>calendar</strong>。这篇文章，主要讲解time模块。\r\n\r\n在开始之前，首先要说明这几点：\r\n\r\n1.在Python中，通常有这几种方式来表示时间\r\n<pre data-source-line=\"5\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">）时间戳</span>\r\n<span class=\"hljs-number\">2</span><span class=\"zh-hans\">）格式化的时间字符串</span>\r\n<span class=\"hljs-number\">3</span><span class=\"zh-hans\">）元组（</span>struct_time<span class=\"zh-hans\">）共九个元素。由于</span>Python<span class=\"zh-hans\">的</span>time<span class=\"zh-hans\">模块实现主要调用</span>C<span class=\"zh-hans\">库，所以各个平台可能有所不同。</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">2.UTC（Coordinated Universal Time，世界协调时）亦即格林威治天文时间，世界标准时间。在中国为UTC+8。DST（Daylight Saving Time）即夏令时。</p>\r\n<p data-source-line=\"13\">3.时间戳（timestamp）的方式：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。</p>\r\n<p data-source-line=\"15\">4.元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。下面列出这种方式元组中的几个元素：</p>\r\n\r\n<pre data-source-line=\"18\"><code class=\"hljs\"><span class=\"zh-hans\">索引（</span>Index<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">属性（</span>Attribute<span class=\"zh-hans\">）</span> <span class=\"zh-hans\">值（</span>Values<span class=\"zh-hans\">）</span>\r\n<span class=\"hljs-number\">0</span> tm_year<span class=\"zh-hans\">（年）</span> <span class=\"zh-hans\">比如</span><span class=\"hljs-number\">2011</span>\r\n<span class=\"hljs-number\">1</span> tm_mon<span class=\"zh-hans\">（月）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">12</span>\r\n<span class=\"hljs-number\">2</span> tm_mday<span class=\"zh-hans\">（日）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">31</span>\r\n<span class=\"hljs-number\">3</span> tm_hour<span class=\"zh-hans\">（时）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">23</span>\r\n<span class=\"hljs-number\">4</span> tm_min<span class=\"zh-hans\">（分）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>\r\n<span class=\"hljs-number\">5</span> tm_sec<span class=\"zh-hans\">（秒）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">61</span>\r\n<span class=\"hljs-number\">6</span> tm_wday<span class=\"zh-hans\">（</span>weekday<span class=\"zh-hans\">）</span> <span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">（</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">表示周日）</span>\r\n<span class=\"hljs-number\">7</span> tm_yday<span class=\"zh-hans\">（一年中的第几天）</span> <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">366</span>\r\n<span class=\"hljs-number\">8</span> tm_isdst<span class=\"zh-hans\">（是否是夏令时）</span> <span class=\"zh-hans\">默认为</span><span class=\"hljs-number\">-1</span>\r\n</code></pre>\r\n<p data-source-line=\"31\">接着介绍time模块中常用的几个函数： 1）time.localtime([secs])：将一个时间戳转换为当前时区的struct_time。secs参数未提供，则以当前时间为准。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"35\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime()\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">14</span>, tm_sec=<span class=\"hljs-number\">50</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.localtime(<span class=\"hljs-number\">1304575584.1361799</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">14</span>, tm_min=<span class=\"hljs-number\">6</span>, tm_sec=<span class=\"hljs-number\">24</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">0</span>)\r\n</code></pre>\r\n<p data-source-line=\"43\">2）time.gmtime([secs])：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"46\"><code class=\"hljs\">&gt;&gt;&gt;time.gmtime()\r\ntime.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=6, tm_min=19, tm_sec=48, tm_wday=3, tm_yday=125, tm_isdst=0)\r\n</code></pre>\r\n<p data-source-line=\"51\">3）time.time()：返回当前时间的时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"54\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.time()\r\n<span class=\"hljs-number\">1304575584.1361799</span>\r\n</code></pre>\r\n<p data-source-line=\"60\">4）time.mktime(t)：将一个struct_time转化为时间戳。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"64\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.mktime(time.localtime())\r\n<span class=\"hljs-number\">1304576839.0</span>\r\n</code></pre>\r\n<p data-source-line=\"69\">5）time.sleep(secs)：线程推迟指定的时间运行。单位为秒。 6）time.clock()：这个需要注意，在不同的系统上含义不同。在UNIX系统上，它返回的是“进程时间”，它是用秒表示的浮点数（时间戳）。而在WINDOWS中，第一次调用，返回的是进程运行的实际时间。而第二次之后的调用是自第一次调用以后到现在的运行时间。（实际上是以WIN32上QueryPerformanceCounter()为基础，它比毫秒表示更为精确） 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"74\"><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> time \r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\'__main__\'</span>: \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock1:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock2:%s\"</span> % time.clock() \r\n    time.sleep(<span class=\"hljs-number\">1</span>) \r\n    <span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">\"clock3:%s\"</span> % time.clock()\r\n</code></pre>\r\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"zh-hans\">运行结果：</span>\r\nclock1:3.35238137808e-006\r\nclock2:1.00004944763\r\nclock3:2.00012040636\r\n</code></pre>\r\n<p data-source-line=\"92\">其中第一个clock()输出的是程序运行时间 第二、三个clock()输出的都是与第一个clock的时间间隔 7）time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：\'Sun Jun 20 23:21:05 1993\'。如果没有参数，将会将time.localtime()作为参数传入。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"98\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.asctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:55:43 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"103\">8）time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"107\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime()\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:09 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(time.time())\r\n<span class=\"hljs-string\">\'Thu May 5 14:58:39 2011\'</span>\r\n<span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.ctime(<span class=\"hljs-number\">1304579615</span>)\r\n<span class=\"hljs-string\">\'Thu May 5 15:13:35 2011\'</span>\r\n</code></pre>\r\n<p data-source-line=\"116\">9）time.strftime(format[, t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。如果元组中任何一个元素越界，ValueError的错误将会被抛出。</p>\r\n\r\n<pre data-source-line=\"118\"><code class=\"hljs\"><span class=\"xml\"><span class=\"zh-hans\">格式</span> <span class=\"zh-hans\">含义</span> <span class=\"zh-hans\">备注</span>\r\n</span><span class=\"perl\">%a <span class=\"zh-hans\">本地（</span>locale<span class=\"zh-hans\">）简化星期名称</span> </span>\r\n<span class=\"perl\">%A <span class=\"zh-hans\">本地完整星期名称</span> </span>\r\n<span class=\"perl\">%b <span class=\"zh-hans\">本地简化月份名称</span> </span>\r\n<span class=\"perl\">%B <span class=\"zh-hans\">本地完整月份名称</span> </span>\r\n<span class=\"perl\">%c <span class=\"zh-hans\">本地相应的日期和时间表示</span> </span>\r\n<span class=\"perl\">%d <span class=\"zh-hans\">一个月中的第几天（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">31</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%H <span class=\"zh-hans\">一天中的第几个小时（</span><span class=\"hljs-number\">24</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">23</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%I <span class=\"zh-hans\">第几个小时（</span><span class=\"hljs-number\">12</span><span class=\"zh-hans\">小时制，</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%j <span class=\"zh-hans\">一年中的第几天（</span><span class=\"hljs-number\">001</span> - <span class=\"hljs-number\">366</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%m <span class=\"zh-hans\">月份（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%M <span class=\"zh-hans\">分钟数（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">59</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%p <span class=\"zh-hans\">本地</span>am<span class=\"zh-hans\">或者</span>pm<span class=\"zh-hans\">的相应符</span> <span class=\"zh-hans\">一</span></span>\r\n<span class=\"perl\">%S <span class=\"zh-hans\">秒（</span><span class=\"hljs-number\">01</span> - <span class=\"hljs-number\">61</span><span class=\"zh-hans\">）</span> <span class=\"zh-hans\">二</span></span>\r\n<span class=\"perl\">%U <span class=\"zh-hans\">一年中的星期数。（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">53</span><span class=\"zh-hans\">星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">周。</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%w <span class=\"zh-hans\">一个星期中的第几天（</span><span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">6</span><span class=\"zh-hans\">，</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">是星期天）</span> <span class=\"zh-hans\">三</span></span>\r\n<span class=\"perl\">%W <span class=\"zh-hans\">和</span>%U<span class=\"zh-hans\">基本相同，不同的是</span>%W<span class=\"zh-hans\">以星期一为一个星期的开始。</span> </span>\r\n<span class=\"perl\">%x <span class=\"zh-hans\">本地相应日期</span> </span>\r\n<span class=\"perl\">%X <span class=\"zh-hans\">本地相应时间</span> </span>\r\n<span class=\"perl\">%y <span class=\"zh-hans\">去掉世纪的年份（</span><span class=\"hljs-number\">00</span> - <span class=\"hljs-number\">99</span><span class=\"zh-hans\">）</span> </span>\r\n<span class=\"perl\">%Y <span class=\"zh-hans\">完整的年份</span> </span>\r\n<span class=\"perl\">%Z <span class=\"zh-hans\">时区的名字（如果不存在为空字符）</span> </span>\r\n<span class=\"perl\">%% <span class=\"zh-hans\">‘</span>%\'<span class=\"zh-hans\">字符</span></span>\r\n</code></pre>\r\n<p data-source-line=\"144\">备注： “%p”只有与“%I”配合使用才有效果。 文档中强调确实是0 - 61，而不是59，闰年秒占两秒（汗一个）。 当使用strptime()函数时，只有当在这年中的周数和天数被确定的时候%U和%W才会被计算。 举个例子： 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"152\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strftime(<span class=\"hljs-string\">\"%Y-%m-%d %X\"</span>, time.localtime())\r\n<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>\r\n</code></pre>\r\n<p data-source-line=\"157\">10）time.strptime(string[, format])：把一个格式化时间字符串转化为struct_time。实际上它和strftime()是逆操作。 复制代码 代码如下:</p>\r\n\r\n<pre data-source-line=\"161\"><code class=\"hljs\"><span class=\"hljs-meta\">&gt;&gt;&gt; </span>time.strptime(<span class=\"hljs-string\">\'2011-05-05 16:37:06\'</span>, <span class=\"hljs-string\">\'%Y-%m-%d %X\'</span>)\r\ntime.struct_time(tm_year=<span class=\"hljs-number\">2011</span>, tm_mon=<span class=\"hljs-number\">5</span>, tm_mday=<span class=\"hljs-number\">5</span>, tm_hour=<span class=\"hljs-number\">16</span>, tm_min=<span class=\"hljs-number\">37</span>, tm_sec=<span class=\"hljs-number\">6</span>, tm_wday=<span class=\"hljs-number\">3</span>, tm_yday=<span class=\"hljs-number\">125</span>, tm_isdst=<span class=\"hljs-number\">-1</span>)\r\n</code></pre>\r\n<p data-source-line=\"167\">在这个函数中，format默认为：\"%a %b %d %H:%M:%S %Y\"。 最后，我们来对time模块进行一个总结。根据之前描述，在Python中共有三种表达方式：1）timestamp 2）tuple或者struct_time 3）格式化字符串。 它们之间的转化如图所示：</p>\r\n<p data-source-line=\"167\"><img class=\"wp-image-95 aligncenter\" src=\"http://blkid.cn/wp-content/uploads/2018/04/0792839387384297BFF215FDDD0B21D9-212x300.jpeg\" alt=\"\" width=\"490\" height=\"693\" /></p>','python time模块详解','','inherit','closed','closed','','94-revision-v1','','','2018-04-10 13:20:53','2018-04-10 13:20:53','',94,'http://blkid.cn/?p=100',0,'revision','',0),(101,1,'2018-04-11 12:06:28','2018-04-11 12:06:28','<h2 id=\"nginx-access-log日志统计分析常用命令\" style=\"text-align: center;\" data-source-line=\"1\">Nginx Access Log日志统计分析常用命令</h2>\r\n<h3 id=\"ip相关统计\" data-source-line=\"3\">IP相关统计</h3>\r\n<p data-source-line=\"5\">1、统计IP访问量</p>\r\n\r\n<pre data-source-line=\"7\"><code class=\"hljs\">awk \'{print $1}\' access.log | sort -n | uniq | wc -l\r\n</code></pre>\r\n<p data-source-line=\"11\">2、查看某一时间段的IP访问量(4-5点)</p>\r\n\r\n<pre data-source-line=\"13\"><code class=\"hljs\">grep\"07/Apr/2017:0[4-5]\" access.log | awk \'{print $1}\' | sort | uniq -c| sort -nr | wc -l\r\n</code></pre>\r\n<p data-source-line=\"17\">3、查看访问最频繁的前100个IP</p>\r\n\r\n<pre data-source-line=\"19\"><code class=\"hljs\">awk \'{print $1}\' access.log | sort -n |uniq -c | sort -rn | head -n 100\r\n</code></pre>\r\n<p data-source-line=\"23\">4、查看访问100次以上的IP</p>\r\n\r\n<pre data-source-line=\"25\"><code class=\"hljs\">awk \'{print $1}\' access.log | sort -n |uniq -c |awk \'{if($1 &gt;100) print $0}\'|sort -rn\r\n</code></pre>\r\n<p data-source-line=\"29\">5、查询某个IP的详细访问情况,按访问频率排序</p>\r\n\r\n<pre data-source-line=\"31\"><code class=\"hljs\">grep\'104.217.108.66\' access.log |awk \'{print $7}\'|sort |uniq -c |sort -rn |head -n 100\r\n</code></pre>\r\n<h3 id=\"页面访问统计\" data-source-line=\"35\">页面访问统计</h3>\r\n<p data-source-line=\"36\">6、查看访问最频的页面(TOP100)</p>\r\n\r\n<pre data-source-line=\"38\"><code class=\"hljs\">awk \'{print $7}\' access.log | sort |uniq -c | sort -rn | head -n 100\r\n</code></pre>\r\n<p data-source-line=\"42\">7、查看访问最频的页面([排除php页面】(TOP100)</p>\r\n\r\n<pre data-source-line=\"44\"><code class=\"hljs\">grep -v <span class=\"hljs-string\">\".php\"</span>  access.log | <span class=\"hljs-type\">awk</span> \'{print $<span class=\"hljs-number\">7</span>}\' | <span class=\"hljs-type\">sort</span> |<span class=\"hljs-type\">uniq</span> -c | <span class=\"hljs-type\">sort</span> -rn | <span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<p data-source-line=\"48\">8、查看页面访问次数超过100次的页面</p>\r\n\r\n<pre data-source-line=\"50\"><code class=\"hljs\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span> | cut -<span class=\"hljs-keyword\">d</span> \' \' -f 7 | <span class=\"hljs-keyword\">sort</span> |uniq -c | awk \'{<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$1</span> &gt; 100) <span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$0}</span>\' | less\r\n</code></pre>\r\n<p data-source-line=\"54\">9、查看最近1000条记录，访问量最高的页面</p>\r\n\r\n<pre data-source-line=\"56\"><code class=\"hljs\">tail <span class=\"hljs-number\">-1000</span> access.log |<span class=\"hljs-type\">awk</span> \'{print $<span class=\"hljs-number\">7</span>}\'|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">less</span>\r\n</code></pre>\r\n<h3 id=\"每秒请求量统计\" data-source-line=\"60\">每秒请求量统计</h3>\r\n<p data-source-line=\"61\">10、统计每秒的请求数,top100的时间点(精确到秒)</p>\r\n\r\n<pre data-source-line=\"63\"><code class=\"hljs\">awk \'{print $<span class=\"hljs-number\">4</span>}\' access.log |<span class=\"hljs-type\">cut</span> -c14<span class=\"hljs-number\">-21</span>|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<p data-source-line=\"67\">每分钟请求量统计 11、统计每分钟的请求数,top100的时间点(精确到分钟)</p>\r\n\r\n<pre data-source-line=\"70\"><code class=\"hljs\">awk \'{print $<span class=\"hljs-number\">4</span>}\' access.log |<span class=\"hljs-type\">cut</span> -c14<span class=\"hljs-number\">-18</span>|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<p data-source-line=\"74\">每小时请求量统计 12、统计每小时的请求数,top100的时间点(精确到小时)</p>\r\n\r\n<pre data-source-line=\"77\"><code class=\"hljs\">awk \'{print $<span class=\"hljs-number\">4</span>}\' access.log |<span class=\"hljs-type\">cut</span> -c14<span class=\"hljs-number\">-15</span>|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<h3 id=\"性能分析\" data-source-line=\"81\">性能分析</h3>\r\n<p data-source-line=\"82\">13、在nginx log中最后一个字段加入$request_time 列出传输时间超过 3 秒的页面，显示前20条</p>\r\n\r\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span>|awk \'(<span class=\"hljs-variable\">$NF</span> &gt; 3){<span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$7}</span>\'|<span class=\"hljs-keyword\">sort</span> -<span class=\"hljs-keyword\">n</span>|uniq -c|<span class=\"hljs-keyword\">sort</span> -nr|head -20\r\n</code></pre>\r\n<p data-source-line=\"89\">14、列出php页面请求时间超过3秒的页面，并统计其出现的次数，显示前100条</p>\r\n\r\n<pre data-source-line=\"91\"><code class=\"hljs\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span>|awk \'(<span class=\"hljs-variable\">$NF</span> &gt; 1 &amp;&amp;  <span class=\"hljs-variable\">$7</span>~/\\.php/){<span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$7}</span>\'|<span class=\"hljs-keyword\">sort</span> -<span class=\"hljs-keyword\">n</span>|uniq -c|<span class=\"hljs-keyword\">sort</span> -nr|head -100\r\n</code></pre>\r\n<h3 id=\"蜘蛛抓取统计\" data-source-line=\"95\">蜘蛛抓取统计</h3>\r\n<p data-source-line=\"96\">15、统计蜘蛛抓取次数</p>\r\n\r\n<pre data-source-line=\"98\"><code class=\"hljs\">grep\'Baiduspider\' access.<span class=\"hljs-built_in\">log</span> <span class=\"hljs-string\">|wc -l</span>\r\n</code></pre>\r\n<p data-source-line=\"102\">16、统计蜘蛛抓取404的次数</p>\r\n\r\n<pre data-source-line=\"104\"><code class=\"hljs\"><span class=\"hljs-keyword\">grep</span><span class=\"hljs-string\">\'Baiduspider\'</span> access.<span class=\"hljs-built_in\">log</span> |<span class=\"hljs-keyword\">grep</span><span class=\"hljs-string\">\'404\'</span> | wc -<span class=\"hljs-keyword\">l</span>\r\n</code></pre>\r\n<p data-source-line=\"108\">TCP连接统计 17、查看当前TCP连接数</p>\r\n\r\n<pre data-source-line=\"111\"><code class=\"hljs\">netstat -tan | <span class=\"hljs-type\">grep</span><span class=\"hljs-string\">\"ESTABLISHED\"</span> | <span class=\"hljs-type\">grep</span><span class=\"hljs-string\">\":80\"</span> | <span class=\"hljs-type\">wc</span> -l\r\n</code></pre>\r\n<p data-source-line=\"115\">18、用tcpdump嗅探80端口的访问看看谁最高</p>\r\n\r\n<pre data-source-line=\"117\"><code class=\"hljs\">tcpdump -i eth0 -tnn dst port 80 -c1000 | awk -F<span class=\"hljs-string\">\".\"</span> \'{<span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$1</span><span class=\"hljs-string\">\".\"</span><span class=\"hljs-variable\">$2</span><span class=\"hljs-string\">\".\"</span><span class=\"hljs-variable\">$3</span><span class=\"hljs-string\">\".\"</span><span class=\"hljs-variable\">$4}</span>\' | <span class=\"hljs-keyword\">sort</span> | uniq -c | <span class=\"hljs-keyword\">sort</span> -nr</code></pre>','nginx 日志统计分析 awk、wc','','publish','open','open','','nginx-%e6%97%a5%e5%bf%97%e7%bb%9f%e8%ae%a1%e5%88%86%e6%9e%90-awk%e3%80%81wc','','','2018-04-11 12:08:02','2018-04-11 12:08:02','',0,'http://blkid.cn/?p=101',0,'post','',0),(102,1,'2018-04-11 12:06:28','2018-04-11 12:06:28','<h2 id=\"nginx-access-log日志统计分析常用命令\" style=\"text-align: center;\" data-source-line=\"1\">Nginx Access Log日志统计分析常用命令</h2>\r\n<h3 id=\"ip相关统计\" data-source-line=\"3\">IP相关统计</h3>\r\n<p data-source-line=\"5\">1、统计IP访问量</p>\r\n\r\n<pre data-source-line=\"7\"><code class=\"hljs\">awk \'{print $1}\' access.log | sort -n | uniq | wc -l\r\n</code></pre>\r\n<p data-source-line=\"11\">2、查看某一时间段的IP访问量(4-5点)</p>\r\n\r\n<pre data-source-line=\"13\"><code class=\"hljs\">grep\"07/Apr/2017:0[4-5]\" access.log | awk \'{print $1}\' | sort | uniq -c| sort -nr | wc -l\r\n</code></pre>\r\n<p data-source-line=\"17\">3、查看访问最频繁的前100个IP</p>\r\n\r\n<pre data-source-line=\"19\"><code class=\"hljs\">awk \'{print $1}\' access.log | sort -n |uniq -c | sort -rn | head -n 100\r\n</code></pre>\r\n<p data-source-line=\"23\">4、查看访问100次以上的IP</p>\r\n\r\n<pre data-source-line=\"25\"><code class=\"hljs\">awk \'{print $1}\' access.log | sort -n |uniq -c |awk \'{if($1 &gt;100) print $0}\'|sort -rn\r\n</code></pre>\r\n<p data-source-line=\"29\">5、查询某个IP的详细访问情况,按访问频率排序</p>\r\n\r\n<pre data-source-line=\"31\"><code class=\"hljs\">grep\'104.217.108.66\' access.log |awk \'{print $7}\'|sort |uniq -c |sort -rn |head -n 100\r\n</code></pre>\r\n<h3 id=\"页面访问统计\" data-source-line=\"35\">页面访问统计</h3>\r\n<p data-source-line=\"36\">6、查看访问最频的页面(TOP100)</p>\r\n\r\n<pre data-source-line=\"38\"><code class=\"hljs\">awk \'{print $7}\' access.log | sort |uniq -c | sort -rn | head -n 100\r\n</code></pre>\r\n<p data-source-line=\"42\">7、查看访问最频的页面([排除php页面】(TOP100)</p>\r\n\r\n<pre data-source-line=\"44\"><code class=\"hljs\">grep -v <span class=\"hljs-string\">\".php\"</span>  access.log | <span class=\"hljs-type\">awk</span> \'{print $<span class=\"hljs-number\">7</span>}\' | <span class=\"hljs-type\">sort</span> |<span class=\"hljs-type\">uniq</span> -c | <span class=\"hljs-type\">sort</span> -rn | <span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<p data-source-line=\"48\">8、查看页面访问次数超过100次的页面</p>\r\n\r\n<pre data-source-line=\"50\"><code class=\"hljs\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span> | cut -<span class=\"hljs-keyword\">d</span> \' \' -f 7 | <span class=\"hljs-keyword\">sort</span> |uniq -c | awk \'{<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$1</span> &gt; 100) <span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$0}</span>\' | less\r\n</code></pre>\r\n<p data-source-line=\"54\">9、查看最近1000条记录，访问量最高的页面</p>\r\n\r\n<pre data-source-line=\"56\"><code class=\"hljs\">tail <span class=\"hljs-number\">-1000</span> access.log |<span class=\"hljs-type\">awk</span> \'{print $<span class=\"hljs-number\">7</span>}\'|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">less</span>\r\n</code></pre>\r\n<h3 id=\"每秒请求量统计\" data-source-line=\"60\">每秒请求量统计</h3>\r\n<p data-source-line=\"61\">10、统计每秒的请求数,top100的时间点(精确到秒)</p>\r\n\r\n<pre data-source-line=\"63\"><code class=\"hljs\">awk \'{print $<span class=\"hljs-number\">4</span>}\' access.log |<span class=\"hljs-type\">cut</span> -c14<span class=\"hljs-number\">-21</span>|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<p data-source-line=\"67\">每分钟请求量统计 11、统计每分钟的请求数,top100的时间点(精确到分钟)</p>\r\n\r\n<pre data-source-line=\"70\"><code class=\"hljs\">awk \'{print $<span class=\"hljs-number\">4</span>}\' access.log |<span class=\"hljs-type\">cut</span> -c14<span class=\"hljs-number\">-18</span>|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<p data-source-line=\"74\">每小时请求量统计 12、统计每小时的请求数,top100的时间点(精确到小时)</p>\r\n\r\n<pre data-source-line=\"77\"><code class=\"hljs\">awk \'{print $<span class=\"hljs-number\">4</span>}\' access.log |<span class=\"hljs-type\">cut</span> -c14<span class=\"hljs-number\">-15</span>|<span class=\"hljs-type\">sort</span>|<span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -nr|<span class=\"hljs-type\">head</span> -n <span class=\"hljs-number\">100</span>\r\n</code></pre>\r\n<h3 id=\"性能分析\" data-source-line=\"81\">性能分析</h3>\r\n<p data-source-line=\"82\">13、在nginx log中最后一个字段加入$request_time 列出传输时间超过 3 秒的页面，显示前20条</p>\r\n\r\n<pre data-source-line=\"85\"><code class=\"hljs\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span>|awk \'(<span class=\"hljs-variable\">$NF</span> &gt; 3){<span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$7}</span>\'|<span class=\"hljs-keyword\">sort</span> -<span class=\"hljs-keyword\">n</span>|uniq -c|<span class=\"hljs-keyword\">sort</span> -nr|head -20\r\n</code></pre>\r\n<p data-source-line=\"89\">14、列出php页面请求时间超过3秒的页面，并统计其出现的次数，显示前100条</p>\r\n\r\n<pre data-source-line=\"91\"><code class=\"hljs\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span>|awk \'(<span class=\"hljs-variable\">$NF</span> &gt; 1 &amp;&amp;  <span class=\"hljs-variable\">$7</span>~/\\.php/){<span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$7}</span>\'|<span class=\"hljs-keyword\">sort</span> -<span class=\"hljs-keyword\">n</span>|uniq -c|<span class=\"hljs-keyword\">sort</span> -nr|head -100\r\n</code></pre>\r\n<h3 id=\"蜘蛛抓取统计\" data-source-line=\"95\">蜘蛛抓取统计</h3>\r\n<p data-source-line=\"96\">15、统计蜘蛛抓取次数</p>\r\n\r\n<pre data-source-line=\"98\"><code class=\"hljs\">grep\'Baiduspider\' access.<span class=\"hljs-built_in\">log</span> <span class=\"hljs-string\">|wc -l</span>\r\n</code></pre>\r\n<p data-source-line=\"102\">16、统计蜘蛛抓取404的次数</p>\r\n\r\n<pre data-source-line=\"104\"><code class=\"hljs\"><span class=\"hljs-keyword\">grep</span><span class=\"hljs-string\">\'Baiduspider\'</span> access.<span class=\"hljs-built_in\">log</span> |<span class=\"hljs-keyword\">grep</span><span class=\"hljs-string\">\'404\'</span> | wc -<span class=\"hljs-keyword\">l</span>\r\n</code></pre>\r\n<p data-source-line=\"108\">TCP连接统计 17、查看当前TCP连接数</p>\r\n\r\n<pre data-source-line=\"111\"><code class=\"hljs\">netstat -tan | <span class=\"hljs-type\">grep</span><span class=\"hljs-string\">\"ESTABLISHED\"</span> | <span class=\"hljs-type\">grep</span><span class=\"hljs-string\">\":80\"</span> | <span class=\"hljs-type\">wc</span> -l\r\n</code></pre>\r\n<p data-source-line=\"115\">18、用tcpdump嗅探80端口的访问看看谁最高</p>\r\n\r\n<pre data-source-line=\"117\"><code class=\"hljs\">tcpdump -i eth0 -tnn dst port 80 -c1000 | awk -F<span class=\"hljs-string\">\".\"</span> \'{<span class=\"hljs-keyword\">print</span> <span class=\"hljs-variable\">$1</span><span class=\"hljs-string\">\".\"</span><span class=\"hljs-variable\">$2</span><span class=\"hljs-string\">\".\"</span><span class=\"hljs-variable\">$3</span><span class=\"hljs-string\">\".\"</span><span class=\"hljs-variable\">$4}</span>\' | <span class=\"hljs-keyword\">sort</span> | uniq -c | <span class=\"hljs-keyword\">sort</span> -nr</code></pre>','nginx 日志统计分析 awk、wc','','inherit','closed','closed','','101-revision-v1','','','2018-04-11 12:06:28','2018-04-11 12:06:28','',101,'http://blkid.cn/?p=102',0,'revision','',0),(103,1,'2018-04-12 12:34:11','2018-04-12 12:34:11','<p data-source-line=\"1\">我们为什么要使用requirements.txt呢？</p>\r\n<p data-source-line=\"3\">主要使用目的：任何应用程序通常需要设置安装所需并依赖一组类库来满足工作要求。要求文件是指定和一次性安装包的依赖项具体一整套方法。</p>\r\n<p data-source-line=\"5\">requirements.txt文件格式：</p>\r\n\r\n<pre data-source-line=\"6\"><code class=\"hljs\">requests==1.2.0\r\nFlask==0.10.1\r\n</code></pre>\r\n<p data-source-line=\"10\">方法一：</p>\r\n\r\n<pre data-source-line=\"11\"><code class=\"hljs\">pip freeze &gt; requirment.txt\r\n</code></pre>\r\n<p data-source-line=\"15\">查看源文件</p>\r\n<p data-source-line=\"17\">pip的freeze命令用于生成将当前项目的pip类库列表生成 requirements.txt 文件：</p>\r\n<p data-source-line=\"19\">如果要安装requirements.txt中的类库内容，那么你可以执行</p>\r\n\r\n<pre data-source-line=\"20\"><code class=\"hljs\">pip install -r requirements<span class=\"hljs-selector-class\">.txt</span>.\r\n</code></pre>\r\n<p data-source-line=\"25\">手工指定URL 在pip install时手工指定： 一般情况</p>\r\n\r\n<pre data-source-line=\"29\"><code class=\"hljs\">pip install -<span class=\"hljs-selector-tag\">i</span> http:<span class=\"hljs-comment\">//mirrors.aliyun.com/pypi/simple/ pillow</span>\r\n</code></pre>\r\n<p data-source-line=\"33\"></p>\r\n<p data-source-line=\"33\">增加extra-index-url，及trusted-host：</p>\r\n\r\n<pre data-source-line=\"34\"><code class=\"hljs\">pip install pillow -i http://mirrors.aliyun.<span class=\"hljs-keyword\">com</span>/pypi/simple/ --extra-<span class=\"hljs-built_in\">index</span>-url http<span class=\"hljs-variable\">s:</span>//pypi.<span class=\"hljs-keyword\">python</span>.org/simple --trusted-host mirrors.aliyun.<span class=\"hljs-keyword\">com</span>\r\n</code></pre>\r\n<p data-source-line=\"37\"></p>\r\n<p data-source-line=\"37\">pipy国内镜像目前有：</p>\r\n\r\n<pre data-source-line=\"39\"><code class=\"hljs\"><span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.douban.com/ <span class=\"zh-hans\">豆瓣</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.hustunique.com/ <span class=\"zh-hans\">华中理工大学</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.sdutlinux.org/ <span class=\"zh-hans\">山东理工大学</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.mirrors.ustc.edu.cn/ <span class=\"zh-hans\">中国科学技术大学</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//mirrors.aliyun.com/pypi/simple/ <span class=\"zh-hans\">阿里云</span></span>\r\n<span class=\"hljs-symbol\">https:</span><span class=\"hljs-comment\">//pypi.tuna.tsinghua.edu.cn/simple/ <span class=\"zh-hans\">清华大学</span></span></code></pre>\r\n<pre data-source-line=\"20\"><code></code></pre>\r\n<pre data-source-line=\"20\"><code class=\"hljs\"></code></pre>','python pip 快捷安装','','publish','open','open','','python-pip-%e5%bf%ab%e6%8d%b7%e5%ae%89%e8%a3%85','','','2018-04-12 12:34:11','2018-04-12 12:34:11','',0,'http://blkid.cn/?p=103',0,'post','',0),(104,1,'2018-04-12 12:34:11','2018-04-12 12:34:11','<p data-source-line=\"1\">我们为什么要使用requirements.txt呢？</p>\r\n<p data-source-line=\"3\">主要使用目的：任何应用程序通常需要设置安装所需并依赖一组类库来满足工作要求。要求文件是指定和一次性安装包的依赖项具体一整套方法。</p>\r\n<p data-source-line=\"5\">requirements.txt文件格式：</p>\r\n\r\n<pre data-source-line=\"6\"><code class=\"hljs\">requests==1.2.0\r\nFlask==0.10.1\r\n</code></pre>\r\n<p data-source-line=\"10\">方法一：</p>\r\n\r\n<pre data-source-line=\"11\"><code class=\"hljs\">pip freeze &gt; requirment.txt\r\n</code></pre>\r\n<p data-source-line=\"15\">查看源文件</p>\r\n<p data-source-line=\"17\">pip的freeze命令用于生成将当前项目的pip类库列表生成 requirements.txt 文件：</p>\r\n<p data-source-line=\"19\">如果要安装requirements.txt中的类库内容，那么你可以执行</p>\r\n\r\n<pre data-source-line=\"20\"><code class=\"hljs\">pip install -r requirements<span class=\"hljs-selector-class\">.txt</span>.\r\n</code></pre>\r\n<p data-source-line=\"25\">手工指定URL 在pip install时手工指定： 一般情况</p>\r\n\r\n<pre data-source-line=\"29\"><code class=\"hljs\">pip install -<span class=\"hljs-selector-tag\">i</span> http:<span class=\"hljs-comment\">//mirrors.aliyun.com/pypi/simple/ pillow</span>\r\n</code></pre>\r\n<p data-source-line=\"33\"></p>\r\n<p data-source-line=\"33\">增加extra-index-url，及trusted-host：</p>\r\n\r\n<pre data-source-line=\"34\"><code class=\"hljs\">pip install pillow -i http://mirrors.aliyun.<span class=\"hljs-keyword\">com</span>/pypi/simple/ --extra-<span class=\"hljs-built_in\">index</span>-url http<span class=\"hljs-variable\">s:</span>//pypi.<span class=\"hljs-keyword\">python</span>.org/simple --trusted-host mirrors.aliyun.<span class=\"hljs-keyword\">com</span>\r\n</code></pre>\r\n<p data-source-line=\"37\"></p>\r\n<p data-source-line=\"37\">pipy国内镜像目前有：</p>\r\n\r\n<pre data-source-line=\"39\"><code class=\"hljs\"><span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.douban.com/ <span class=\"zh-hans\">豆瓣</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.hustunique.com/ <span class=\"zh-hans\">华中理工大学</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.sdutlinux.org/ <span class=\"zh-hans\">山东理工大学</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//pypi.mirrors.ustc.edu.cn/ <span class=\"zh-hans\">中国科学技术大学</span></span>\r\n<span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//mirrors.aliyun.com/pypi/simple/ <span class=\"zh-hans\">阿里云</span></span>\r\n<span class=\"hljs-symbol\">https:</span><span class=\"hljs-comment\">//pypi.tuna.tsinghua.edu.cn/simple/ <span class=\"zh-hans\">清华大学</span></span></code></pre>\r\n<pre data-source-line=\"20\"><code></code></pre>\r\n<pre data-source-line=\"20\"><code class=\"hljs\"></code></pre>','python pip 快捷安装','','inherit','closed','closed','','103-revision-v1','','','2018-04-12 12:34:11','2018-04-12 12:34:11','',103,'http://blkid.cn/?p=104',0,'revision','',0),(106,1,'2018-04-13 11:50:18','2018-04-13 11:50:18','','WechatIMG115','海岸灯塔在人生的航海征程中，心中永远要有一座明亮的灯塔，才能激励我们继续前行。©壹刻传媒','inherit','open','closed','','wechatimg115','','','2018-04-13 11:50:18','2018-04-13 11:50:18','',105,'http://blkid.cn/wp-content/uploads/2018/04/WechatIMG115.jpeg',0,'attachment','image/jpeg',0),(107,1,'2018-04-13 11:50:31','2018-04-13 11:50:31','<p data-source-line=\"1\">Mac 修改python默认版本为python3</p>\r\n<p data-source-line=\"1\">可以修改</p>\r\n\r\n<pre data-source-line=\"2\"><code class=\"hljs\">vim ~/<span class=\"hljs-selector-class\">.bash_profile</span>\r\n</code></pre>\r\n<p data-source-line=\"5\">，修改path variable虽然比较安全。 找不到.bash_profile文件的可以使用find查找：</p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> / -name .bash_profile\r\n</code></pre>\r\n<p data-source-line=\"12\">然后在bash_profile文件添加下行（具体path取决python3安装路径）：</p>\r\n\r\n<pre data-source-line=\"14\"><code class=\"hljs\"><span class=\"hljs-keyword\">alias</span> <span class=\"hljs-keyword\">python</span>=<span class=\"hljs-string\">\"/System/Library/Frameworks/Python.framework/Versions/3.5/bin/python3.5\"</span>\r\n</code></pre>\r\n<p data-source-line=\"18\">然后重启一下Terminal。</p>\r\n<p data-source-line=\"20\">本人Mac上~/.bash_profile文件配置</p>\r\n\r\n<pre data-source-line=\"22\"><code class=\"hljs\">alias <span class=\"hljs-attribute\">python</span>=<span class=\"hljs-string\">\"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/Resources/Python.app/Contents/MacOS/Python\"</span>\r\nalias <span class=\"hljs-attribute\">pip</span>=<span class=\"hljs-string\">\"/usr/local/bin/pip3\"</span>\r\n\r\n<span class=\"hljs-comment\"># Setting PATH for Python 3.4</span>\r\n<span class=\"hljs-comment\"># The orginal/Library/Frameworks/Python.framework/Versions/3.4/bin version is saved in .bash_profile.pysave</span>\r\n<span class=\"hljs-attribute\">PATH</span>=<span class=\"hljs-string\">\"/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/Resources/Python.app/Contents/MacOS/Python:<span class=\"hljs-variable\">${PATH}</span>\"</span>\r\n<span class=\"hljs-builtin-name\">export</span> PATH</code></pre>','Mac 修改python默认版本为python3','','inherit','closed','closed','','105-revision-v1','','','2018-04-13 11:50:31','2018-04-13 11:50:31','',105,'http://blkid.cn/?p=107',0,'revision','',0),(110,1,'2018-04-14 10:29:32','2018-04-14 10:29:32','','flower-3313171__340','','inherit','open','closed','','flower-3313171__340','','','2018-04-14 10:29:32','2018-04-14 10:29:32','',109,'http://blkid.cn/wp-content/uploads/2018/04/flower-3313171__340.jpg',0,'attachment','image/jpeg',0),(111,1,'2018-04-14 10:29:55','2018-04-14 10:29:55','本文转自：http://blog.51cto.com/tengxiansheng/1885340\r\n\r\nweb应用中，主观逻辑（视图处理）经常牵涉与数据库的交互。数据库驱动网站在后台连接数据库，从中取数据，然后甩漂亮界面展现在web端。许多复杂的网站都提供以上两种功能的结合（如Amazon.com），而Python天生具备简单强大的数据库查询执行方法，很适合开发这类数据库驱动网站。\r\n\r\n他就是下面介绍的Django数据库层！\r\n\r\n<strong>【 硬 编 码 链 接 数 据 库 】</strong>\r\n\r\ncat ~/HelloWorld/HelloWorld/view.py\r\n<div>\r\n<div id=\"highlighter_595705\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python keyword\">from</code> <code class=\"python plain\">django.shortcuts </code><code class=\"python keyword\">import</code> <code class=\"python plain\">render_to_response</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python keyword\">import</code> <code class=\"python plain\">MySQLdb</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">def</code> <code class=\"python plain\">book_list(request):</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">db </code><code class=\"python keyword\">=</code> <code class=\"python plain\">MySQLdb.connect(user</code><code class=\"python keyword\">=</code><code class=\"python string\">\'me\'</code><code class=\"python plain\">, db</code><code class=\"python keyword\">=</code><code class=\"python string\">\'mydb\'</code><code class=\"python plain\">, passwd</code><code class=\"python keyword\">=</code><code class=\"python string\">\'secret\'</code><code class=\"python plain\">, host</code><code class=\"python keyword\">=</code><code class=\"python string\">\'localhost\'</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">    </code><code class=\"python plain\">cursor </code><code class=\"python keyword\">=</code> <code class=\"python plain\">db.cursor()</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">cursor.execute(</code><code class=\"python string\">\'SELECT name FROM books ORDER BY name\'</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">    </code><code class=\"python plain\">names </code><code class=\"python keyword\">=</code> <code class=\"python plain\">[row[</code><code class=\"python value\">0</code><code class=\"python plain\">] </code><code class=\"python keyword\">for</code> <code class=\"python plain\">row </code><code class=\"python keyword\">in</code> <code class=\"python plain\">cursor.fetchall()]</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">db.close()</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python keyword\">return</code> <code class=\"python plain\">render_to_response(</code><code class=\"python string\">\'book_list.html\'</code><code class=\"python plain\">, {</code><code class=\"python string\">\'names\'</code><code class=\"python plain\">: names})</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n弊端：此方法虽可用，但是我们将参数配置直接硬编码到视图函数，显然犯了前两节相同的错误；如果我们改一个参数、改一种数据库、换个执行语句等等，都会引起大范围的改动。\r\n\r\n那我们能不能像上节那样创建模板，其实django提供了更简单直接的方式：数据库API\r\n\r\n===============================================================================================\r\n\r\nMVC架构模式、MTV 开发模式\r\n\r\nDjango 设计遵循松耦合原则，修改某部分不影响其他部分。视图函数中通过了模板系统将业务逻辑和表现逻辑分隔，数据库层也应如此。\r\n\r\nMVC 架构模式：即数据存取逻辑（model）、表现逻辑（view）、业务逻辑（controller）的组合\r\n\r\n其中 C 由框架自行处理，django更关注的是模型（model）、模板（template）、视图（views），也被称MTV框架\r\n\r\nM：数据存取，处理与数据相关所有事务；\r\n\r\nT：表现层，处理与表现相关的决定，比如页面如何显示；\r\n\r\nV：视图，处理存取模型和调取模板的逻辑，可看做模型与模板的桥梁。\r\n\r\n注: django认为视图用来展现数据，控制器是如何展示；其他框架认为控制器用来展现数据，视图决定如何展现。\r\n\r\n================================================================================================\r\n\r\n上面所说的数据库API，其实就是更改django配置文件，通过配置文件的接口进数据库。\r\n<table cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td width=\"89\">数据库</td>\r\n<td width=\"140\">DATABASE_ENGINE</td>\r\n<td width=\"410\">适配器</td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">PostgreSQL</td>\r\n<td width=\"140\">postgresql</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-pgsql/1/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-pgsql/1/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">PostgreSQL</td>\r\n<td width=\"140\">postgresql_psycopg2</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-pgsql/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-pgsql/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">MySQL</td>\r\n<td width=\"140\">mysql</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-mysql/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-mysql/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">SQLite</td>\r\n<td width=\"140\">sqlite3</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-sqlite/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-sqlite/</a></td>\r\n</tr>\r\n<tr>\r\n<td width=\"89\">Oracle</td>\r\n<td width=\"140\">oracle</td>\r\n<td width=\"410\"><a href=\"http://www.djangoproject.com/r/python-oracle/\" target=\"_blank\" rel=\"noopener\">http://www.djangoproject.com/r/python-oracle/</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div>\r\n<div id=\"highlighter_878728\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">settings.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">DATABASES </code><code class=\"python keyword\">=</code> <code class=\"python plain\">{</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'default\'</code><code class=\"python plain\">: {</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">    </code><code class=\"python string\">\'ENGINE\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django.db.backends.mysql\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'NAME\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">    </code><code class=\"python string\">\'USER\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'PASSWORD\'</code><code class=\"python plain\">: </code><code class=\"python string\">\'django123\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python spaces\">    </code><code class=\"python string\">\'HOST\'</code><code class=\"python plain\">:</code><code class=\"python string\">\'localhost\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python spaces\">    </code><code class=\"python string\">\'PORT\'</code><code class=\"python plain\">:</code><code class=\"python string\">\'3306\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python plain\">}</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"python plain\">}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n之后去数据库建一个django库，并给django用户赋值。然后测试一下（没有报错信息即配置成功，并能链接到mysql的django库了，关于django报错信息，请参考下一节）：\r\n\r\n启动shell界面：python manage.py  shell\r\n\r\n&gt;&gt;&gt; from django.db import connection\r\n\r\n&gt;&gt;&gt; cursor = connection.cursor()\r\n\r\n<strong>【应用程序app 与 模型model.py】</strong>\r\n\r\n<strong>第 一 个 app  </strong>\r\n\r\nDjango规定：如果使用了django数据库层（或模型），必须要创建django app，把模型放在里面；应用程序app是项目project组成部分。\r\n\r\npython manage.py startapp mysql_django    #创建mysql_django app\r\n\r\n<a href=\"http://s2.51cto.com/wyfs02/M01/8B/E8/wKioL1hcETyAMEeSAAAWixnqf4s271.png\" target=\"_blank\" rel=\"noopener\"><img title=\"1.png\" src=\"http://s2.51cto.com/wyfs02/M01/8B/E8/wKioL1hcETyAMEeSAAAWixnqf4s271.png\" alt=\"wKioL1hcETyAMEeSAAAWixnqf4s271.png\" /></a>\r\n\r\n创建好app，将app加入到HelloWorld project中\r\n<div>\r\n<div id=\"highlighter_829413\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">settings.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">INSTALLED_APPS </code><code class=\"python keyword\">=</code> <code class=\"python plain\">[</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python string\">\'django.contrib.admin\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python string\">\'django.contrib.auth\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python string\">\'django.contrib.contenttypes\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python string\">\'django.contrib.sessions\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python string\">\'django.contrib.messages\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python string\">\'django.contrib.staticfiles\'</code><code class=\"python plain\">,</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>   <code class=\"python string\">\'mysql_django\'</code><code class=\"python plain\">,      </code><code class=\"python comments\">#逗号结尾，也可用点语法 HelloWorld.mysql_django</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python plain\">]</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<strong>第 一 个 模 型  </strong>\r\n\r\n其实django模型就是以python代码表述数据库中表结构\r\n<div>\r\n<div id=\"highlighter_483391\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div>\r\n<div class=\"line number19 index18 alt2\">19</div>\r\n<div class=\"line number20 index19 alt1\">20</div>\r\n<div class=\"line number21 index20 alt2\">21</div>\r\n<div class=\"line number22 index21 alt1\">22</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">mysql_django</code><code class=\"python keyword\">/</code><code class=\"python plain\">models.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">from</code> <code class=\"python plain\">django.db </code><code class=\"python keyword\">import</code> <code class=\"python plain\">models</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Publisher(models.Model): </code><code class=\"python comments\">#CREATE TABLE \"books_publisher\"(\"id\" serial NOT NULL PRIMARY KEY,</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">    </code><code class=\"python plain\">name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">)   </code><code class=\"python comments\">#\"name\" varchar(30) NOT NULL,</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">address </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">50</code><code class=\"python plain\">) </code><code class=\"python comments\">#\"address\" varchar(50) NOT NULL,</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">city </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">60</code><code class=\"python plain\">)    </code><code class=\"python comments\">#\"city\" varchar(60) NOT NULL,</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">state_province </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">) </code><code class=\"python comments\">#\"state_province\" varchar(30) NOT NULL,</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">country </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">50</code><code class=\"python plain\">) </code><code class=\"python comments\">#\"country\" varchar(50) NOT NULL,</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">website </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.URLField()        </code><code class=\"python comments\">#\"website\" varchar(200) NOT NULL );</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"python spaces\">                        </code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Author(models.Model):</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">first_name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">last_name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">40</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">email </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.EmailField()</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"python spaces\">   </code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Book(models.Model):          </code></div>\r\n<div class=\"line number19 index18 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">title </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">100</code><code class=\"python plain\">)           </code></div>\r\n<div class=\"line number20 index19 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">authors </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.ManyToManyField(Author)</code></div>\r\n<div class=\"line number21 index20 alt2\"><code class=\"python spaces\">   </code><code class=\"python plain\">publisher </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.ForeignKey(Publisher)</code></div>\r\n<div class=\"line number22 index21 alt1\"><code class=\"python spaces\">   </code><code class=\"python plain\">publication_date </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.DateField()</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n代码解读：\r\n\r\n1、首先每个数据模型都是django.db.models.Model的子类，父类Model包含所有与数据库交互的必要方法；\r\n\r\n2、每个模型相当于数据库表，每个属性即字段，类型(CharField)相当于字段类型(varchar)\r\n\r\n3、Publisher举例，python语法即等于右边的数据库语法。\r\n\r\n4、定义了出版商、作者、书籍的一些内容。\r\n\r\n当完成以上模型建表后，并将其app加入到了项目，接下来就开始执行建表了\r\n\r\na、检查语法错误（django1.9.0版本以下用 python manage.py validate）\r\n\r\npython  manage.py  check\r\n\r\nb、生成数据库迁移文件（在app下的migrations下生成0001文件，更改后执行，生成0002....迁移文件）\r\n\r\npython  manage.py  makemigrations mysql_django\r\n\r\nc、同步数据库（老版本用python manage.py syncdb，即把迁移文件转换语法同步数据库[库名app名_类名]）\r\n\r\npython  manage.py  migrate\r\n\r\nd、转换成 SQL 语言（老版本 python manage.py sqlall mysql_django，查看转换后的mysql语法）\r\n\r\npython  manage.py  sqlmigrate  mysql_django  0001\r\n\r\n<strong>【Python 与 数 据 库 API】</strong>\r\n\r\n进入：python manage.py shell\r\n\r\n&gt;&gt;&gt; from mysql_django.models  import Publisher      #导入Publisher模型类\r\n\r\n&gt;&gt;&gt; p1 = Publisher(name=\'Apress\', address=\'2855 Telegraph Avenue\',\r\n\r\n...     city=\'Berkeley\', state_province=\'CA\', country=\'U.S.A.\',\r\n\r\n...     website=\'<a href=\"http://www.apress.com/\')\" target=\"_blank\" rel=\"noopener\">http://www.apress.com/\')</a>\r\n\r\n&gt;&gt;&gt; p1.save()                    #调用了save()方法，才能真正将p1插入数据库\r\n\r\n&gt;&gt;&gt; p2 = Publisher.objects.create(name=\"O\'Reilly\",\r\n\r\n...     address=\'10 Fawcett St.\', city=\'Cambridge\',\r\n\r\n...     state_province=\'MA\', country=\'U.S.A.\',\r\n\r\n...     website=\'http://www.oreilly.com/\')    #objects.create()方法可直接将数据插入数据库\r\n\r\n&gt;&gt;&gt; publisher_list = Publisher.objects.all()    #从数据库取出出版商信息==select\r\n\r\n&gt;&gt;&gt; publisher_list\r\n\r\n[&lt;Publisher: Publisher object&gt;, &lt;Publisher: Publisher object&gt;]\r\n\r\n插入两个数据后，讲道理Publisher.objects.all()方法会取出Publisher类的对象，但是却没有得到有用信息；\r\n\r\n解决此问题：要为Publisher对象添加一个__unicode__()方法，他告诉python将对象以unicode方式显示，如下：\r\n<div>\r\n<div id=\"highlighter_677995\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n<div class=\"line number18 index17 alt1\">18</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">mysql_django</code><code class=\"python keyword\">/</code><code class=\"python plain\">models.py</code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">from</code> <code class=\"python plain\">django.db </code><code class=\"python keyword\">import</code> <code class=\"python plain\">models</code></div>\r\n<div class=\"line number4 index3 alt1\"></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Publisher(models.Model):</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">name </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.CharField(max_length</code><code class=\"python keyword\">=</code><code class=\"python value\">30</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">     </code><code class=\"python plain\">......................</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">website </code><code class=\"python keyword\">=</code> <code class=\"python plain\">models.URLField()</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>      <code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>       <code class=\"python keyword\">return</code> <code class=\"python color1\">self</code><code class=\"python plain\">.name</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Author(models.Model):</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">.........................</code></div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>    <code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>       <code class=\"python keyword\">return</code> <code class=\"python plain\">u</code><code class=\"python string\">\'%s %s\'</code> <code class=\"python keyword\">%</code> <code class=\"python plain\">(</code><code class=\"python color1\">self</code><code class=\"python plain\">.first_name, </code><code class=\"python color1\">self</code><code class=\"python plain\">.last_name)</code><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Book(models.Model):</code></div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"python spaces\">     </code><code class=\"python plain\">.........................</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>    <code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number18 index17 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>       <code class=\"python keyword\">return</code> <code class=\"python color1\">self</code><code class=\"python plain\">.title</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n============================================================================================\r\n\r\n<strong>unicode对象</strong> 是能处理上百万不同类的字符串的python字符串。普通的python字符串是经过编码的，穿插调用的话就会出现常见的???等乱七八糟的字符，这就是编码的问题；而unicode对象没有编码，使用它可以不用考虑编码的问题。所以请确保每个模型都定义了__unicode__()方法。\r\n\r\n关于unicode：<a href=\"http://www.joelonsoftware.com/articles/Unicode.html\" target=\"_blank\" rel=\"noopener\">http://www.joelonsoftware.com/articles/Unicode.html</a>\r\n\r\n再次进入shell解释器内，试验：&gt;&gt;&gt; publisher_list\r\n\r\n[&lt;Publisher: Apress&gt;, &lt;Publisher: O\'Reilly&gt;]\r\n\r\n============================================================================================\r\n\r\n1、数据查看、过滤操作：\r\n\r\n&gt;&gt;&gt; Publisher.objects.filter(name=\'Apress\')\r\n[&lt;Publisher: Apress&gt;]          #filter == where name=\'Apress\'\r\n&gt;&gt;&gt; Publisher.objects.filter(country=\"U.S.A.\", state_province=\"CA\")\r\n[&lt;Publisher: Apress&gt;]          #逗号转换成了 and\r\n&gt;&gt;&gt; Publisher.objects.filter(name__contains=\"press\")\r\n[&lt;Publisher: Apress&gt;]          #__contains  = where name LIKE \'%press%\';\r\n&gt;&gt;&gt; Publisher.objects.get(name=\"Apress\")\r\n&lt;Publisher: Apress&gt;           #get()方法获取单个对象，filter()函数返回一个记录集(列表)\r\n\r\n（icontains[大小写无关的LIKE]、startwith/endswith、range[BETWEEN]）\r\n\r\n2、数据排序操作：\r\n&gt;&gt;&gt; Publisher.objects.order_by(\"name\")\r\n[&lt;Publisher: Apress&gt;, &lt;Publisher: O\'Reilly&gt;]     #按字母排序\r\n&gt;&gt;&gt; Publisher.objects.order_by(\"state_province\", \"address\")\r\n[&lt;Publisher: Apress&gt;, &lt;Publisher: O\'Reilly&gt;]     #第一个字段相同，按第二个排序\r\n&gt;&gt;&gt; Publisher.objects.order_by(\"-name\")\r\n[&lt;Publisher: O\'Reilly&gt;, &lt;Publisher: Apress&gt;]     #-号，表示逆向排序\r\n<div>\r\n<div id=\"highlighter_927997\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div></td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">vim ~</code><code class=\"python keyword\">/</code><code class=\"python plain\">HelloWorld</code><code class=\"python keyword\">/</code><code class=\"python plain\">mysql_django</code><code class=\"python keyword\">/</code><code class=\"python plain\">models.py   </code></div>\r\n<div class=\"line number2 index1 alt1\"></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python keyword\">class</code> <code class=\"python plain\">Publisher(models.Model):</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">    </code><code class=\"python keyword\">def</code> <code class=\"python plain\">__unicode__(</code><code class=\"python color1\">self</code><code class=\"python plain\">):</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">      </code><code class=\"python keyword\">return</code> <code class=\"python color1\">self</code><code class=\"python plain\">.name</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>   <code class=\"python keyword\">class</code> <code class=\"python plain\">Meta:              </code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python keyword\">*</code><code class=\"python keyword\">*</code>     <code class=\"python plain\">ordering </code><code class=\"python keyword\">=</code> <code class=\"python plain\">[</code><code class=\"python string\">\'name\'</code><code class=\"python plain\">]  </code><code class=\"python comments\">#Meta类，默认会以name字段进行排序</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n3、连锁查询：\r\n&gt;&gt;&gt; Publisher.objects.filter(country=\"U.S.A.\").order_by(\"-name\")\r\n[&lt;Publisher: O\'Reilly&gt;, &lt;Publisher: Apress&gt;]  #检索country=\"U.S.A.\"降序排列\r\n&gt;&gt;&gt; Publisher.objects.order_by(\'name\')[0:2]   #取数据的特定子集=offset 0 limit 2，查询语句也可以加\r\n&gt;&gt;&gt; Publisher.objects.order_by(\'name\')[0]    #[0]=limit 1；不支持负索引[-1]，但可用降序[0]实现\r\n&lt;Publisher: Apress&gt;\r\n\r\n4、增加更改操作：（name、save、id、update）\r\n\r\n添加数据：&gt;&gt;&gt; p3 = ....name=\'Apress\' ...\r\n\r\n获取数据：&gt;&gt;&gt; p2 = Publisher.objects.get(name=\"Apress\")\r\n\r\n更改数据：&gt;&gt;&gt; p2.name = \'Apress Publishing\'\r\n\r\n保存数据：&gt;&gt;&gt; p2.save()    #他会update此id全部字段，不只是name字段；也有轻量级更改的方法。\r\n\r\n看主键id：&gt;&gt;&gt; p2.id      #我们可根据get到的数据查id，也可直接进数据库查\r\n\r\n更改数据：&gt;&gt;&gt; Publisher.objects.filter(id=1).update(name=\'Apress Publishing\')\r\n\r\n批量更改：&gt;&gt;&gt; Publisher.objects.all().update(country=\'USA\')    #返回数值即更改的条数\r\n\r\n5、删除命令操作：\r\n\r\n获取数据：&gt;&gt;&gt; p = Publisher.objects.get(name=\"O\'Reilly\")      #先得到数据再删除\r\n\r\n删除数据：&gt;&gt;&gt; p.delete()\r\n\r\n直接删除：&gt;&gt;&gt; Publisher.objects.filter(country=\'USA\').delete()  #删除所有country=\'USA\'的\r\n\r\n删除全部：&gt;&gt;&gt; Publisher.objects.all().delete()            #不加all()方法删除不了\r\n\r\n查看数据：&gt;&gt;&gt; Publisher.objects.all()\r\n\r\n当然，以上的操作都是直接在shell解释器中操作，我们也可以写到视图函数中，页面化查看。','【转】Django -- 模型（数据库层）','','inherit','closed','closed','','109-revision-v1','','','2018-04-14 10:29:55','2018-04-14 10:29:55','',109,'http://blkid.cn/?p=111',0,'revision','',0),(113,1,'2018-04-18 10:20:03','2018-04-18 10:20:03','<h3 data-source-line=\"1\"><strong><span style=\"color: #ff6600;\">chmod</span></strong></h3>\r\n<pre data-source-line=\"3\"><code class=\"hljs\">chmod -R <span class=\"hljs-number\">777</span> <span class=\"hljs-regexp\">/tmp/</span>practise\r\n</code></pre>\r\n<p data-source-line=\"6\">这个目录下所有的目录的所有文件所有权限均变为 777</p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-keyword\">ls</span> -ld <span class=\"hljs-string\">/tmp/practise</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">查看该目录下的权限</p>\r\n\r\n<pre data-source-line=\"13\"><code class=\"hljs\">useradd  		<span class=\"zh-hans\">添加用户</span>\r\n<span class=\"zh-hans\">权限定义</span>\r\n<span class=\"hljs-keyword\">file</span>\r\nr:cat/more/head/tail/less		\r\nw: vim\r\nx: script / commond\r\ndriectory:			<span class=\"zh-hans\">有</span>r<span class=\"zh-hans\">权限一定有</span>X<span class=\"zh-hans\">权限</span>  <span class=\"zh-hans\">成对出现</span>\r\nr: ls\r\nw: touch /mkdir /rmdir /rm\r\nx:cd\r\n\r\n<span class=\"hljs-symbol\">$</span> chmod u+x <span class=\"hljs-keyword\">file</span>                <span class=\"zh-hans\">　　　</span>   <span class=\"zh-hans\">给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的属主增加执行权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">751</span> <span class=\"hljs-keyword\">file</span>                <span class=\"zh-hans\">　　　</span>   <span class=\"zh-hans\">给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的属主分配读、写、执行</span>(<span class=\"hljs-number\">7</span>)<span class=\"zh-hans\">的权限，给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的所在组分配读、执行</span>(<span class=\"hljs-number\">5</span>)<span class=\"zh-hans\">的权限，给其他用户分配执行</span>(<span class=\"hljs-number\">1</span>)<span class=\"zh-hans\">的权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod u=rwx,g=rx,o=x <span class=\"hljs-keyword\">file</span>      <span class=\"zh-hans\">上例的另一种形式</span>\r\n<span class=\"hljs-symbol\">$</span> chmod =r <span class=\"hljs-keyword\">file</span>                 <span class=\"zh-hans\">　　　　为所有用户分配读权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">444</span> <span class=\"hljs-keyword\">file</span>              <span class=\"zh-hans\">　　　　</span> <span class=\"zh-hans\">同上例</span>\r\n<span class=\"hljs-symbol\">$</span> chmod a-wx,a+r   <span class=\"hljs-keyword\">file</span>   <span class=\"zh-hans\">　　</span> <span class=\"zh-hans\">　</span>   <span class=\"zh-hans\">同上例</span>\r\n<span class=\"hljs-symbol\">$</span> chmod -R u+r directory       <span class=\"zh-hans\">　</span>   <span class=\"zh-hans\">递归地给</span>directory<span class=\"zh-hans\">目录下所有文件和子目录的属主分配读的权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">4755</span>                          <span class=\"zh-hans\">　　设置用</span>ID<span class=\"zh-hans\">，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。</span>\r\n</code></pre>\r\n<p data-source-line=\"36\"><code class=\"hljs\">umask -S  <span class=\"zh-hans\">显示缺省的权限</span>\r\ntouch <span class=\"zh-hans\">新建的文件不会有</span>X<span class=\"zh-hans\">权限</span>\r\nchown	<span class=\"zh-hans\">更改所属用户</span>\r\nchgrp		<span class=\"zh-hans\">更改组</span>\r\nu	<span class=\"zh-hans\">用户的当前权限</span>\r\ng	<span class=\"zh-hans\">组的当前权限</span>\r\no	<span class=\"zh-hans\">其他用户的当前权限</span></code>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\">\r\n\r\n<span class=\"hljs-builtin-name\" style=\"color: #ff6600;\">find</span> </code>\r\n\r\n<code class=\"hljs\"> <span class=\"zh-hans\">文件搜索命令</span>\r\n<span class=\"zh-hans\">      不要在服务器</span> <span class=\"zh-hans\">高峰期查找，搜索条件越小越好</span>\r\n</code>\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> init   <span class=\"zh-hans\">精确搜索</span></code><code class=\"hljs\">init\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> *init  <span class=\"zh-hans\">模糊查找</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> init???   ?<span class=\"zh-hans\">匹配单个字符</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /etc -name init???    \r\n-iname     <span class=\"zh-hans\">不区分大小写</span>			<span class=\"zh-hans\">根据文件名查找</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /<span class=\"zh-hans\">【路径】</span> -size </code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /home -user\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /etc </code></h3>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\"></code>\r\n\r\n<code class=\"hljs\">useradd   <span class=\"zh-hans\">添加用户</span>\r\n</code>\r\n\r\n<code class=\"hljs\">userdel   	<span class=\"zh-hans\">删除用户</span>\r\n</code>\r\n\r\n<code class=\"hljs\">who<span class=\"zh-hans\">命令用于显示谁登录了系统</span>\r\n</code>\r\n\r\n<code class=\"hljs\">whoami<span class=\"zh-hans\">的命令，只输出用户账号。</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"zh-hans\">而</span>who<span class=\"zh-hans\">或者</span>who am i<span class=\"zh-hans\">不仅显示账号，还显示终端文件名、时间、来源</span>IP<span class=\"zh-hans\">等。</span>\r\n</code>\r\n\r\n<code class=\"hljs\">uptime <span class=\"zh-hans\">显示系统当前时间</span>\r\nw<span class=\"zh-hans\">命令不仅可以看到登录服务器的用户信息，而且可以看到这些用户做了什么</span>\r\n</code></h3>\r\n<pre data-source-line=\"66\"><code class=\"hljs\"><span class=\"zh-hans\">tar\r\n\r\n压缩、解压缩命令</span>\r\n<span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">解包：</span>tar xvf FileName<span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">打包：</span>tar cvf FileName<span class=\"hljs-selector-class\">.tar</span> DirName\r\n<span class=\"zh-hans\">（注：</span>tar<span class=\"zh-hans\">是打包，不是压缩！）</span>\r\n<span class=\"zh-hans\">———————————————</span>\r\n<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">解压</span><span class=\"hljs-number\">1</span><span class=\"zh-hans\">：</span>gunzip FileName<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">解压</span><span class=\"hljs-number\">2</span><span class=\"zh-hans\">：</span>gzip -d FileName<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">压缩：</span>gzip FileName\r\n<span class=\"zh-hans\">———————————————</span>\r\n<span class=\"hljs-selector-class\">.zip</span>\r\n<span class=\"zh-hans\">解压：</span>unzip FileName<span class=\"hljs-selector-class\">.zip</span>\r\n<span class=\"zh-hans\">压缩：</span>zip FileName<span class=\"hljs-selector-class\">.zip</span> DirName\r\n<span class=\"zh-hans\">打包：</span>tar -cvf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span>  <span class=\"zh-hans\">被打包的文件</span>\r\n<span class=\"zh-hans\">解包：</span>tar -xvf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">打包压缩文件</span>: tar -cvzf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>  <span class=\"zh-hans\">被打包的压缩文件</span>\r\n<span class=\"zh-hans\">解包压缩文件：</span>tar -xvzf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">边打包边压缩：</span> tar -cvjf <span class=\"zh-hans\">压缩文件名</span>  <span class=\"zh-hans\">被压缩文件</span>\r\n<span class=\"zh-hans\">解压缩包：</span>tar -xvjf <span class=\"zh-hans\">压缩文件名</span>\r\n</code></pre>\r\n<pre data-source-line=\"92\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">、</span>vim<span class=\"zh-hans\">编辑器常用快捷键</span>\r\n      <span class=\"hljs-number\">1</span><span class=\"zh-hans\">）打开项目地址：</span>fn+f9\r\n      <span class=\"hljs-number\">2</span><span class=\"zh-hans\">）光标切换到项目列表右边：</span><span class=\"hljs-section\">control</span>+w+l\r\n      <span class=\"hljs-number\">3</span><span class=\"zh-hans\">）光标切换到项目左边：</span><span class=\"hljs-section\">control</span>+w+h\r\n      <span class=\"hljs-number\">4</span><span class=\"zh-hans\">）光标切换到文件下边：</span><span class=\"hljs-section\">control</span>+w+j\r\n      <span class=\"hljs-number\">5</span><span class=\"zh-hans\">）光标切换到文件上边：</span><span class=\"hljs-section\">control</span>+w+k\r\n      <span class=\"hljs-number\">6</span><span class=\"zh-hans\">）将光标所在的字符大写：</span>shift+~\r\n      <span class=\"hljs-number\">7</span><span class=\"zh-hans\">）将光标所在的单词大写：</span>g+U+w\r\n      <span class=\"hljs-number\">8</span><span class=\"zh-hans\">）将光标所在的单词小写：</span>g+u+w\r\n      <span class=\"hljs-number\">9</span><span class=\"zh-hans\">）删除光标所在后面的一行所有：</span>C\r\n     <span class=\"hljs-number\">10</span><span class=\"zh-hans\">）移动到光标所在行的最后一个字符：</span>$\r\n     <span class=\"hljs-number\">11</span><span class=\"zh-hans\">）移动到光标所在行的开头：</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">（数字零）</span>\r\n     <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）移动到光标的第一个一个字符：</span>^\r\n     <span class=\"hljs-number\">13</span><span class=\"zh-hans\">）反撤销一次：</span><span class=\"hljs-section\">control</span>+r\r\n     <span class=\"hljs-number\">14</span><span class=\"zh-hans\">）撤销：</span>u\r\n     <span class=\"hljs-number\">15</span><span class=\"zh-hans\">）格式化代码：</span>=\r\n     <span class=\"hljs-number\">16</span><span class=\"zh-hans\">）从光标所在行选中：</span>V\r\n     <span class=\"hljs-number\">17</span><span class=\"zh-hans\">）从光标所在字符选中：</span>v\r\n     <span class=\"hljs-number\">18</span><span class=\"zh-hans\">）退出窗口：</span><span class=\"hljs-section\">control</span>+z\r\n     <span class=\"hljs-number\">19</span>   <span class=\"zh-hans\">进入窗口：</span>f+g <span class=\"zh-hans\">回车</span></code></pre>','','','inherit','closed','closed','','112-revision-v1','','','2018-04-18 10:20:03','2018-04-18 10:20:03','',112,'http://blkid.cn/?p=113',0,'revision','',0),(114,1,'2018-04-18 10:20:30','2018-04-18 10:20:30','<h3 data-source-line=\"1\"><strong><span style=\"color: #ff6600;\">chmod</span></strong></h3>\r\n<pre data-source-line=\"3\"><code class=\"hljs\">chmod -R <span class=\"hljs-number\">777</span> <span class=\"hljs-regexp\">/tmp/</span>practise\r\n</code></pre>\r\n<p data-source-line=\"6\">这个目录下所有的目录的所有文件所有权限均变为 777</p>\r\n\r\n<pre data-source-line=\"8\"><code class=\"hljs\"><span class=\"hljs-keyword\">ls</span> -ld <span class=\"hljs-string\">/tmp/practise</span>\r\n</code></pre>\r\n<p data-source-line=\"11\">查看该目录下的权限</p>\r\n\r\n<pre data-source-line=\"13\"><code class=\"hljs\">useradd  		<span class=\"zh-hans\">添加用户</span>\r\n<span class=\"zh-hans\">权限定义</span>\r\n<span class=\"hljs-keyword\">file</span>\r\nr:cat/more/head/tail/less		\r\nw: vim\r\nx: script / commond\r\ndriectory:			<span class=\"zh-hans\">有</span>r<span class=\"zh-hans\">权限一定有</span>X<span class=\"zh-hans\">权限</span>  <span class=\"zh-hans\">成对出现</span>\r\nr: ls\r\nw: touch /mkdir /rmdir /rm\r\nx:cd\r\n\r\n<span class=\"hljs-symbol\">$</span> chmod u+x <span class=\"hljs-keyword\">file</span>                <span class=\"zh-hans\">　　　</span>   <span class=\"zh-hans\">给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的属主增加执行权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">751</span> <span class=\"hljs-keyword\">file</span>                <span class=\"zh-hans\">　　　</span>   <span class=\"zh-hans\">给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的属主分配读、写、执行</span>(<span class=\"hljs-number\">7</span>)<span class=\"zh-hans\">的权限，给</span><span class=\"hljs-keyword\">file</span><span class=\"zh-hans\">的所在组分配读、执行</span>(<span class=\"hljs-number\">5</span>)<span class=\"zh-hans\">的权限，给其他用户分配执行</span>(<span class=\"hljs-number\">1</span>)<span class=\"zh-hans\">的权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod u=rwx,g=rx,o=x <span class=\"hljs-keyword\">file</span>      <span class=\"zh-hans\">上例的另一种形式</span>\r\n<span class=\"hljs-symbol\">$</span> chmod =r <span class=\"hljs-keyword\">file</span>                 <span class=\"zh-hans\">　　　　为所有用户分配读权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">444</span> <span class=\"hljs-keyword\">file</span>              <span class=\"zh-hans\">　　　　</span> <span class=\"zh-hans\">同上例</span>\r\n<span class=\"hljs-symbol\">$</span> chmod a-wx,a+r   <span class=\"hljs-keyword\">file</span>   <span class=\"zh-hans\">　　</span> <span class=\"zh-hans\">　</span>   <span class=\"zh-hans\">同上例</span>\r\n<span class=\"hljs-symbol\">$</span> chmod -R u+r directory       <span class=\"zh-hans\">　</span>   <span class=\"zh-hans\">递归地给</span>directory<span class=\"zh-hans\">目录下所有文件和子目录的属主分配读的权限</span>\r\n<span class=\"hljs-symbol\">$</span> chmod <span class=\"hljs-number\">4755</span>                          <span class=\"zh-hans\">　　设置用</span>ID<span class=\"zh-hans\">，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。</span>\r\n</code></pre>\r\n<p data-source-line=\"36\"><code class=\"hljs\">umask -S  <span class=\"zh-hans\">显示缺省的权限</span>\r\ntouch <span class=\"zh-hans\">新建的文件不会有</span>X<span class=\"zh-hans\">权限</span>\r\nchown	<span class=\"zh-hans\">更改所属用户</span>\r\nchgrp		<span class=\"zh-hans\">更改组</span>\r\nu	<span class=\"zh-hans\">用户的当前权限</span>\r\ng	<span class=\"zh-hans\">组的当前权限</span>\r\no	<span class=\"zh-hans\">其他用户的当前权限</span></code>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\"></code></h3>\r\n<span class=\"hljs-builtin-name\" style=\"color: #ff6600;\">find</span>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\"></code></h3>\r\n<code class=\"hljs\"> <span class=\"zh-hans\">文件搜索命令</span>\r\n<span class=\"zh-hans\">      不要在服务器</span> <span class=\"zh-hans\">高峰期查找，搜索条件越小越好</span>\r\n</code>\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> init   <span class=\"zh-hans\">精确搜索</span></code><code class=\"hljs\">init\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> *init  <span class=\"zh-hans\">模糊查找</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> init???   ?<span class=\"zh-hans\">匹配单个字符</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /etc -name init???\r\n-iname     <span class=\"zh-hans\">不区分大小写</span>			<span class=\"zh-hans\">根据文件名查找</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /<span class=\"zh-hans\">【路径】</span> -size </code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /home -user\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"hljs-builtin-name\">find</span> /etc </code>\r\n<h3 data-source-line=\"36\"><code class=\"hljs\"></code></h3>\r\n<code class=\"hljs\">useradd   <span class=\"zh-hans\">添加用户</span>\r\n</code>\r\n\r\n<code class=\"hljs\">userdel   	<span class=\"zh-hans\">删除用户</span>\r\n</code>\r\n\r\n<code class=\"hljs\">who<span class=\"zh-hans\">命令用于显示谁登录了系统</span>\r\n</code>\r\n\r\n<code class=\"hljs\">whoami<span class=\"zh-hans\">的命令，只输出用户账号。</span>\r\n</code>\r\n\r\n<code class=\"hljs\"><span class=\"zh-hans\">而</span>who<span class=\"zh-hans\">或者</span>who am i<span class=\"zh-hans\">不仅显示账号，还显示终端文件名、时间、来源</span>IP<span class=\"zh-hans\">等。</span>\r\n</code>\r\n\r\n<code class=\"hljs\">uptime <span class=\"zh-hans\">显示系统当前时间</span>\r\nw<span class=\"zh-hans\">命令不仅可以看到登录服务器的用户信息，而且可以看到这些用户做了什么</span>\r\n</code>\r\n<pre data-source-line=\"66\"><code class=\"hljs\"><span class=\"zh-hans\">tar\r\n\r\n压缩、解压缩命令</span>\r\n<span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">解包：</span>tar xvf FileName<span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">打包：</span>tar cvf FileName<span class=\"hljs-selector-class\">.tar</span> DirName\r\n<span class=\"zh-hans\">（注：</span>tar<span class=\"zh-hans\">是打包，不是压缩！）</span>\r\n<span class=\"zh-hans\">———————————————</span>\r\n<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">解压</span><span class=\"hljs-number\">1</span><span class=\"zh-hans\">：</span>gunzip FileName<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">解压</span><span class=\"hljs-number\">2</span><span class=\"zh-hans\">：</span>gzip -d FileName<span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">压缩：</span>gzip FileName\r\n<span class=\"zh-hans\">———————————————</span>\r\n<span class=\"hljs-selector-class\">.zip</span>\r\n<span class=\"zh-hans\">解压：</span>unzip FileName<span class=\"hljs-selector-class\">.zip</span>\r\n<span class=\"zh-hans\">压缩：</span>zip FileName<span class=\"hljs-selector-class\">.zip</span> DirName\r\n<span class=\"zh-hans\">打包：</span>tar -cvf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span>  <span class=\"zh-hans\">被打包的文件</span>\r\n<span class=\"zh-hans\">解包：</span>tar -xvf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span>\r\n<span class=\"zh-hans\">打包压缩文件</span>: tar -cvzf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>  <span class=\"zh-hans\">被打包的压缩文件</span>\r\n<span class=\"zh-hans\">解包压缩文件：</span>tar -xvzf <span class=\"zh-hans\">包名</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>\r\n<span class=\"zh-hans\">边打包边压缩：</span> tar -cvjf <span class=\"zh-hans\">压缩文件名</span>  <span class=\"zh-hans\">被压缩文件</span>\r\n<span class=\"zh-hans\">解压缩包：</span>tar -xvjf <span class=\"zh-hans\">压缩文件名</span>\r\n</code></pre>\r\n<pre data-source-line=\"92\"><code class=\"hljs\"><span class=\"hljs-number\">1</span><span class=\"zh-hans\">、</span>vim<span class=\"zh-hans\">编辑器常用快捷键</span>\r\n      <span class=\"hljs-number\">1</span><span class=\"zh-hans\">）打开项目地址：</span>fn+f9\r\n      <span class=\"hljs-number\">2</span><span class=\"zh-hans\">）光标切换到项目列表右边：</span><span class=\"hljs-section\">control</span>+w+l\r\n      <span class=\"hljs-number\">3</span><span class=\"zh-hans\">）光标切换到项目左边：</span><span class=\"hljs-section\">control</span>+w+h\r\n      <span class=\"hljs-number\">4</span><span class=\"zh-hans\">）光标切换到文件下边：</span><span class=\"hljs-section\">control</span>+w+j\r\n      <span class=\"hljs-number\">5</span><span class=\"zh-hans\">）光标切换到文件上边：</span><span class=\"hljs-section\">control</span>+w+k\r\n      <span class=\"hljs-number\">6</span><span class=\"zh-hans\">）将光标所在的字符大写：</span>shift+~\r\n      <span class=\"hljs-number\">7</span><span class=\"zh-hans\">）将光标所在的单词大写：</span>g+U+w\r\n      <span class=\"hljs-number\">8</span><span class=\"zh-hans\">）将光标所在的单词小写：</span>g+u+w\r\n      <span class=\"hljs-number\">9</span><span class=\"zh-hans\">）删除光标所在后面的一行所有：</span>C\r\n     <span class=\"hljs-number\">10</span><span class=\"zh-hans\">）移动到光标所在行的最后一个字符：</span>$\r\n     <span class=\"hljs-number\">11</span><span class=\"zh-hans\">）移动到光标所在行的开头：</span><span class=\"hljs-number\">0</span><span class=\"zh-hans\">（数字零）</span>\r\n     <span class=\"hljs-number\">12</span><span class=\"zh-hans\">）移动到光标的第一个一个字符：</span>^\r\n     <span class=\"hljs-number\">13</span><span class=\"zh-hans\">）反撤销一次：</span><span class=\"hljs-section\">control</span>+r\r\n     <span class=\"hljs-number\">14</span><span class=\"zh-hans\">）撤销：</span>u\r\n     <span class=\"hljs-number\">15</span><span class=\"zh-hans\">）格式化代码：</span>=\r\n     <span class=\"hljs-number\">16</span><span class=\"zh-hans\">）从光标所在行选中：</span>V\r\n     <span class=\"hljs-number\">17</span><span class=\"zh-hans\">）从光标所在字符选中：</span>v\r\n     <span class=\"hljs-number\">18</span><span class=\"zh-hans\">）退出窗口：</span><span class=\"hljs-section\">control</span>+z\r\n     <span class=\"hljs-number\">19</span>   <span class=\"zh-hans\">进入窗口：</span>f+g <span class=\"zh-hans\">回车</span></code></pre>','chmod、tar、vim相关命令','','inherit','closed','closed','','112-revision-v1','','','2018-04-18 10:20:30','2018-04-18 10:20:30','',112,'http://blkid.cn/?p=114',0,'revision','',0),(118,1,'2018-05-03 12:02:25','2018-05-03 12:02:25','','345','','inherit','open','closed','','345','','','2018-05-03 12:02:25','2018-05-03 12:02:25','',117,'http://blkid.cn/wp-content/uploads/2018/05/345.jpg',0,'attachment','image/jpeg',0),(119,1,'2018-05-03 12:20:29','2018-05-03 12:20:29','<p data-source-line=\"211\">github新建仓库分支后：</p>\r\n<p data-source-line=\"213\">echo \"# shanfeng\" &gt;&gt; <a href=\"http://README.md\">README.md</a></p>\r\n<p data-source-line=\"213\">1、初始化项目</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git init</code></p>\r\n<p data-source-line=\"213\">2、创建readme.md 文件</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git add README.md</code></p>\r\n<p data-source-line=\"213\">3、本地提交</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git commit -m \"first commit\"</code></p>\r\n<p data-source-line=\"213\">4、本地添加远程提交仓库</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git remote add origin https://github.com/doublepixel/shanfeng.git</code></p>\r\n<p data-source-line=\"213\">5、提交至远程仓库</p>\r\n<p data-source-line=\"213\"><code class=\"hljs\">git push -u origin master</code></p>\r\n\r\n<pre data-source-line=\"215\"><img class=\"alignnone size-medium wp-image-118\" src=\"http://blkid.cn/wp-content/uploads/2018/05/345-300x259.jpg\" alt=\"\" width=\"300\" height=\"259\" /></pre>','git 本地创建版本，并同步至github','','inherit','closed','closed','','117-revision-v1','','','2018-05-03 12:20:29','2018-05-03 12:20:29','',117,'http://blkid.cn/?p=119',0,'revision','',0),(120,1,'2018-05-04 02:05:34','2018-05-04 02:05:34','<h3 id=\"查看\" data-source-line=\"1\">查看</h3>\r\n<p data-source-line=\"2\">查看远程提交地址</p>\r\n\r\n<pre data-source-line=\"4\"><code class=\"hljs\"><span class=\"hljs-attribute\">git remote -v</span>\r\n</code></pre>\r\n<h3 id=\"更改\" data-source-line=\"8\">更改</h3>\r\n<p data-source-line=\"10\">1、修改命令</p>\r\n\r\n<pre data-source-line=\"11\"><code class=\"hljs\">git remote set-url origin https://github.com/doublepixel/YaoDaoPic.git\r\n</code></pre>\r\n<p data-source-line=\"15\">2、先删后加</p>\r\n\r\n<pre data-source-line=\"18\"><code class=\"hljs\">git remote rm origin\r\ngit remote add origin https://github.com/doublepixel/YaoDaoPic.git\r\n</code></pre>\r\n<p data-source-line=\"23\">3、直接修改config文件</p>\r\n\r\n<pre data-source-line=\"25\"><code class=\"hljs\">vim ./.git<span class=\"hljs-built_in\">/config</span></code></pre>','git修改远程仓库地址','','publish','open','open','','git%e4%bf%ae%e6%94%b9%e8%bf%9c%e7%a8%8b%e4%bb%93%e5%ba%93%e5%9c%b0%e5%9d%80','','','2018-05-04 02:05:34','2018-05-04 02:05:34','',0,'http://blkid.cn/?p=120',0,'post','',0),(121,1,'2018-05-04 02:05:21','2018-05-04 02:05:21','','5678','','inherit','open','closed','','5678','','','2018-05-04 02:05:21','2018-05-04 02:05:21','',120,'http://blkid.cn/wp-content/uploads/2018/05/5678.jpg',0,'attachment','image/jpeg',0),(122,1,'2018-05-04 02:05:34','2018-05-04 02:05:34','<h3 id=\"查看\" data-source-line=\"1\">查看</h3>\r\n<p data-source-line=\"2\">查看远程提交地址</p>\r\n\r\n<pre data-source-line=\"4\"><code class=\"hljs\"><span class=\"hljs-attribute\">git remote -v</span>\r\n</code></pre>\r\n<h3 id=\"更改\" data-source-line=\"8\">更改</h3>\r\n<p data-source-line=\"10\">1、修改命令</p>\r\n\r\n<pre data-source-line=\"11\"><code class=\"hljs\">git remote set-url origin https://github.com/doublepixel/YaoDaoPic.git\r\n</code></pre>\r\n<p data-source-line=\"15\">2、先删后加</p>\r\n\r\n<pre data-source-line=\"18\"><code class=\"hljs\">git remote rm origin\r\ngit remote add origin https://github.com/doublepixel/YaoDaoPic.git\r\n</code></pre>\r\n<p data-source-line=\"23\">3、直接修改config文件</p>\r\n\r\n<pre data-source-line=\"25\"><code class=\"hljs\">vim ./.git<span class=\"hljs-built_in\">/config</span></code></pre>','git修改远程仓库地址','','inherit','closed','closed','','120-revision-v1','','','2018-05-04 02:05:34','2018-05-04 02:05:34','',120,'http://blkid.cn/?p=122',0,'revision','',0),(123,1,'2018-05-04 10:11:38','0000-00-00 00:00:00','','自动草稿','','auto-draft','open','open','','','','','2018-05-04 10:11:38','0000-00-00 00:00:00','',0,'http://blkid.cn/?p=123',0,'post','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (1,1,0),(18,2,0),(19,2,0),(20,2,0),(21,2,0),(64,19,0),(64,14,0),(64,18,0),(51,4,0),(67,20,0),(37,1,0),(51,14,0),(67,14,0),(71,20,0),(71,14,0),(73,9,0),(73,14,0),(94,5,0),(94,14,0),(101,21,0),(101,14,0),(101,8,0),(101,22,0),(103,5,0),(103,14,0),(105,9,0),(105,14,0),(109,23,0),(109,14,0),(112,8,0),(112,14,0),(112,21,0),(117,19,0),(117,14,0),(117,18,0),(120,18,0),(120,14,0),(120,19,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=MyISAM AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,0),(2,2,'nav_menu','',0,4),(4,4,'post_tag','',0,1),(5,5,'post_tag','',0,2),(6,6,'post_tag','',0,0),(7,7,'post_tag','',0,0),(8,8,'post_tag','',0,2),(9,9,'post_tag','',0,2),(10,10,'post_tag','',0,0),(11,11,'post_tag','',0,0),(12,12,'post_tag','',0,0),(13,13,'category','',0,0),(14,14,'category','',0,13),(15,15,'category','',0,0),(16,16,'category','',0,0),(17,17,'category','',0,0),(18,18,'post_tag','',0,3),(19,19,'post_tag','',0,3),(20,20,'post_tag','',0,2),(21,21,'post_tag','',0,2),(22,22,'post_format','',0,1),(23,23,'post_tag','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=MyISAM AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'Top Menu','top-menu',0),(4,'服务器','%e6%9c%8d%e5%8a%a1%e5%99%a8',0),(5,'python','python',0),(6,'jmeter','jmeter',0),(7,'性能测试','%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95',0),(8,'Linux','linux',0),(9,'macbook pro','macbook-pro',0),(10,'appium','appium',0),(11,'selenium','selenium',0),(12,'mysql','mysql',0),(13,'tech','tech',0),(14,'技术','%e6%8a%80%e6%9c%af',0),(15,'生活','%e7%94%9f%e6%b4%bb',0),(16,'日迹','%e6%97%a5%e8%bf%b9',0),(17,'测试','%e6%b5%8b%e8%af%95',0),(18,'git','git',0),(19,'版本控制','%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6',0),(20,'http','http',0),(21,'shell','shell',0),(22,'post-format-aside','post-format-aside',0),(23,'django','django',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=MyISAM AUTO_INCREMENT=43 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'nickname','大拇哥'),(2,1,'first_name',''),(3,1,'last_name',''),(4,1,'description',' 佛语: 一切都是最好的安排！'),(5,1,'rich_editing','true'),(6,1,'syntax_highlighting','true'),(7,1,'comment_shortcuts','true'),(8,1,'admin_color','blue'),(9,1,'use_ssl','0'),(10,1,'show_admin_bar_front','true'),(11,1,'locale','zh_CN'),(12,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(13,1,'wp_user_level','10'),(14,1,'dismissed_wp_pointers','text_widget_custom_html'),(15,1,'show_welcome_panel','1'),(16,1,'session_tokens','a:1:{s:64:\"7cc1101c92ebf42c4c3167ae5c678f0e7f6cc9714ebb57e4553fc9f15ead874e\";a:4:{s:10:\"expiration\";i:1525852971;s:2:\"ip\";s:15:\"111.204.113.130\";s:2:\"ua\";s:121:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\";s:5:\"login\";i:1524643371;}}'),(17,1,'wp_dashboard_quick_press_last_post_id','123'),(18,1,'community-events-location','a:1:{s:2:\"ip\";s:13:\"111.204.113.0\";}'),(19,1,'wp_user-settings','libraryContent=browse&hidetb=1&editor=tinymce&post_dfw=off'),(20,1,'wp_user-settings-time','1523189774'),(21,1,'nav_menu_recently_edited','2'),(22,1,'managenav-menuscolumnshidden','a:5:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";i:4;s:15:\"title-attribute\";}'),(23,1,'metaboxhidden_nav-menus','a:2:{i:0;s:12:\"add-post_tag\";i:1;s:15:\"add-post_format\";}'),(24,1,'closedpostboxes_dashboard','a:1:{i:0;s:19:\"dashboard_right_now\";}'),(25,1,'metaboxhidden_dashboard','a:0:{}'),(26,2,'nickname','yaoyao'),(27,2,'first_name',''),(28,2,'last_name',''),(29,2,'description',''),(30,2,'rich_editing','true'),(31,2,'syntax_highlighting','true'),(32,2,'comment_shortcuts','false'),(33,2,'admin_color','fresh'),(34,2,'use_ssl','0'),(35,2,'show_admin_bar_front','true'),(36,2,'locale',''),(37,2,'wp_capabilities','a:1:{s:6:\"author\";b:1;}'),(38,2,'wp_user_level','2'),(39,2,'dismissed_wp_pointers',''),(40,2,'session_tokens','a:1:{s:64:\"c3bc0a5ad71420f41980cc5f63a0e8f60b1479d73331e9a49aed7269e2a46c86\";a:4:{s:10:\"expiration\";i:1523351367;s:2:\"ip\";s:15:\"111.204.113.130\";s:2:\"ua\";s:121:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\";s:5:\"login\";i:1523178567;}}'),(41,2,'wp_dashboard_quick_press_last_post_id','61'),(42,2,'community-events-location','a:1:{s:2:\"ip\";s:13:\"111.204.113.0\";}');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(255) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`),
  KEY `user_email` (`user_email`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'blk','$P$BwLZt8gG9g1.2i9E2XX7LlP8taVpH0/','blk','lvyz0207@163.com','http://blkid.cn','2018-04-06 07:01:48','',0,'大拇哥'),(2,'yaoyao','$P$B8X7zh4bGX7q3rqsLCXNJ5sqnLjWhT.','yaoyao','1097581768@qq.com','','2018-04-08 09:08:59','1523178539:$P$BfToQ0cOmBdaP9eG3xUtcKLztYN9K81',0,'yaoyao');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-05-07 16:35:58
